%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:40:41 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUUAACAAAGACUUUUAUGACUUUGUUGUAUCUAAAGGCUUCUUUAAGGAAGGAAGUUCAGUUGAACUAAAACACUUCUUCUUUGCUCAAGAUGGUAAUGCUGCUAUUACUGAUUAUAACUAUUAUAAUUAUAAUCUACCUACUAUGGGUGACAUCAAAC\
) def
/coor [
[50.70792770 237.81021118]
[43.61680222 235.36767578]
[31.36225510 244.01788330]
[19.10770607 252.66809082]
[6.85315847 261.31829834]
[0.04078186 275.59771729]
[-14.81896496 276.61614990]
[-27.07351303 285.26635742]
[-39.32806015 293.91656494]
[-51.58261108 302.56677246]
[-56.82276154 310.11172485]
[-64.16172791 311.26345825]
[-76.58271790 319.67291260]
[-89.00371552 328.08233643]
[-101.42471313 336.49179077]
[-113.84571075 344.90124512]
[-126.26670837 353.31069946]
[-131.65307617 360.75198364]
[-139.01310730 361.76028442]
[-151.59582520 369.92578125]
[-164.17854309 378.09127808]
[-164.86117554 393.59332275]
[-174.55163574 405.71252441]
[-189.52372742 409.78875732]
[-204.02040100 404.25466919]
[-212.46737671 391.23818970]
[-211.61660767 375.74447632]
[-201.79525757 363.73110962]
[-186.77981567 359.81753540]
[-172.34403992 365.50854492]
[-159.76132202 357.34304810]
[-147.17860413 349.17758179]
[-134.67616272 340.88970947]
[-122.25515747 332.48025513]
[-109.83415985 324.07080078]
[-97.41316986 315.66134644]
[-84.99217224 307.25189209]
[-72.57117462 298.84243774]
[-60.23281479 290.31222534]
[-47.97826767 281.66201782]
[-35.72371674 273.01181030]
[-23.46916962 264.36160278]
[-17.53332138 250.70089722]
[-1.79704654 249.06375122]
[10.45750237 240.41354370]
[22.71204948 231.76333618]
[34.96659851 223.11312866]
[45.52133179 212.45491028]
[54.05156708 200.11656189]
[54.92496872 185.24757385]
[69.13725281 178.29621887]
[77.66748810 165.95785522]
[86.19772339 153.61949158]
[94.72795105 141.28112793]
[103.25818634 128.94277954]
[92.46672821 129.54824829]
[81.71216583 126.09014130]
[72.53180695 118.69950867]
[66.36181641 108.08831787]
[64.31925201 95.48895264]
[67.01625061 82.51295471]
[59.47404480 69.54703522]
[51.93183899 56.58111572]
[36.49326706 54.09423447]
[26.30433083 42.23170853]
[26.17593193 26.59465027]
[36.16869736 14.56640720]
[51.56435013 11.82634449]
[65.09352875 19.66823769]
[70.36817932 34.38938141]
[64.89775848 49.03890610]
[72.43996429 62.00482941]
[79.98217010 74.97074890]
[87.43902588 75.77411652]
[87.03630829 60.77952194]
[86.63359070 45.78493118]
[86.23087311 30.79033661]
[85.82816315 15.79574394]
[78.93724060 2.47226071]
[81.00856018 -12.38403893]
[91.28105164 -23.31453705]
[105.98033142 -26.30306435]
[119.70545959 -20.25155258]
[127.41345215 -7.38349724]
[126.27217102 7.57302237]
[116.70192719 19.12194252]
[113.11462402 33.68666840]
[109.52732849 48.25139618]
[105.94002533 62.81612396]
[102.35272217 77.38085175]
[109.80957031 78.18421936]
[119.94042969 67.12231445]
[130.07128906 56.06040573]
[140.20213318 44.99849701]
[150.33299255 33.93659210]
[160.46385193 22.87468719]
[170.59471130 11.81278038]
[173.60957336 -4.30685425]
[189.16481018 -9.49977398]
[201.25852966 1.57605267]
[197.44975281 17.52676392]
[181.65661621 21.94363594]
[171.52575684 33.00554276]
[161.39489746 44.06744766]
[151.26403809 55.12935257]
[141.13319397 66.19126129]
[131.00233459 77.25316620]
[120.87147522 88.31507111]
[123.45190430 95.35718536]
[138.22962952 97.92984772]
[128.61274719 109.44142151]
[131.19317627 116.48353577]
[146.07269287 118.38095856]
[160.95219421 120.27838135]
[175.83171082 122.17579651]
[190.71121216 124.07321930]
[205.59072876 125.97064209]
[220.47023010 127.86806488]
[235.34974670 129.76548767]
[250.22924805 131.66290283]
[265.10876465 133.56031799]
[279.98828125 135.45774841]
[296.46499634 131.46353149]
[304.86431885 146.19064331]
[293.03793335 158.33859253]
[278.09085083 150.33724976]
[263.21133423 148.43983459]
[248.33183289 146.54240417]
[233.45231628 144.64498901]
[218.57281494 142.74757385]
[203.69329834 140.85014343]
[188.81379700 138.95272827]
[173.93428040 137.05531311]
[159.05477905 135.15788269]
[144.17526245 133.26046753]
[129.29576111 131.36305237]
[115.59654999 137.47300720]
[107.06631470 149.81137085]
[98.53607941 162.14973450]
[90.00584412 174.48808289]
[81.47560883 186.82644653]
[79.99207306 202.57794189]
[66.38992310 208.64678955]
[57.85969162 220.98515320]
[68.45918274 222.70343018]
[78.57230377 229.40774536]
[86.34334564 240.80979919]
[90.67135620 255.17184448]
[94.99935913 269.53390503]
[99.32736206 283.89593506]
[103.65536499 298.25799561]
[115.96808624 309.08984375]
[112.47892761 325.11349487]
[96.77723694 329.84521484]
[85.01557159 318.41738892]
[89.29331970 302.58599854]
[84.96531677 288.22393799]
[80.63731384 273.86190796]
[76.30930328 259.49984741]
[71.98130035 245.13780212]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[5 44]
[7 42]
[8 41]
[9 40]
[10 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[19 32]
[20 31]
[21 30]
[48 144]
[49 143]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[61 73]
[62 72]
[63 71]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[112 136]
[113 135]
[114 134]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 45 1 gmark
7 42 3 gmark
7 cmark
42 cmark
9 cmark
40 cmark
39 cmark
12 cmark
36 cmark
15 35 2 gmark
35 cmark
19 32 2 gmark
20 31 2 gmark
21 30 2 gmark
21 cmark
30 cmark
48 144 3 gmark
48 cmark
51 141 2 gmark
51 cmark
141 cmark
54 138 3 gmark
54 cmark
138 cmark
55 137 2 gmark
72 cmark
63 71 1 gmark
108 cmark
94 105 1 gmark
96 cmark
97 102 1 gmark
136 cmark
118 cmark
119 129 2 gmark
119 cmark
120 128 2 gmark
120 cmark
128 cmark
121 127 3 gmark
127 cmark
148 159 3 gmark
149 158 3 gmark
150 157 1 gmark
156 cmark

% End Annotations
% show it
showpage
end
%%EOF
