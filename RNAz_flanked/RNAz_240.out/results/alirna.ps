%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:50:40 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAAUAAUUGCACUGGUGGUACUGAAAUUAGAGACCUCAUUUGUGUACAAAAUUUUAAUGGCAUCAAAGUGUUGCCUCCUCUGCUCUCAGAAAAUCAGAUCACUGGAUACACUUCGGCUGCCACUGCUGCUACUAUGUUUCCUCCAUGGAC______A\
) def
/coor [
[274.22341919 195.14195251]
[261.45614624 189.67735291]
[249.84780884 182.04743958]
[239.76211548 172.48966980]
[231.51530457 161.30191040]
[225.36627197 148.83320618]
[221.50845337 135.47279358]
[220.06372070 121.63807678]
[221.07858276 107.76146698]
[206.57690430 103.92721558]
[192.07522583 100.09296417]
[179.37011719 107.78163147]
[164.60873413 104.09973907]
[156.63029480 90.72130585]
[142.12863159 86.88706207]
[127.62695312 83.05281067]
[98.12587738 147.17289734]
[85.23605347 154.84443665]
[72.34622955 162.51596069]
[64.44457245 176.22268677]
[49.55062103 176.08303833]
[36.66079330 183.75457764]
[34.32847977 199.21725464]
[22.56846619 209.52433777]
[6.93347645 209.80915833]
[-5.19412661 199.93721008]
[-8.08805943 184.56974792]
[-0.38189650 170.96278381]
[14.28574848 165.54115295]
[28.98926163 170.86474609]
[41.87908554 163.19322205]
[48.85877991 150.03520203]
[64.67469788 149.62614441]
[77.56452179 141.95460510]
[90.45434570 134.28308105]
[89.19280243 126.88993835]
[75.12585449 121.68215179]
[86.66970825 112.10366058]
[85.40815735 104.71051788]
[70.70369720 101.74761200]
[55.99923706 98.78469849]
[41.29477692 95.82178497]
[25.93399048 101.56446075]
[13.45413494 90.92560577]
[16.69341469 74.84956360]
[32.31953812 69.87399292]
[44.25768661 81.11732483]
[58.96214676 84.08023834]
[73.66661072 87.04315186]
[88.37107086 90.00605774]
[92.88732910 84.01828766]
[80.91178131 74.98577118]
[68.93624115 65.95325470]
[56.96084976 56.92053604]
[65.99376678 44.94529343]
[77.96875763 53.97771072]
[89.94430542 63.01022720]
[101.91984558 72.04274750]
[106.43610382 66.05497742]
[99.54664612 52.73073578]
[92.65718842 39.40649796]
[85.76772308 26.08225822]
[70.39915466 24.73670769]
[58.21174240 15.27781868]
[53.09445190 0.72388792]
[56.68019485 -14.28097820]
[67.82476807 -24.94878197]
[82.97197723 -27.87546539]
[97.28841400 -22.12713432]
[106.20574188 -9.53806114]
[106.87848663 5.87462711]
[99.09196472 19.19279861]
[105.98142242 32.51703644]
[112.87088013 45.84127808]
[119.76034546 59.16551590]
[131.46119690 68.55113983]
[145.96287537 72.38538361]
[160.46455383 76.21963501]
[174.01263428 68.53282928]
[188.66477966 72.62788391]
[195.90948486 85.59129333]
[210.41114807 89.42554474]
[224.91282654 93.25978851]
[232.09416199 78.71904755]
[242.10069275 65.96353149]
[254.50564575 55.53376770]
[268.78067017 47.87114716]
[284.31832886 43.29927826]
[300.45800781 42.01029205]
[316.51388550 44.05679321]
[331.80422974 49.34970093]
[345.68017578 57.66213226]
[357.55340576 68.63912201]
[366.92098999 81.81277466]
[373.38681030 96.62223816]
[376.67813110 112.43753052]
[376.65728760 128.58639526]
[391.36175537 131.54930115]
[406.06622314 134.51220703]
[420.77069092 137.47512817]
[435.47512817 140.43803406]
[450.78637695 129.35356140]
[469.03622437 132.86421204]
[478.80221558 148.30094910]
[493.61282349 150.67691040]
[508.42346191 153.05288696]
[523.27496338 147.59918213]
[534.61602783 157.25477600]
[549.42663574 159.63075256]
[564.23724365 162.00671387]
[576.95550537 153.01316833]
[591.94177246 155.63372803]
[600.43737793 167.81405640]
[615.24798584 170.19003296]
[630.05859375 172.56599426]
[644.86926270 174.94197083]
[659.67987061 177.31793213]
[674.53137207 171.86424255]
[685.87243652 181.51983643]
[700.68304443 183.89579773]
[715.80340576 177.54698181]
[728.69635010 187.68127441]
[726.09875488 203.87338257]
[710.68280029 209.46626282]
[698.30706787 198.70643616]
[683.49645996 196.33045959]
[669.70428467 201.95410156]
[657.30389404 192.12857056]
[642.49328613 189.75259399]
[627.68261719 187.37663269]
[612.87200928 185.00065613]
[598.06140137 182.62469482]
[586.18212891 191.53642273]
[571.12817383 189.33782959]
[561.86132812 176.81735229]
[547.05065918 174.44137573]
[532.24005127 172.06541443]
[518.44787598 177.68905640]
[506.04748535 167.86351013]
[491.23687744 165.48754883]
[476.42623901 163.11157227]
[468.80334473 171.68553162]
[457.86694336 175.53120422]
[446.31832886 173.57525635]
[437.07025146 166.19287109]
[432.51223755 155.14248657]
[417.80776978 152.17958069]
[403.10330200 149.21667480]
[388.39886475 146.25375366]
[373.69439697 143.29084778]
[368.53338623 156.14772034]
[361.18658447 167.89773560]
[351.88259888 178.17282104]
[340.91134644 186.65084839]
[328.61511230 193.06568909]
[315.37765503 197.21562195]
[301.61254883 198.96961975]
] def
/pairs [
[9 83]
[10 82]
[11 81]
[14 78]
[15 77]
[16 76]
[17 35]
[18 34]
[19 33]
[21 31]
[22 30]
[39 50]
[40 49]
[41 48]
[42 47]
[59 75]
[60 74]
[61 73]
[62 72]
[97 150]
[98 149]
[99 148]
[100 147]
[101 146]
[104 141]
[105 140]
[106 139]
[108 137]
[109 136]
[110 135]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
83 cmark
10 82 1 gmark
10 cmark
11 81 2 gmark
16 76 2 gmark
16 cmark
76 cmark
18 34 1 gmark
18 cmark
34 cmark
21 31 1 gmark
21 cmark
31 cmark
22 30 1 gmark
22 cmark
39 50 2 gmark
49 cmark
61 73 2 gmark
61 cmark
62 72 2 gmark
97 150 1 gmark
98 149 3 gmark
100 cmark
101 146 2 gmark
101 cmark
104 141 1 gmark
105 cmark
140 cmark
106 139 3 gmark
108 137 2 gmark
109 136 3 gmark
110 135 1 gmark
113 132 3 gmark
113 cmark
132 cmark
114 131 2 gmark
114 cmark
131 cmark
115 130 3 gmark
115 cmark
116 129 2 gmark
117 128 1 gmark
119 126 1 gmark
119 cmark
126 cmark
120 125 2 gmark
120 cmark
125 cmark

% End Annotations
% show it
showpage
end
%%EOF
