%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:02:56 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AAUUAUGUCUUUACUGGUUAUCAUGUAACUAAAAAUAGUAAAGUACAAAUAGGAGAGUACACCUUUGAAAAAGGUGACUAUGGUGAUGCUGUUGUCUACAGAGCUACUACAACUUACAAACUAAAUGUUGGUGACUACUUUGUGCUGACAUCACAUA\
) def
/coor [
[113.78167725 152.12426758]
[101.29035187 153.89997864]
[88.72836304 152.72402954]
[76.78363037 148.66079712]
[66.11027527 141.93280029]
[57.29279327 132.90847778]
[44.25298691 140.32220459]
[31.21318436 147.73594666]
[18.24772835 155.27896118]
[5.35790348 162.95048523]
[-7.53192186 170.62202454]
[-20.42174721 178.29354858]
[-33.31157303 185.96508789]
[-46.20139694 193.63661194]
[-59.09122086 201.30815125]
[-71.50078583 209.73446655]
[-83.38593292 218.88558960]
[-95.27108765 228.03672791]
[-107.15624237 237.18785095]
[-119.04139709 246.33897400]
[-130.92654419 255.49009705]
[-139.78785706 269.94393921]
[-156.12989807 265.43014526]
[-156.31643677 248.47723389]
[-140.07768250 243.60494995]
[-128.19252014 234.45382690]
[-116.30737305 225.30268860]
[-104.42221832 216.15156555]
[-92.53706360 207.00044250]
[-80.65190887 197.84931946]
[-95.27153778 194.49276733]
[-103.39091492 181.88024902]
[-100.39366913 167.18273926]
[-87.98391724 158.75671387]
[-73.21737671 161.39286804]
[-64.48974609 173.59239197]
[-66.76275635 188.41831970]
[-53.87292862 180.74679565]
[-40.98310471 173.07525635]
[-28.09327888 165.40373230]
[-15.20345402 157.73219299]
[-2.31362867 150.06066895]
[10.57619667 142.38912964]
[14.73839569 136.23214722]
[23.79944611 134.69615173]
[36.83924866 127.28240967]
[49.87905502 119.86866760]
[47.47092819 112.14783478]
[46.24481201 104.15364838]
[46.22829056 96.06599426]
[47.42173767 88.06686401]
[49.79830170 80.33625793]
[53.30450439 73.04811859]
[57.86144638 66.36645508]
[63.36658478 60.44161224]
[69.69605255 55.40690613]
[63.07286835 41.94832230]
[56.44968796 28.48974037]
[49.81629944 22.12891388]
[49.83160782 14.69708347]
[43.47732162 1.10947740]
[37.12303543 -12.47812843]
[30.76874733 -26.06573486]
[24.41445923 -39.65333939]
[18.06017303 -53.24094772]
[11.70588589 -66.82855225]
[-0.48089266 -78.61492920]
[7.47123575 -93.58824158]
[24.06075096 -90.09191132]
[25.29349136 -73.18283844]
[31.64777946 -59.59523392]
[38.00206757 -46.00762939]
[44.35635376 -32.42002106]
[50.71063995 -18.83241653]
[57.06492615 -5.24480963]
[63.41921616 8.34279633]
[69.90827179 21.86655807]
[76.53145599 35.32514191]
[83.15463257 48.78372574]
[106.42694855 46.46900558]
[128.48995972 54.22669983]
[145.19229126 70.59712219]
[153.39122009 92.50000000]
[168.39122009 92.50000000]
[183.39122009 92.50000000]
[198.39122009 92.50000000]
[213.39122009 92.50000000]
[212.72772217 81.66550446]
[218.31513977 69.93590546]
[230.41574097 60.62797165]
[242.30088806 51.47684479]
[254.18605042 42.32571793]
[266.07119751 33.17459106]
[277.95635986 24.02346420]
[289.74993896 14.75463200]
[301.45080566 5.36901093]
[313.15167236 -4.01661015]
[324.85250854 -13.40223122]
[336.55337524 -22.78785324]
[341.99380493 -38.25827408]
[358.15948486 -41.01559448]
[368.42056274 -28.22331810]
[362.22131348 -13.04104424]
[345.93899536 -11.08699322]
[334.23812866 -1.70137167]
[322.53729248 7.68424940]
[310.83642578 17.06987000]
[299.13555908 26.45549202]
[295.86779785 33.13037872]
[287.10748291 35.90861893]
[275.22232056 45.05974579]
[263.33718872 54.21087265]
[251.45202637 63.36199951]
[239.56686401 72.51313019]
[239.11975098 79.99978638]
[253.93724060 77.66696167]
[268.75473022 75.33413696]
[282.12469482 68.53385162]
[296.73034668 71.95069122]
[305.69622803 83.97621155]
[304.80172729 98.94951630]
[294.46792603 109.82206726]
[279.55935669 111.47572327]
[267.09457397 103.13269043]
[252.66004944 99.05290222]
[238.22552490 94.97310638]
[237.77841187 102.45977020]
[248.48994446 112.96040344]
[259.20147705 123.46102905]
[269.91299438 133.96166992]
[280.62451172 144.46229553]
[291.33602905 154.96292114]
[299.70343018 158.76405334]
[302.15353394 165.78042603]
[312.65417480 176.49194336]
[328.45816040 176.39842224]
[339.64053345 187.56668091]
[339.56695557 203.37080383]
[328.28109741 214.43447876]
[312.47863770 214.19381714]
[301.53491211 202.79161072]
[301.94262695 186.99256897]
[291.44201660 176.28105164]
[280.83538818 165.67445374]
[270.12387085 155.17381287]
[259.41235352 144.67318726]
[248.70083618 134.17256165]
[237.98930359 123.67192841]
[227.27778625 113.17129517]
[213.39122009 107.50000000]
[198.39122009 107.50000000]
[183.39122009 107.50000000]
[168.39122009 107.50000000]
[153.39122009 107.50000000]
[150.18627930 119.70306396]
[144.23301697 130.82714844]
[135.85746765 140.26307678]
] def
/pairs [
[6 47]
[7 46]
[8 45]
[9 43]
[10 42]
[11 41]
[12 40]
[13 39]
[14 38]
[15 37]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[56 79]
[57 78]
[58 77]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[83 154]
[84 153]
[85 152]
[86 151]
[87 150]
[90 114]
[91 113]
[92 112]
[93 111]
[94 110]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[134 143]
[135 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
45 cmark
9 43 1 gmark
9 cmark
42 cmark
12 40 1 gmark
15 37 1 gmark
30 cmark
18 28 1 gmark
19 27 1 gmark
20 26 1 gmark
21 25 1 gmark
21 cmark
25 cmark
57 78 1 gmark
78 cmark
60 cmark
61 75 1 gmark
62 74 2 gmark
62 cmark
63 73 1 gmark
63 cmark
73 cmark
64 72 2 gmark
72 cmark
71 cmark
66 70 2 gmark
84 153 3 gmark
87 150 3 gmark
90 114 2 gmark
90 cmark
114 cmark
93 111 3 gmark
111 cmark
94 110 3 gmark
95 108 3 gmark
95 cmark
108 cmark
96 107 2 gmark
96 cmark
107 cmark
99 104 3 gmark
129 147 1 gmark
129 cmark
147 cmark
145 cmark
132 144 1 gmark
144 cmark
135 cmark

% End Annotations
% show it
showpage
end
%%EOF
