%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:09:39 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUAGAUGUCCUAAGGAAAUUGUUGAUACUGUGUCUGCCUUGGUUUAUGAUAAUAAGCUUAAGGCUAAAAAUGACAAUAGUUCAUUAUGCUUUAAAGUCUAUUAUAAGGGCGUUACAACACAUGAAAGUUCAAGUGCUGUAAAUAUGCAACAAAUAUAUUU\
) def
/coor [
[71.33074951 182.26664734]
[80.53927612 170.42591858]
[92.11398315 160.88516235]
[105.49473572 154.10610962]
[120.03396606 150.41682434]
[135.02806091 149.99584961]
[149.75016785 152.86318970]
[138.39651489 143.06040955]
[127.04286194 133.25761414]
[115.68920898 123.45483398]
[104.33555603 113.65204620]
[90.63903046 110.84193420]
[85.86165619 97.70160675]
[74.50800323 87.89881897]
[63.15435410 78.09603119]
[51.80070496 68.29325104]
[31.87506104 65.46582031]
[26.20644951 47.00998688]
[14.47897625 37.65764236]
[2.75150418 28.30529404]
[-13.46453571 33.02975464]
[-29.15216446 27.23295212]
[-38.21817398 13.37686253]
[-37.26686859 -2.98813033]
[-49.17458725 -12.10987377]
[-61.08230972 -21.23161697]
[-72.99002838 -30.35335922]
[-84.89775085 -39.47510147]
[-96.80547333 -48.59684372]
[-108.71318817 -57.71858978]
[-120.62091064 -66.84033203]
[-132.52862549 -75.96207428]
[-139.98286438 -76.20541382]
[-145.70909119 -79.75311279]
[-148.53604126 -85.06565094]
[-162.46321106 -90.63646698]
[-176.39036560 -96.20729065]
[-190.31753540 -101.77810669]
[-204.24470520 -107.34893036]
[-218.17187500 -112.91974640]
[-232.15272522 -118.35442352]
[-246.18594360 -123.65244293]
[-260.21914673 -128.95045471]
[-274.25234985 -134.24847412]
[-288.28558350 -139.54647827]
[-302.31878662 -144.84449768]
[-316.35198975 -150.14251709]
[-332.43841553 -146.95510864]
[-343.03695679 -159.46922302]
[-337.24475098 -174.81140137]
[-321.02032471 -177.19892883]
[-311.05398560 -164.17573547]
[-297.02078247 -158.87771606]
[-282.98754883 -153.57969666]
[-268.95434570 -148.28167725]
[-254.92114258 -142.98367310]
[-240.88792419 -137.68565369]
[-226.85470581 -132.38763428]
[-219.44880676 -132.97015381]
[-212.60105896 -126.84691620]
[-198.67388916 -121.27609253]
[-184.74671936 -115.70527649]
[-170.81954956 -110.13445282]
[-156.89237976 -104.56363678]
[-142.96522522 -98.99281311]
[-151.77578735 -111.13258362]
[-156.04132080 -125.51330566]
[-155.27499390 -140.49371338]
[-149.56427002 -154.36410522]
[-139.56092834 -165.54144287]
[-126.40661621 -172.75006104]
[-111.60265350 -175.16725159]
[-96.83861542 -172.51712036]
[-83.79951477 -165.10214233]
[-73.97351074 -153.76858521]
[-68.48202515 -139.80995178]
[-67.95182037 -124.81932068]
[-72.44340515 -110.50758362]
[-81.44414520 -98.50814056]
[-93.92678833 -90.19048309]
[-108.46670532 -86.50389862]
[-123.40689087 -87.86979675]
[-111.49916840 -78.74805450]
[-99.59144592 -69.62631226]
[-87.68372345 -60.50456619]
[-75.77600861 -51.38282394]
[-63.86828613 -42.26107788]
[-51.96056366 -33.13933563]
[-40.05284500 -24.01759338]
[-28.14512444 -14.89585114]
[-15.72725391 -19.87421608]
[-2.36564183 -18.03914261]
[8.42238045 -9.76539993]
[13.74346828 2.86321139]
[12.10385132 16.57782173]
[23.83132362 25.93017006]
[35.55879593 35.28251648]
[45.63089371 33.22577286]
[55.36609268 37.16012192]
[61.43041229 46.00038528]
[61.60348892 56.93959808]
[72.95713806 66.74238586]
[84.31079102 76.54516602]
[95.66444397 86.34795380]
[109.36096954 89.15806580]
[114.13834381 102.29839325]
[125.49199677 112.10118103]
[136.84564209 121.90396881]
[148.19929504 131.70675659]
[159.55294800 141.50953674]
[167.90803528 142.90240479]
[173.16543579 148.39533997]
[187.78935242 151.73315430]
[202.41326904 155.07096863]
[217.03718567 158.40878296]
[231.66110229 161.74659729]
[246.83699036 157.27410889]
[257.52346802 167.64950562]
[272.14736938 170.98731995]
[286.77130127 174.32513428]
[301.94717407 169.85264587]
[312.63363647 180.22804260]
[327.25756836 183.56585693]
[341.88146973 186.90367126]
[357.38403320 181.55552673]
[369.58786011 192.50990295]
[365.93872070 208.49789429]
[350.19052124 213.07241821]
[338.54367065 201.52758789]
[323.91973877 198.18977356]
[309.29583740 194.85195923]
[295.16595459 199.56318665]
[283.43347168 188.94905090]
[268.80957031 185.61123657]
[254.18563843 182.27342224]
[240.05575562 186.98464966]
[228.32328796 176.37051392]
[213.69937134 173.03269958]
[199.07545471 169.69488525]
[184.45153809 166.35707092]
[169.82762146 163.01925659]
[180.86128235 173.18086243]
[189.40609741 185.50912476]
[195.04855347 199.40742493]
[197.51556396 214.20315552]
[196.68775940 229.18029785]
[192.60517883 243.61402893]
[185.46542358 256.80584717]
[175.61399841 268.11730957]
[163.52767944 277.00103760]
[149.79135132 283.02709961]
[135.06979370 285.90386963]
[120.07544708 285.49209595]
[105.53395081 281.81176758]
[92.14904022 275.04092407]
[80.56847382 265.50726318]
[71.35267639 253.67219543]
[64.94765472 240.10842896]
[61.66336823 225.47239685]
[61.65876389 210.47239685]
] def
/pairs [
[7 110]
[8 109]
[9 108]
[10 107]
[11 106]
[13 104]
[14 103]
[15 102]
[16 101]
[18 97]
[19 96]
[20 95]
[24 90]
[25 89]
[26 88]
[27 87]
[28 86]
[29 85]
[30 84]
[31 83]
[32 82]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[112 141]
[113 140]
[114 139]
[115 138]
[116 137]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 110 1 gmark
110 cmark
8 cmark
10 107 1 gmark
13 104 2 gmark
14 103 3 gmark
14 cmark
103 cmark
96 cmark
20 cmark
95 cmark
25 89 3 gmark
26 88 1 gmark
26 cmark
28 86 3 gmark
29 85 1 gmark
29 cmark
85 cmark
30 84 1 gmark
84 cmark
31 83 3 gmark
32 82 1 gmark
35 65 2 gmark
35 cmark
65 cmark
38 62 1 gmark
38 cmark
62 cmark
56 cmark
112 141 2 gmark
113 140 3 gmark
113 cmark
140 cmark
115 cmark
138 cmark
116 137 2 gmark
116 cmark
137 cmark
119 134 1 gmark
119 cmark
120 133 2 gmark
122 131 3 gmark

% End Annotations
% show it
showpage
end
%%EOF
