%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:26:25 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUCAUUUGAUGUACUGAAAUCAGAGGACACGCAGGGAAUGGAUAAUCUUGCCUGCGAAGAUCUAAAACCAGUCUCUGAAGAAGUAGUGGAAAAUCCUACCAUACAGAAAGACGUUCUUGAGUGUAAUGUGAAAACUACCGAAGUUGUAGGAGACAUUAUA\
) def
/coor [
[218.94773865 222.00019836]
[217.89184570 198.44503784]
[205.80841064 189.55737305]
[188.30775452 188.58851624]
[181.00817871 171.70843506]
[168.75361633 163.05822754]
[156.49906921 154.40802002]
[144.24452209 145.75781250]
[131.90617371 137.22758484]
[119.48516846 128.81813049]
[107.06417084 120.40868378]
[79.70568085 106.63266754]
[65.47644806 101.88620758]
[51.24721146 97.13974762]
[37.01797867 92.39328766]
[26.40606117 101.23445129]
[12.91595840 103.64545441]
[0.10291363 99.09989929]
[-8.71004391 88.89049530]
[-11.29382420 75.76373291]
[-25.42773819 70.74053955]
[-39.56165314 65.71734619]
[-53.69556427 60.69415283]
[-67.82947540 55.67095947]
[-81.96339417 50.64776611]
[-96.09730530 45.62457275]
[-114.32382965 61.42715073]
[-138.24800110 63.46379852]
[-158.69099426 51.08599854]
[-167.88774109 29.15011024]
[-182.80143738 27.54337692]
[-197.71513367 25.93664360]
[-212.62882996 24.32991028]
[-227.54254150 22.72317505]
[-242.45623779 21.11644173]
[-257.00579834 27.33101273]
[-268.83105469 18.27493858]
[-283.74475098 16.66820526]
[-292.66372681 18.86761665]
[-298.93273926 14.88185596]
[-311.27697754 24.75079155]
[-326.97457886 22.91749382]
[-336.71243286 10.46962833]
[-334.71328735 -5.20770979]
[-322.16314697 -14.81343174]
[-306.50784302 -12.64863491]
[-297.03533936 0.00234629]
[-282.13803101 1.75450683]
[-267.22433472 3.36124063]
[-253.74148560 -2.96825457]
[-240.84950256 6.20274353]
[-225.93580627 7.80947733]
[-211.02209473 9.41621113]
[-196.10839844 11.02294445]
[-181.19470215 12.62967873]
[-166.28100586 14.23641205]
[-163.55567932 7.62910128]
[-159.64721680 1.63503408]
[-154.68867493 -3.53594804]
[-148.84996033 -7.70212460]
[-142.33200073 -10.71628094]
[-135.35977173 -12.47090816]
[-128.17460632 -12.90203857]
[-121.02581024 -11.99156570]
[-114.16197968 -9.76798916]
[-107.82242584 -6.30552769]
[-102.22876740 -1.72164929]
[-97.57722473 3.82691407]
[-94.03170013 10.14952278]
[-91.71806335 17.02817917]
[-90.71960449 24.22504234]
[-91.07411194 31.49065781]
[-76.94020081 36.51385117]
[-62.80628586 41.53704453]
[-48.67237091 46.56024170]
[-34.53845596 51.58343506]
[-20.40454292 56.60662842]
[-6.27062941 61.62982178]
[6.93924618 51.92327118]
[23.49762535 51.98548508]
[36.90007401 61.98943329]
[41.76443863 78.16405487]
[55.99367142 82.91051483]
[70.22290802 87.65697479]
[84.45214081 92.40343475]
[98.32429504 86.69700623]
[105.09500122 73.31203461]
[111.86571503 59.92705917]
[118.63642120 46.54208374]
[113.47113800 31.60570908]
[120.45538330 17.42840958]
[135.44554138 12.42132854]
[149.54820251 19.55507851]
[154.39651489 34.59733200]
[147.11405945 48.62378693]
[132.02139282 53.31279373]
[125.25068665 66.69776917]
[118.47997284 80.08274078]
[111.70926666 93.46771240]
[115.47362518 107.98768616]
[127.89462280 116.39713287]
[140.31561279 124.80658722]
[149.22511292 127.04410553]
[152.89472961 133.50326538]
[165.14927673 142.15347290]
[177.40382385 150.80368042]
[189.65837097 159.45388794]
[202.51187134 158.03858948]
[212.55003357 165.53712463]
[214.69607544 177.47393799]
[226.77951050 186.36160278]
[233.16789246 182.50463867]
[240.29626465 180.37274170]
[247.70918274 180.09060669]
[254.93588257 181.66514587]
[261.52014160 184.98564148]
[267.04916382 189.83160400]
[271.17941284 195.88723755]
[273.65789795 202.76210022]
[274.33773804 210.01625061]
[273.18676758 217.18833923]
[270.28890991 223.82507324]
[280.84362793 234.48329163]
[291.39837646 245.14151001]
[301.95309448 255.79972839]
[312.50784302 266.45794678]
[323.06259155 277.11614990]
[333.61730957 287.77438354]
[344.17205811 298.43258667]
[356.22760010 294.91464233]
[368.56030273 296.86508179]
[378.82226562 303.85003662]
[385.08654785 314.48324585]
[386.20883179 326.70068359]
[382.03610229 338.16116333]
[392.16693115 349.22305298]
[402.29779053 360.28497314]
[412.42864990 371.34686279]
[428.04266357 370.48828125]
[440.52447510 379.90838623]
[443.98059082 395.15924072]
[436.77914429 409.03991699]
[422.32040405 414.99636841]
[407.43139648 410.21612549]
[399.14218140 396.95626831]
[401.36676025 381.47772217]
[391.23590088 370.41583252]
[381.10504150 359.35391235]
[370.97418213 348.29202271]
[353.58230591 351.11798096]
[337.81933594 342.89999390]
[330.04235840 326.74087524]
[333.51382446 308.98733521]
[322.95910645 298.32910156]
[312.40435791 287.67089844]
[301.84963989 277.01266479]
[291.29489136 266.35446167]
[280.74017334 255.69624329]
[270.18542480 245.03802490]
[259.63067627 234.37980652]
] def
/pairs [
[2 111]
[3 110]
[5 107]
[6 106]
[7 105]
[8 104]
[9 102]
[10 101]
[11 100]
[12 85]
[13 84]
[14 83]
[15 82]
[20 78]
[21 77]
[22 76]
[23 75]
[24 74]
[25 73]
[26 72]
[30 56]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[37 49]
[38 48]
[40 47]
[86 99]
[87 98]
[88 97]
[89 96]
[122 160]
[123 159]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[135 149]
[136 148]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 101 1 gmark
13 84 1 gmark
20 78 1 gmark
21 cmark
25 73 1 gmark
72 cmark
31 cmark
55 cmark
34 cmark
52 cmark
125 cmark
157 cmark
127 cmark
155 cmark
154 cmark

% End Annotations
% show it
showpage
end
%%EOF
