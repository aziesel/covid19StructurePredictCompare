%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:26:40 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUACAGAAAGACGUUCUUGAGUGUAAUGUGAAAACUACCGAAGUUGUAGGAGACAUUAUACUUAAACCAGCAAAUGAUGGUUUAAAAAUUACAGAAGAGGUUGGUCACACAGAUCUAAUGGCUGCUUAUGUAGACAAUUCUAGUCUUACUAUUAAGAAAC\
) def
/coor [
[108.32584381 266.60491943]
[102.58586121 280.63446045]
[92.39134979 291.85266113]
[78.97335052 298.90481567]
[63.95215607 300.93939209]
[49.14164734 297.71069336]
[36.33026123 289.60858154]
[27.06503677 277.61145020]
[22.46479607 263.16796875]
[23.08504105 248.02232361]
[28.85087395 234.00337219]
[39.06604004 222.80398560]
[52.49700928 215.77655029]
[67.52192688 213.76965332]
[70.71691132 199.11387634]
[73.91188812 184.45808411]
[77.10686493 169.80229187]
[80.30184937 155.14651489]
[83.49682617 140.49072266]
[86.69180298 125.83493805]
[77.45432281 114.01677704]
[62.46074677 113.57779694]
[47.46717072 113.13881683]
[32.47359467 112.69983673]
[17.48002052 112.26085663]
[2.48644447 111.82187653]
[-12.50713062 111.38289642]
[-27.50070572 110.94391632]
[-42.49428177 110.50493622]
[-48.79805756 121.36655426]
[-59.07379913 128.45942688]
[-71.32210541 130.47850037]
[-83.19153595 127.09871674]
[-92.42999268 119.02555084]
[-97.31206512 107.84879303]
[-112.27709198 106.82515717]
[-127.24212646 105.80152130]
[-142.20715332 104.77788544]
[-152.92178345 116.16782379]
[-168.45697021 117.95445251]
[-181.47747803 109.29417419]
[-185.83541870 94.27610016]
[-179.47309875 79.99131775]
[-165.39463806 73.18466187]
[-150.24742126 77.07002258]
[-141.18351746 89.81285095]
[-126.21849060 90.83648682]
[-111.25345612 91.86012268]
[-96.28842926 92.88375854]
[-85.64318085 78.84302521]
[-68.56100464 73.92308044]
[-51.78520966 80.26116180]
[-42.05530167 95.51136017]
[-27.06172562 95.95034027]
[-12.06815052 96.38932037]
[2.92542410 96.82830048]
[17.91899872 97.26728058]
[32.91257477 97.70626068]
[47.90615082 98.14524078]
[62.89972305 98.58422089]
[77.89330292 99.02320099]
[87.13078308 87.20503998]
[83.08383179 72.76128387]
[79.03688049 58.31752396]
[74.98992920 43.87376404]
[70.94297791 29.43000412]
[66.89602661 14.98624516]
[62.84907532 0.54248619]
[58.80212402 -13.90127277]
[44.20705032 -19.17037964]
[35.52437592 -32.03081512]
[36.09276199 -47.53747559]
[45.69365692 -59.72773743]
[60.63531494 -63.91419601]
[75.17237091 -58.48706818]
[83.71502686 -45.53319931]
[82.97845459 -30.03361702]
[73.24588013 -17.94822502]
[77.29283142 -3.50446534]
[81.33978271 10.93929386]
[85.38673401 25.38305283]
[89.43369293 39.82681274]
[93.48064423 54.27057266]
[97.52759552 68.71433258]
[101.57454681 83.15808868]
[105.50148773 79.11571503]
[110.76154327 76.02645874]
[117.12911224 74.21070862]
[124.31111145 73.93760681]
[131.95806885 75.41190338]
[145.88523865 69.84107971]
[159.81240845 64.27026367]
[173.73957825 58.69944382]
[183.67918396 46.39031219]
[198.36972046 48.84746933]
[212.29689026 43.27664948]
[226.22404480 37.70582962]
[240.09620667 31.99939728]
[253.91201782 26.15789604]
[267.61123657 20.04793358]
[281.18862915 13.67184067]
[294.76599121 7.29574633]
[308.34338379 0.91965246]
[321.92077637 -5.45644140]
[335.43530273 -11.96469784]
[348.88571167 -18.60449600]
[355.37741089 -33.27545929]
[370.93109131 -37.20769501]
[383.61529541 -27.38472557]
[383.69976807 -11.34189510]
[371.11975098 -1.38588881]
[355.52551270 -5.15410328]
[342.07510376 1.48569548]
[337.44589233 7.29580069]
[328.29687500 8.12094498]
[314.71948242 14.49703884]
[301.14208984 20.87313271]
[287.56472778 27.24922752]
[273.98733521 33.62532043]
[271.53976440 37.77985382]
[266.43228149 40.41408157]
[259.75350952 39.97371292]
[245.93769836 45.81521606]
[240.97650146 51.34453583]
[231.79487610 51.63299561]
[217.86770630 57.20381546]
[203.94053650 62.77463531]
[194.99708557 74.68530273]
[179.31039429 72.62660980]
[165.38322449 78.19742584]
[151.45605469 83.76824951]
[137.52890015 89.33906555]
[135.29493713 96.49863434]
[150.18797302 98.28681946]
[165.13571167 97.03594971]
[174.51977539 108.73806000]
[170.05155945 123.05710602]
[155.67765808 127.34558868]
[144.09429932 117.81629181]
[130.82701111 110.81777191]
[128.59304810 117.97734070]
[136.88092041 130.47979736]
[145.16879272 142.98223877]
[153.45664978 155.48469543]
[167.24777222 165.34580994]
[161.58978271 181.32778931]
[144.66610718 180.31517029]
[140.95420837 163.77256775]
[132.66633606 151.27011108]
[124.37847137 138.76765442]
[116.09060669 126.26521301]
[101.34759521 129.02990723]
[98.15261078 143.68569946]
[94.95763397 158.34149170]
[91.76265717 172.99728394]
[88.56767273 187.65306091]
[85.37269592 202.30885315]
[82.17771912 216.96464539]
[95.00401306 225.04312134]
[104.29132843 237.02317810]
] def
/pairs [
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[35 49]
[36 48]
[37 47]
[38 46]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[90 132]
[91 131]
[92 130]
[93 129]
[95 127]
[96 126]
[97 125]
[98 123]
[99 122]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 113]
[106 112]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 157 1 gmark
16 156 1 gmark
18 154 1 gmark
25 cmark
57 cmark
27 cmark
55 cmark
54 cmark
63 84 1 gmark
84 cmark
65 82 1 gmark
68 79 1 gmark
69 78 1 gmark
90 132 1 gmark
96 cmark
100 119 1 gmark
102 cmark
117 cmark
105 113 1 gmark
141 151 1 gmark
142 150 1 gmark
144 148 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
