%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:08:50 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGUGUGCUACUGAGCAAGGGUACACUAGAACCUAAAUAUUUUAAUUCUGUUACUAAGCUUAUGUGUUGCUUAGGUCCAGACAUUUUCCUUGGAACAUGUUAUAGAUGUCCUAAGGAAAUUGUUGAUACAGUGUCAGCCUUGGUUUAUGAUAAUAAGCUUA\
) def
/coor [
[83.16719818 316.12228394]
[68.87991333 320.69104004]
[53.88172150 320.92388916]
[39.45950317 316.80081177]
[26.85072327 308.67562866]
[17.13725090 297.24548340]
[11.15252686 283.49108887]
[9.41005707 268.59265137]
[12.05935001 253.82844543]
[18.87308884 240.46533203]
[29.26663780 229.64987183]
[42.34820175 222.31007385]
[56.99534607 219.07569885]
[71.95130920 220.22427368]
[85.93282318 225.65724182]
[97.74024200 234.90844727]
[106.36005402 247.18331909]
[105.19046021 232.22898865]
[104.02087402 217.27465820]
[102.85128021 202.32032776]
[101.68168640 187.36598206]
[100.22053528 172.43733215]
[98.46837616 157.54000854]
[96.71621704 142.64270020]
[94.96405029 127.74538422]
[93.21189117 112.84807587]
[84.68165588 100.50971222]
[71.36338043 93.60873413]
[55.55075073 94.12959290]
[47.81005478 81.40438843]
[34.49177551 74.50341034]
[21.17349815 67.60243988]
[7.85522032 60.70146179]
[-5.46305799 53.80048752]
[-18.78133583 46.89950943]
[-32.09961319 39.99853516]
[-30.40831184 54.90287781]
[-40.86387634 65.65840149]
[-55.81008530 64.38922119]
[-64.30239105 52.02472687]
[-60.12218475 37.61896515]
[-46.33005524 31.72076416]
[-58.91276932 23.55526924]
[-71.49548340 15.38977623]
[-84.07820129 7.22428226]
[-96.66091156 -0.94121140]
[-109.24362946 -9.10670567]
[-118.19509125 -11.16995811]
[-121.99003601 -17.55628967]
[-134.41102600 -25.96574020]
[-146.83203125 -34.37519073]
[-159.25302124 -42.78464127]
[-174.72280884 -39.55022049]
[-187.90275574 -48.27172089]
[-190.97343445 -63.77482986]
[-182.11306763 -76.86183167]
[-166.57836914 -79.76843262]
[-153.58576965 -70.77021027]
[-150.84356689 -55.20563889]
[-138.42257690 -46.79618835]
[-126.00157928 -38.38673782]
[-113.58058167 -29.97728729]
[-101.07813263 -21.68942070]
[-88.49542236 -13.52392578]
[-75.91270447 -5.35843229]
[-63.32999039 2.80706143]
[-50.74727631 10.97255516]
[-38.16455841 19.13805008]
[-25.19863892 26.68025589]
[-11.88036060 33.58123016]
[1.43791759 40.48220825]
[14.75619602 47.38318253]
[28.07447433 54.28415680]
[41.39275360 61.18513489]
[54.71102905 68.08611298]
[69.57104492 67.07164764]
[78.26435852 80.29045868]
[91.58263397 87.19143677]
[106.42228699 85.00405121]
[117.18297577 74.55380249]
[127.94365692 64.10355377]
[138.70434570 53.65331268]
[143.21385193 38.48838806]
[157.73457336 35.17208862]
[168.49526978 24.72184181]
[179.25595093 14.27159595]
[190.01663208 3.82134938]
[200.77731323 -6.62889719]
[211.53800964 -17.07914352]
[222.29869080 -27.52939034]
[233.05937195 -37.97963715]
[243.82005310 -48.42988205]
[248.32957458 -63.59480667]
[262.85028076 -66.91110229]
[273.61096191 -77.36135101]
[269.21075439 -92.02069855]
[272.13845825 -107.04358673]
[281.72134399 -118.97785950]
[295.75732422 -125.08110809]
[311.02105713 -123.95085907]
[324.00500488 -115.84682465]
[331.72558594 -102.63125610]
[332.40866089 -87.34099579]
[325.89724731 -73.48963928]
[313.68765259 -64.26011658]
[298.58551025 -61.77330780]
[284.06121826 -66.60066986]
[273.30053711 -56.15042114]
[269.56069946 -41.73296738]
[254.27030945 -37.66919708]
[243.50961304 -27.21895218]
[232.74893188 -16.76870537]
[221.98825073 -6.31845856]
[211.22756958 4.13178825]
[200.46687317 14.58203506]
[189.70619202 25.03228188]
[178.94551086 35.48252869]
[168.18482971 45.93277359]
[164.44499207 60.35022736]
[149.15458679 64.41399384]
[138.39390564 74.86424255]
[127.63322449 85.31449127]
[116.87253571 95.76473236]
[131.80694580 94.36357117]
[142.47158813 104.91180420]
[141.23440552 119.86070251]
[128.98077393 128.51220703]
[114.47990417 124.67494202]
[108.10920715 111.09590912]
[109.86136627 125.99322510]
[111.61352539 140.89053345]
[113.36568451 155.78785706]
[115.11785126 170.68516541]
[118.80233002 176.27304077]
[119.03741455 182.01499939]
[116.63602448 186.19639587]
[117.80561066 201.15072632]
[118.97520447 216.10505676]
[120.14479828 231.05938721]
[121.31438446 246.01373291]
[125.22023010 260.49627686]
[131.72848511 274.01080322]
[138.23674011 287.52536011]
[144.74499512 301.03988647]
[151.25325012 314.55441284]
[157.76150513 328.06893921]
[164.26976013 341.58346558]
[178.11680603 350.36935425]
[177.16128540 366.74063110]
[162.38615417 373.85595703]
[148.99081421 364.39569092]
[150.75523376 348.09173584]
[144.24697876 334.57720947]
[137.73872375 321.06268311]
[131.23046875 307.54812622]
[124.72220612 294.03359985]
[118.21395111 280.51907349]
[111.70569611 267.00454712]
[110.42653656 281.94989014]
[104.87165833 295.88342285]
] def
/pairs [
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[22 133]
[23 132]
[24 131]
[25 130]
[26 129]
[27 78]
[28 77]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[49 62]
[50 61]
[51 60]
[52 59]
[79 123]
[80 122]
[81 121]
[82 120]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[94 108]
[95 107]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
19 138 1 gmark
138 cmark
21 136 1 gmark
21 cmark
22 133 3 gmark
23 132 2 gmark
24 131 2 gmark
24 cmark
25 cmark
26 129 2 gmark
129 cmark
27 78 3 gmark
27 cmark
78 cmark
30 75 2 gmark
33 72 1 gmark
72 cmark
34 cmark
35 70 2 gmark
35 cmark
36 69 3 gmark
36 cmark
42 68 2 gmark
42 cmark
43 67 2 gmark
44 66 1 gmark
45 65 1 gmark
45 cmark
65 cmark
46 64 2 gmark
46 cmark
64 cmark
49 cmark
51 60 2 gmark
51 cmark
60 cmark
52 59 2 gmark
79 123 2 gmark
81 cmark
82 120 2 gmark
84 118 2 gmark
117 cmark
87 cmark
88 114 1 gmark
88 cmark
114 cmark
89 113 1 gmark
90 112 2 gmark
90 cmark
112 cmark
92 110 1 gmark
94 108 1 gmark
95 107 1 gmark
141 cmark
156 cmark
146 153 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
