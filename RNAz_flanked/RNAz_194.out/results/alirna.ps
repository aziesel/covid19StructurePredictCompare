%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:23:29 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
ACUGUAAUGUUGAUAAAUAUCCAGCUAAUGCAAUUGUUUGUAGAUUUGACACUAGAGUGUUGAAUAAAUUAAACCUGCCUGGCUGUAAUGGUGGCAGUUUGUAUGUUAAUAAACAUGCAUUCCACACUACACCUUUUGAUAGAACUGCAUUUGAAAAUUU\
) def
/coor [
[95.27526093 117.69172668]
[85.80894470 129.32739258]
[76.34262085 140.96305847]
[66.87630463 152.59872437]
[57.40998459 164.23440552]
[47.94366455 175.87007141]
[50.06212616 193.21037292]
[39.21717453 206.47297668]
[22.47363853 207.78698730]
[13.23615456 219.60514832]
[11.11749268 237.87348938]
[-5.35930777 243.85067749]
[-14.36444092 255.84683228]
[-23.36957359 267.84298706]
[-24.79988289 284.17962646]
[-39.77530670 290.86309814]
[-52.89041519 281.01800537]
[-50.65350723 264.77212524]
[-35.36572266 258.83782959]
[-26.36058998 246.84169006]
[-17.35545731 234.84555054]
[-18.74485207 222.79721069]
[-11.29719734 212.72123718]
[1.41799593 210.36767578]
[10.65548038 198.54951477]
[7.31307459 186.07498169]
[11.84823704 173.77499390]
[22.80979919 166.23510742]
[36.30799484 166.40374756]
[45.77431488 154.76808167]
[55.24063492 143.13241577]
[64.70695496 131.49674988]
[74.17327118 119.86107635]
[83.63959503 108.22540283]
[71.12239838 116.49098969]
[56.57741547 112.82446289]
[49.47421646 99.61293030]
[54.43737411 85.45782471]
[68.23560333 79.57489014]
[81.88520050 85.79390717]
[70.72498322 75.77145386]
[59.56476593 65.74900818]
[48.40454483 55.72655869]
[37.24432373 45.70410919]
[26.08410645 35.68165970]
[14.92388630 25.65920830]
[3.76366639 15.63675880]
[-7.39655304 5.61430883]
[-18.55677223 -4.40814066]
[-30.55292130 -13.41327381]
[-43.29256439 -21.33170128]
[-56.03220749 -29.25012970]
[-72.43135071 -29.24227524]
[-80.40234375 -43.57389450]
[-71.74531555 -57.50184631]
[-55.36586761 -56.69824600]
[-48.11377716 -41.98977280]
[-35.37413406 -34.07134628]
[-22.63449287 -26.15291595]
[-27.26647568 -40.41982651]
[-23.58459663 -54.96093369]
[-12.72116280 -65.30432892]
[1.98293328 -68.26905060]
[16.00565910 -62.94333649]
[25.03452682 -50.96504211]
[26.29283905 -36.01791382]
[19.39362144 -22.69872665]
[6.45862627 -15.10360146]
[-8.53432369 -15.56836033]
[2.62589645 -5.54591084]
[13.78611565 4.47653913]
[24.94633484 14.49898815]
[36.10655594 24.52143860]
[47.26677322 34.54388809]
[58.42699432 44.56633759]
[69.58721161 54.58878708]
[80.74743652 64.61123657]
[91.90765381 74.63368988]
[98.95191956 78.57769012]
[103.40821838 84.09096527]
[105.03303528 90.11550903]
[118.07192230 82.70016479]
[131.11080933 75.28481293]
[144.14970398 67.86946869]
[157.18858337 60.45411682]
[170.22747803 53.03876877]
[170.74002075 39.23600769]
[177.95979309 27.58822823]
[189.90295410 21.09231377]
[203.38740540 21.35689354]
[214.88027954 28.20533943]
[228.06137085 21.04581451]
[241.24246216 13.88629055]
[254.42356873 6.72676516]
[254.81266785 -4.02308798]
[259.61703491 -13.55682087]
[267.89904785 -20.16424370]
[278.10449219 -22.69186401]
[288.35372925 -20.74383926]
[296.78811646 -14.74229050]
[310.36550903 -21.11838531]
[323.94290161 -27.49447823]
[337.52029419 -33.87057114]
[351.09768677 -40.24666595]
[364.67507935 -46.62276077]
[378.25244141 -52.99885559]
[391.82983398 -59.37494659]
[400.75039673 -73.13561249]
[417.11157227 -72.02040863]
[424.08239746 -57.17657089]
[414.49188232 -43.87416458]
[398.20593262 -45.79756165]
[384.62854004 -39.42146683]
[371.05114746 -33.04537201]
[357.47378540 -26.66927910]
[343.89639282 -20.29318619]
[330.31900024 -13.91709232]
[316.74160767 -7.54099798]
[303.16421509 -1.16490412]
[297.97930908 17.56906319]
[280.45596313 26.66051102]
[261.58309937 19.90785789]
[248.40199280 27.06738281]
[235.22090149 34.22690582]
[222.03981018 41.38643265]
[220.43527222 57.70033646]
[209.32528687 69.97843933]
[192.92716980 73.26579285]
[177.64282227 66.07765961]
[164.60394287 73.49300385]
[151.56504822 80.90835571]
[138.52616882 88.32369995]
[125.48727417 95.73905182]
[112.44838715 103.15439606]
[126.04585266 96.82123566]
[140.67468262 93.50505829]
[155.67395020 93.35569763]
[170.36592102 96.37990570]
[184.08680725 102.44103241]
[196.21665955 111.26524353]
[206.20742798 122.45382690]
[213.60772705 135.50126648]
[218.08317566 149.81805420]
[219.43156433 164.75732422]
[217.59199524 179.64408875]
[212.64755249 193.80575562]
[204.82164001 206.60244751]
[194.46788025 217.45597839]
[182.05403137 225.87599182]
[168.14102173 231.48204041]
[153.35742188 234.02084351]
[138.37121582 233.37767029]
[123.85950470 229.58158875]
[110.47795105 222.80413818]
[98.83116150 213.35150146]
[89.44536591 201.65077209]
[82.74462891 188.23063660]
[79.03170013 173.69743347]
[78.47434235 158.70779419]
[81.09773254 143.93898010]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 30]
[6 29]
[9 25]
[10 24]
[12 21]
[13 20]
[14 19]
[40 78]
[41 77]
[42 76]
[43 75]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[49 69]
[50 59]
[51 58]
[52 57]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[91 125]
[92 124]
[93 123]
[94 122]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 cmark
33 cmark
3 32 2 gmark
5 30 2 gmark
5 cmark
9 25 1 gmark
10 24 2 gmark
24 cmark
12 21 1 gmark
13 20 2 gmark
14 19 1 gmark
41 77 3 gmark
77 cmark
42 76 1 gmark
75 cmark
44 74 2 gmark
44 cmark
74 cmark
47 71 2 gmark
71 cmark
49 69 1 gmark
50 59 1 gmark
50 cmark
81 134 1 gmark
134 cmark
83 132 3 gmark
83 cmark
84 131 3 gmark
85 130 3 gmark
86 129 3 gmark
125 cmark
92 124 1 gmark
122 cmark
100 119 1 gmark
113 cmark
107 112 2 gmark

% End Annotations
% show it
showpage
end
%%EOF
