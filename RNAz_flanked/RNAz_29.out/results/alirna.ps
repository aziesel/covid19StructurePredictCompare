%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:13:37 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UACAGAAGUAAAUGAGUUUGCAUGUGUUGUAGCAGAUGCUGUCAUAAAAACUUUACAACCAGUAUCUGAAUUACUUAC_ACCACUGGGCAUUGAUUUAGAUGAGUGGAGUAUGGCUACAUACUACUUAUUUGAUGAGUCUGGUGAAUUUAAAUUGGCUUCA\
) def
/coor [
[101.37879181 212.23153687]
[85.60124207 211.31260681]
[75.15717316 199.45101929]
[76.24287415 183.68406677]
[88.21421051 173.36599731]
[89.08638000 158.39137268]
[89.95854950 143.41674805]
[90.83072662 128.44212341]
[91.70289612 113.46750641]
[83.75827789 126.19083405]
[80.91329193 140.91856384]
[72.50140381 153.33790588]
[59.88044739 161.44416809]
[45.08766556 163.92884827]
[30.51087761 160.39086914]
[18.50303841 151.40132141]
[11.00242615 138.41130066]
[9.21977425 123.51760101]
[13.44283295 109.12435150]
[22.98992538 97.55486298]
[36.31998444 90.67666626]
[51.28129578 89.60002136]
[65.46186066 94.50051117]
[80.45289612 93.98193359]
[67.04840851 87.24994659]
[53.57927322 80.64824677]
[40.04676056 74.17745972]
[21.75081062 76.04873657]
[12.36117458 61.24785614]
[-1.29426908 55.04069519]
[-14.94971275 48.83353424]
[-28.60515785 42.62637329]
[-42.37839890 36.68517685]
[-56.26425934 31.01217842]
[-70.15011597 25.33917999]
[-84.03598022 19.66618156]
[-97.92183685 13.99318409]
[-111.80769348 8.32018661]
[-125.69355774 2.64718843]
[-139.57942200 -3.02580953]
[-153.46527100 -8.69880772]
[-167.69638062 0.39939311]
[-184.38198853 -0.74787825]
[-196.98143005 -11.49301338]
[-200.67367554 -27.46502304]
[-214.66693115 -32.86769104]
[-228.66018677 -38.27035522]
[-242.65344238 -43.67302322]
[-259.60726929 -43.73739243]
[-264.23870850 -60.04647446]
[-249.84909058 -69.01171112]
[-237.25077820 -57.66627884]
[-223.25752258 -52.26361084]
[-209.26426697 -46.86094666]
[-195.27101135 -41.45827866]
[-184.75630188 -49.72925949]
[-171.41897583 -51.72832870]
[-158.73918152 -46.82538605]
[-150.07923889 -36.20553970]
[-147.79228210 -22.58466721]
[-133.90641785 -16.91166878]
[-120.02056122 -11.23867130]
[-106.13469696 -5.56567335]
[-92.24884033 0.10732452]
[-78.36297607 5.78032255]
[-64.47711945 11.45332050]
[-50.59125900 17.12631798]
[-36.70540237 22.79931641]
[-31.99205971 21.78759384]
[-26.59650040 23.76096916]
[-22.39799690 28.97092819]
[-8.74255276 35.17808914]
[4.91289186 41.38525009]
[18.56833649 47.59241104]
[30.03296852 43.63827133]
[41.47716904 48.73748016]
[46.51755142 60.64494324]
[60.05006409 67.11573792]
[67.47769165 67.16437531]
[73.78039551 73.84545898]
[87.18488312 80.57744598]
[115.43193817 82.23081207]
[129.62416077 77.37480164]
[143.81639099 72.51879120]
[158.00860596 67.66278076]
[172.20083618 62.80677414]
[186.39305115 57.95076370]
[200.58528137 53.09475708]
[214.77749634 48.23874664]
[221.92637634 42.47207642]
[229.29225159 43.42908096]
[243.57597351 38.84918976]
[250.83532715 33.22223282]
[258.18127441 34.32188797]
[272.55111694 30.01983833]
[286.92095947 25.71779060]
[294.28805542 20.23265839]
[301.61129761 21.47455597]
[316.06185913 17.45196533]
[330.51242065 13.42937660]
[344.96298218 9.40678787]
[359.41354370 5.38419867]
[373.86410522 1.36160922]
[388.31466675 -2.66097999]
[402.76522827 -6.68356895]
[407.71835327 -11.18220711]
[413.35403442 -12.29816628]
[417.85443115 -10.57029629]
[432.45010376 -14.02953434]
[447.04577637 -17.48877144]
[461.64144897 -20.94800949]
[476.23712158 -24.40724754]
[490.83279419 -27.86648560]
[502.38330078 -39.50770950]
[518.16894531 -35.06423187]
[521.95086670 -19.10712624]
[509.83850098 -8.05169201]
[494.29205322 -13.27081299]
[479.69638062 -9.81157494]
[465.10070801 -6.35233736]
[450.50503540 -2.89309931]
[435.90936279 0.56613880]
[421.31369019 4.02537680]
[406.78781128 7.76699400]
[392.33724976 11.78958321]
[377.88668823 15.81217289]
[363.43612671 19.83476067]
[348.98556519 23.85735130]
[334.53500366 27.87994003]
[320.08444214 31.90252876]
[305.63388062 35.92511749]
[291.22299194 40.08763123]
[276.85314941 44.38968277]
[262.48330688 48.69173050]
[248.15586853 53.13290787]
[233.87214661 57.71279907]
[219.63349915 62.43096924]
[205.44128418 67.28697968]
[191.24905396 72.14299011]
[177.05683899 76.99899292]
[162.86460876 81.85500336]
[148.67239380 86.71101379]
[134.48017883 91.56702423]
[120.28794861 96.42303467]
[135.07089233 98.96559906]
[150.06465149 98.53310394]
[163.43136597 105.33978271]
[171.90048218 117.72018433]
[173.39976501 132.64506531]
[167.56236267 146.46261597]
[155.81660461 155.79197693]
[141.03640747 158.35043335]
[126.83818054 153.51197815]
[116.69596100 142.46049500]
[113.09133148 127.89928436]
[106.67752075 114.33967590]
[105.80534363 129.31430054]
[104.93317413 144.28892517]
[104.06100464 159.26354980]
[103.18882751 174.23817444]
[113.88136292 185.87626648]
] def
/pairs [
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[24 81]
[25 80]
[26 78]
[27 77]
[29 74]
[30 73]
[31 72]
[32 71]
[33 68]
[34 67]
[35 66]
[36 65]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[45 55]
[46 54]
[47 53]
[48 52]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[91 136]
[92 135]
[94 134]
[95 133]
[96 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 158 1 gmark
9 156 1 gmark
24 81 1 gmark
78 cmark
30 73 1 gmark
31 cmark
71 cmark
37 cmark
64 cmark
55 cmark
46 cmark
84 cmark
85 141 1 gmark
88 cmark
138 cmark
89 cmark
137 cmark
96 cmark
98 131 1 gmark
108 cmark
110 121 1 gmark
111 cmark
113 118 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
