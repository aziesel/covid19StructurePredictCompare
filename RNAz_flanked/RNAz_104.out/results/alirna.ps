%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:00:07 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUGGUUCACCAUCUGGUGCUUACCAUGGUGCUAUGAGACCUAAUUAUACAAUUAAGGGUUCAUUCCUUAAUGGUUCAUGUGGUAGUGUUGGUUAUAACAUAGAUGAUGAUUGUG_UCAAUUUUUGUUACAUGCAUCAAAUGGAACUUCCAACUGGAG\
) def
/coor [
[105.80928802 354.47653198]
[114.49771118 342.00335693]
[127.30073547 333.80880737]
[124.63076782 319.04833984]
[121.96080017 304.28787231]
[119.29083252 289.52740479]
[115.90213776 286.09182739]
[114.67043304 280.47335815]
[116.82038116 274.12783813]
[114.73934937 259.27288818]
[112.65831757 244.41795349]
[110.57728577 229.56301880]
[101.14907837 218.03225708]
[106.89698029 203.29211426]
[104.81594849 188.43716431]
[102.73491669 173.58222961]
[100.65388489 158.72727966]
[98.57285309 143.87234497]
[96.49182129 129.01739502]
[80.09191895 121.40058899]
[71.31143951 105.59313965]
[73.51091766 87.64502716]
[61.99898148 78.02862549]
[50.48704147 68.41221619]
[38.97510147 58.79581451]
[27.46315956 49.17940903]
[10.09889507 51.07375336]
[-3.02252245 40.06133652]
[-4.12419844 23.30432510]
[-15.82505798 13.91870403]
[-27.52591705 4.53308344]
[-39.22677612 -4.85253811]
[-50.92763519 -14.23815918]
[-62.62849808 -23.62377930]
[-74.32935333 -33.00939941]
[-89.93556976 -35.60874176]
[-95.02228546 -49.60783768]
[-106.72314453 -58.99345779]
[-103.86726379 -44.26783752]
[-109.29412079 -30.28394318]
[-121.33576202 -21.33973122]
[-136.29118347 -20.18420410]
[-149.56384277 -27.17251396]
[-157.07438660 -40.15680313]
[-156.51445007 -55.14634705]
[-148.05612183 -67.53411102]
[-134.29907227 -73.51271057]
[-119.47137451 -71.24455261]
[-129.31475830 -82.56302643]
[-139.15815735 -93.88149261]
[-149.00154114 -105.19995880]
[-158.84492493 -116.51843262]
[-168.68830872 -127.83689880]
[-178.53169250 -139.15536499]
[-188.37507629 -150.47384644]
[-198.21847534 -161.79231262]
[-208.06185913 -173.11077881]
[-217.90524292 -184.42924500]
[-233.74507141 -186.97471619]
[-241.50511169 -201.01612854]
[-235.23252869 -215.78211975]
[-219.73910522 -219.94546509]
[-206.91007996 -210.31242371]
[-206.58677673 -194.27262878]
[-196.74337769 -182.95416260]
[-186.89999390 -171.63569641]
[-177.05661011 -160.31723022]
[-167.21322632 -148.99876404]
[-157.36984253 -137.68028259]
[-147.52645874 -126.36181641]
[-137.68307495 -115.04335022]
[-127.83968353 -103.72487640]
[-117.99629211 -92.40641022]
[-108.15290833 -81.08794403]
[-97.33752441 -70.69432068]
[-85.63666534 -61.30869675]
[-70.86737061 -59.38067627]
[-64.94373322 -44.71026230]
[-53.24287415 -35.32463837]
[-41.54201508 -25.93901825]
[-29.84115601 -16.55339813]
[-18.14029694 -7.16777658]
[-6.43943691 2.21784472]
[5.26142263 11.60346603]
[17.77947235 8.41842651]
[30.02291489 13.11073971]
[37.42281723 24.17016220]
[37.07956314 37.66746902]
[48.59150314 47.28387451]
[60.10344315 56.90027618]
[71.61538696 66.51668549]
[83.12732697 76.13308716]
[98.07405090 70.83482361]
[113.58769989 74.12160492]
[125.10167694 85.02593994]
[139.52424622 80.90412140]
[153.94682312 76.78230286]
[168.36940002 72.66049194]
[182.79197693 68.53867340]
[193.93478394 57.30710220]
[208.29823303 61.24925613]
[222.72080994 57.12743759]
[237.14338684 53.00562286]
[238.18937683 37.88339615]
[244.34721375 24.03215981]
[254.87333679 13.12451935]
[268.49664307 6.47762394]
[283.57208252 4.89411879]
[298.27917480 8.56521988]
[310.84201050 17.04762459]
[319.74353027 29.31703949]
[323.90887451 43.89187622]
[322.83502197 59.01214600]
[316.65164185 72.85201263]
[306.10543823 83.74023438]
[292.46990967 90.36201477]
[277.39160156 91.91773224]
[262.69128418 88.21953583]
[250.14410400 79.71399689]
[241.26519775 67.42819214]
[226.84263611 71.55001068]
[212.42005920 75.67182922]
[202.30883789 86.60858154]
[186.91378784 82.96124268]
[172.49121094 87.08306122]
[158.06863403 91.20487976]
[143.64607239 95.32669830]
[129.22349548 99.44850922]
[128.09945679 108.04594421]
[124.50269318 115.93533325]
[118.74970245 122.42242432]
[111.34676361 126.93636322]
[113.42779541 141.79130554]
[115.50882721 156.64625549]
[117.58985901 171.50119019]
[119.67089081 186.35614014]
[121.75192261 201.21107483]
[131.32897949 213.80435181]
[125.43222046 227.48197937]
[127.51325989 242.33692932]
[129.59428406 257.19186401]
[131.67532349 272.04681396]
[134.05130005 286.85745239]
[136.72126770 301.61788940]
[139.39123535 316.37835693]
[142.06120300 331.13882446]
[156.92358398 334.32910156]
[169.43093872 342.96823120]
[177.67597961 355.73883057]
[180.40138245 370.69345093]
[177.19155884 385.55160522]
[168.53598022 398.04760742]
[155.75456238 406.27581787]
[140.79637146 408.98156738]
[125.94242859 405.75219727]
[113.45784760 397.08016968]
[105.24644470 384.28796387]
] def
/pairs [
[3 146]
[4 145]
[5 144]
[6 143]
[9 142]
[10 141]
[11 140]
[12 139]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[22 92]
[23 91]
[24 90]
[25 89]
[26 88]
[29 84]
[30 83]
[31 82]
[32 81]
[33 80]
[34 79]
[35 78]
[37 76]
[38 75]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[101 122]
[102 121]
[103 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
145 cmark
5 cmark
144 cmark
6 143 3 gmark
10 141 1 gmark
11 cmark
12 139 3 gmark
14 137 2 gmark
135 cmark
17 134 2 gmark
18 133 1 gmark
19 cmark
22 92 3 gmark
23 cmark
24 90 1 gmark
25 89 1 gmark
26 88 3 gmark
26 cmark
29 84 1 gmark
29 cmark
84 cmark
30 83 2 gmark
31 cmark
32 81 1 gmark
32 cmark
38 75 3 gmark
38 cmark
48 74 3 gmark
50 72 2 gmark
50 cmark
51 71 1 gmark
70 cmark
53 69 3 gmark
54 68 3 gmark
56 66 1 gmark
56 cmark
66 cmark
65 cmark
95 128 1 gmark
96 cmark
97 126 3 gmark
97 cmark
126 cmark
98 cmark
125 cmark
99 124 1 gmark
99 cmark
124 cmark
101 122 1 gmark
101 cmark
102 cmark
103 cmark
120 cmark

% End Annotations
% show it
showpage
end
%%EOF
