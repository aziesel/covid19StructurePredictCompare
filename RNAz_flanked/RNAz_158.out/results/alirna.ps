%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:51:21 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGUAUUACGCUUAUCUGAAUAAACACUUUUCUAUGAUGAUACUGUCUGAUGAUGGUGUUGUGUGCUAUAAUAGUAACUAUGCAGCUAAAGGUUAAAUCGCUAGCAUUAAGAACUUUAAGGAAACUCUGUAUUAUCAAAAUAAUGUCUUUAUGUCUGAAGC\
) def
/coor [
[65.80675507 571.92163086]
[61.31844711 586.68170166]
[49.54797745 596.65460205]
[34.25126266 598.65814209]
[20.30943108 592.05291748]
[12.17126942 578.94671631]
[12.43363476 563.52154541]
[21.01280785 550.69964600]
[35.17120361 544.57238770]
[37.50326538 529.75476074]
[39.83532715 514.93719482]
[42.16738892 500.11956787]
[44.49945068 485.30194092]
[34.19769287 476.76605225]
[29.43272591 464.14880371]
[31.55404854 450.71987915]
[40.11154556 440.01635742]
[52.94570923 434.91116333]
[55.56644058 420.14187622]
[58.18717575 405.37258911]
[60.80791092 390.60330200]
[63.42864609 375.83401489]
[65.76071167 361.01641846]
[67.80320740 346.15612793]
[69.84571075 331.29583740]
[71.88820648 316.43554688]
[73.93070984 301.57525635]
[67.99850464 287.91296387]
[77.54286194 275.29489136]
[79.58535767 260.43460083]
[81.62786102 245.57431030]
[79.47521973 241.25958252]
[80.04583740 235.54119873]
[84.05092621 230.17846680]
[86.67166138 215.40917969]
[89.29239655 200.63989258]
[91.91313171 185.87062073]
[94.53386688 171.10133362]
[97.15460205 156.33204651]
[99.77533722 141.56275940]
[102.39607239 126.79347992]
[57.44293594 116.02027893]
[43.21370316 111.27381897]
[28.98446846 106.52735138]
[14.75523376 101.78089142]
[0.52599955 97.03443146]
[-15.42379951 100.84703827]
[-26.50252151 88.75597382]
[-21.31332779 73.19948578]
[-5.19441605 70.18075562]
[5.27245998 82.80519867]
[19.50169373 87.55165863]
[33.73093033 92.29811859]
[47.96016312 97.04457855]
[62.18939972 101.79103851]
[70.95874786 89.62146759]
[61.95361710 77.62532043]
[52.94848633 65.62917328]
[43.94335175 53.63302612]
[34.93821716 41.63687515]
[25.93308640 29.64072800]
[16.92795181 17.64457893]
[2.58353353 8.60721302]
[7.29678583 -7.67841196]
[24.25072098 -7.65766525]
[28.92410088 8.63944626]
[37.92923355 20.63559532]
[46.93436813 32.63174438]
[55.93949890 44.62789154]
[64.94463348 56.62403870]
[73.94976807 68.62018585]
[82.95490265 80.61634064]
[97.64115906 77.56449890]
[101.12149048 62.97383881]
[104.60182190 48.38318253]
[108.08215332 33.79252243]
[111.56248474 19.20186615]
[101.64097595 7.41756344]
[100.57333374 -7.77169371]
[108.55992889 -20.52623367]
[122.36027527 -26.06592941]
[125.84060669 -40.65658569]
[129.32093811 -55.24724579]
[120.83104706 -68.57755280]
[124.33525085 -83.98846436]
[137.75457764 -92.33695221]
[153.12757874 -88.67000580]
[161.33372498 -75.16316223]
[157.50444031 -59.82979584]
[143.91160583 -51.76691437]
[140.43127441 -37.17625809]
[136.95094299 -22.58559799]
[146.76492310 -11.41314125]
[148.13446045 3.57313132]
[140.32562256 16.64507103]
[126.15314484 22.68219757]
[122.67281342 37.27285385]
[119.19248199 51.86351395]
[115.71215057 66.45417023]
[112.23181915 81.04483032]
[116.67565155 87.08654785]
[126.72505951 75.95059967]
[136.77447510 64.81465149]
[146.82388306 53.67870331]
[151.12542725 39.30870819]
[162.34483337 29.35256386]
[177.12432861 26.78998756]
[191.04061890 32.38792038]
[199.92877197 44.47098541]
[201.12872314 59.42291260]
[194.28134155 72.76882172]
[181.43591309 80.51448059]
[166.43473816 80.34110260]
[152.81092834 86.61739349]
[139.18711853 92.89368439]
[125.56331635 99.16998291]
[130.00715637 105.21170044]
[144.97218323 106.23533630]
[159.93721008 107.25897217]
[171.68289185 96.68473816]
[187.46086121 97.59649658]
[197.91032410 109.45331573]
[196.83180237 125.22076416]
[184.86515808 135.54428101]
[169.11000061 134.29911804]
[158.91357422 122.22399902]
[143.94854736 121.20036316]
[128.98352051 120.17672729]
[117.16535187 129.41421509]
[114.54461670 144.18350220]
[111.92388153 158.95278931]
[109.30315399 173.72206116]
[106.68241882 188.49134827]
[104.06168365 203.26063538]
[101.44094849 218.02992249]
[98.82021332 232.79919434]
[96.48815155 247.61680603]
[94.44564819 262.47711182]
[92.40315247 277.33740234]
[98.18926239 292.06259155]
[88.79099274 303.61776733]
[86.74849701 318.47805786]
[84.70599365 333.33831787]
[82.66349792 348.19860840]
[80.62099457 363.05889893]
[82.78524780 369.39260864]
[81.57182312 375.00982666]
[78.19792938 378.45474243]
[75.57719421 393.22402954]
[72.95645905 407.99331665]
[70.33572388 422.76260376]
[67.71498871 437.53189087]
[79.60650635 449.52658081]
[82.00035858 466.07873535]
[74.15168762 480.65893555]
[59.31705856 487.63400269]
[56.98499680 502.45162964]
[54.65293503 517.26922607]
[52.32087326 532.08685303]
[49.98881149 546.90441895]
] def
/pairs [
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[29 139]
[30 138]
[31 137]
[34 136]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[81 92]
[82 91]
[83 90]
[117 128]
[118 127]
[119 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 159 1 gmark
11 158 2 gmark
11 cmark
158 cmark
12 157 1 gmark
13 156 3 gmark
18 152 3 gmark
19 cmark
20 150 1 gmark
21 149 2 gmark
23 cmark
26 142 3 gmark
142 cmark
141 cmark
29 139 2 gmark
31 137 3 gmark
41 129 3 gmark
42 55 2 gmark
42 cmark
54 cmark
44 53 3 gmark
44 cmark
53 cmark
56 72 1 gmark
71 cmark
59 69 2 gmark
68 cmark
61 67 1 gmark
62 66 1 gmark
62 cmark
73 100 1 gmark
74 99 1 gmark
74 cmark
75 98 2 gmark
75 cmark
98 cmark
76 97 2 gmark
77 96 1 gmark
77 cmark
96 cmark
83 90 3 gmark
83 cmark
117 128 3 gmark
119 126 1 gmark
119 cmark
126 cmark

% End Annotations
% show it
showpage
end
%%EOF
