%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:52:54 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGUUGGAGAAGGUUCUGAAGGUCUU_AAUGACAACCUUCUUGAAAUACUCCAAAAAGAGAAAGUCAACAUCAAUAUUGUUGGUGACUUUAAACUUAAUGAAGAGAUCGCCAUUAUUUUGGCAUCUUUUUCUGCUUCUACAAGUGCUUUUGUGGAAACUGUG\
) def
/coor [
[75.26160431 150.77737427]
[67.18895721 145.97570801]
[60.02365494 139.90266418]
[53.96382904 132.72616577]
[40.69240189 139.71681213]
[27.42097664 146.70747375]
[14.14954948 153.69812012]
[0.87812263 160.68876648]
[-0.07945354 174.46707153]
[-7.67058992 185.87541199]
[-19.81617546 191.98286438]
[-33.28438187 191.28437805]
[-44.55042267 184.07019043]
[-57.95491028 190.80218506]
[-71.35939789 197.53416443]
[-81.08846283 213.14149475]
[-98.53907013 211.49597168]
[-111.81049347 218.48661804]
[-125.08192444 225.47727966]
[-138.35334778 232.46792603]
[-151.62477112 239.45858765]
[-164.68727112 246.83227539]
[-177.52976990 254.58276367]
[-181.07965088 269.98321533]
[-194.52366638 278.29187012]
[-209.88572693 274.57937622]
[-218.05178833 261.04827881]
[-214.17707825 245.72631836]
[-200.56039429 237.70376587]
[-185.28025818 241.74026489]
[-172.43775940 233.98976135]
[-171.24537659 230.62217712]
[-168.33462524 227.67884827]
[-163.92967224 225.97393799]
[-158.61543274 226.18714905]
[-145.34400940 219.19650269]
[-132.07257080 212.20584106]
[-118.80114746 205.21519470]
[-105.52972412 198.22454834]
[-101.63180542 186.74067688]
[-90.59070587 180.81904602]
[-78.09139252 184.12966919]
[-64.68689728 177.39768982]
[-51.28240967 170.66569519]
[-49.15377426 154.41127014]
[-37.65375137 142.49684143]
[-21.15759850 139.73960876]
[-6.11253023 147.41734314]
[7.15889692 140.42669678]
[20.43032455 133.43603516]
[33.70175171 126.44538879]
[46.97317886 119.45473480]
[43.52195358 99.25112152]
[47.50765228 79.14612579]
[58.40544891 61.78712463]
[74.78033447 49.45992279]
[69.92432404 35.26770401]
[65.06832123 21.07547951]
[60.21231079 6.88325739]
[47.49007416 2.37180376]
[39.81409073 -8.49393272]
[39.81356430 -21.60260773]
[47.26390839 -32.15050507]
[42.68402100 -46.43422318]
[38.10412979 -60.71794128]
[33.52423859 -75.00165558]
[28.94434929 -89.28537750]
[24.36445999 -103.56909943]
[19.78456879 -117.85281372]
[5.24102449 -123.59906006]
[-2.16086602 -137.37388611]
[1.07384455 -152.67326355]
[13.41782475 -162.27326965]
[29.04262352 -161.64108276]
[40.57069016 -151.07521057]
[42.55882263 -135.56452942]
[34.06828690 -122.43270111]
[38.64817810 -108.14898682]
[43.22806931 -93.86526489]
[47.80795670 -79.58155060]
[52.38784790 -65.29782867]
[56.96773911 -51.01411438]
[61.54762650 -36.73039246]
[76.80372620 -29.70585632]
[82.39149475 -13.50994968]
[74.40453339 2.02724838]
[79.26054382 16.21947098]
[84.11654663 30.41169357]
[88.97255707 44.60391617]
[96.59982300 43.61942291]
[104.29012299 43.68014908]
[111.90089417 44.78496933]
[119.29103088 46.91340256]
[126.32353973 50.02598953]
[132.86805725 54.06502533]
[138.80322266 58.95563126]
[144.01904297 64.60714722]
[148.41880798 70.91479492]
[151.92095947 77.76165009]
[166.37152100 73.73905945]
[180.78240967 69.57654572]
[195.15225220 65.27449799]
[209.52209473 60.97244644]
[223.89193726 56.67039871]
[238.26177979 52.36835098]
[252.63162231 48.06630325]
[259.99871826 42.58116913]
[267.32196045 43.82306671]
[281.77252197 39.80047989]
[296.22308350 35.77788925]
[310.67364502 31.75530052]
[318.22348022 17.87093163]
[333.40319824 13.47192001]
[347.20697021 21.16811752]
[351.44525146 36.39350891]
[343.60354614 50.11513901]
[328.33419800 54.19220734]
[314.69622803 46.20586395]
[300.24566650 50.22845078]
[285.79510498 54.25104141]
[271.34454346 58.27363205]
[256.93365479 62.43614578]
[242.56382751 66.73819733]
[228.19398499 71.04024506]
[213.82414246 75.34229279]
[199.45429993 79.64434052]
[185.08445740 83.94638824]
[179.55128479 88.90179443]
[170.39411926 88.18962097]
[155.94355774 92.21221161]
[153.78582764 117.24573517]
[140.98445129 138.86650085]
[155.67080688 144.75050354]
[157.63870239 159.51454163]
[167.05589294 171.19000244]
[176.47306824 182.86547852]
[185.89025879 194.54095459]
[195.30743408 206.21643066]
[204.72460938 217.89190674]
[214.14179993 229.56738281]
[223.55897522 241.24284363]
[232.97616577 252.91831970]
[248.46121216 258.31695557]
[251.26217651 274.47512817]
[238.49765015 284.77069092]
[223.29869080 278.61248779]
[221.30068970 262.33551025]
[211.88349915 250.66003418]
[202.46632385 238.98455811]
[193.04914856 227.30908203]
[183.63195801 215.63360596]
[174.21478271 203.95814514]
[164.79759216 192.28266907]
[155.38041687 180.60719299]
[145.96322632 168.93171692]
[131.95045471 163.88282776]
[129.30897522 148.28369141]
[120.90229034 152.47308350]
[111.91757965 155.21142578]
[102.60330200 156.42298889]
[93.21704102 156.07424927]
] def
/pairs [
[4 52]
[5 51]
[6 50]
[7 49]
[8 48]
[13 44]
[14 43]
[15 42]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 31]
[23 30]
[56 89]
[57 88]
[58 87]
[59 86]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[99 130]
[100 129]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[108 121]
[109 120]
[110 119]
[111 118]
[132 157]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
52 cmark
5 51 1 gmark
6 50 1 gmark
50 cmark
7 49 1 gmark
13 44 1 gmark
15 42 1 gmark
18 cmark
38 cmark
21 cmark
35 cmark
22 31 1 gmark
56 89 1 gmark
59 cmark
86 cmark
83 cmark
65 cmark
105 cmark
134 155 1 gmark
137 152 1 gmark
137 cmark
139 150 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
