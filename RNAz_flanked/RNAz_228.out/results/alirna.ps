%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:45:03 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUUUAAGUGUUAUGGAGUGUCUCCUACUAAAUUAAAUGAUCUCUGCUUUACUAAUGUCUAUGCAGAUUCAUUUGUAAUUAAAGGUGAUGAAGUCAGACAAAUAGCGCCAGGACAAACUGGAAAGAUUGCUGAUUAUAAUUAUAAAUUACCAGAUGAUUUU\
) def
/coor [
[95.41578674 331.43386841]
[79.63857269 330.50924683]
[69.19879150 318.64389038]
[70.29018402 302.87731934]
[82.26524353 292.56356812]
[83.14282990 277.58926392]
[84.02040863 262.61495972]
[84.89799500 247.64065552]
[72.38167572 239.56556702]
[65.54229736 226.22094727]
[66.30579376 211.14501953]
[74.56713104 198.39169312]
[88.19165802 191.44049072]
[89.06924438 176.46618652]
[89.94683075 161.49186707]
[90.67827606 146.50971985]
[91.26351929 131.52113342]
[91.84875488 116.53256226]
[84.56097412 103.42194366]
[71.52208710 96.00659943]
[58.48319626 88.59124756]
[42.66228485 88.49476624]
[35.42397308 75.47723389]
[22.38508415 68.06188202]
[9.34619522 60.64653778]
[-2.22348881 70.41217804]
[-16.40960312 75.62046051]
[-31.49332237 75.66088867]
[-45.65408707 70.54788971]
[-57.18934250 60.91672134]
[-64.71922302 47.94462204]
[-67.35161591 33.20692825]
[-64.78780365 18.48577881]
[-77.82669067 11.07043171]
[-90.86557770 3.65508318]
[-103.90447235 -3.76026487]
[-116.94335938 -11.17561340]
[-129.98223877 -18.59096146]
[-143.02113342 -26.00630951]
[-155.67564392 -23.34568405]
[-166.39649963 -29.83074188]
[-169.69509888 -41.50173950]
[-182.58682251 -49.17008591]
[-195.47854614 -56.83843231]
[-208.37026978 -64.50678253]
[-221.26197815 -72.17513275]
[-236.68367004 -65.28659058]
[-253.01451111 -68.89327240]
[-263.88281250 -81.38581085]
[-265.16873169 -97.72792053]
[-278.20764160 -105.14326477]
[-294.59399414 -104.49559021]
[-303.11807251 -118.50529480]
[-295.01104736 -132.76040649]
[-278.61273193 -132.59648132]
[-270.79229736 -118.18215942]
[-257.75338745 -110.76680756]
[-246.12907410 -117.38970184]
[-232.64202881 -117.39112854]
[-220.82788086 -110.66341400]
[-213.83676147 -98.87698364]
[-213.59364319 -85.06684875]
[-200.70191956 -77.39849854]
[-187.81019592 -69.73015594]
[-174.91847229 -62.06180573]
[-162.02676392 -54.39345551]
[-144.51495361 -55.13394547]
[-135.60578918 -39.04519653]
[-122.56689453 -31.62985039]
[-109.52800751 -24.21450233]
[-96.48912048 -16.79915428]
[-83.45023346 -9.38380527]
[-70.41134644 -1.96845698]
[-57.37245560 5.44689131]
[-46.03107452 -4.28236294]
[-32.01905441 -9.55421066]
[-17.02075958 -9.71430874]
[-2.84618163 -4.72403431]
[8.78748798 4.83252382]
[16.46388817 17.81686401]
[19.23991394 32.67168427]
[16.76154327 47.60764694]
[29.80043221 55.02299881]
[42.83932114 62.43834686]
[57.72760391 62.00443649]
[65.89854431 75.55236053]
[78.93743134 82.96771240]
[91.97632599 90.38305664]
[96.95822906 84.71195984]
[105.55667877 82.19615173]
[115.59857178 84.89434052]
[129.82780457 80.14788055]
[144.05703735 75.40142059]
[158.28628540 70.65496063]
[172.51551819 65.90850067]
[186.74475098 61.16204071]
[193.93901062 55.44992447]
[201.29815674 56.46472931]
[215.61729431 51.99681091]
[229.93643188 47.52889252]
[237.24076843 41.95823288]
[244.57872009 43.11643600]
[258.98229980 38.92876053]
[266.63125610 25.35925293]
[281.29818726 21.31753731]
[294.18750000 28.69325447]
[308.59109497 24.50557709]
[322.99468994 20.31790161]
[337.39825439 16.13022423]
[351.80184937 11.94254589]
[359.19232178 -2.02730179]
[374.32070923 -6.59972143]
[388.21163940 0.93802303]
[392.62387085 16.11392212]
[384.93966675 29.92438126]
[369.71798706 34.17590332]
[355.98953247 26.34613419]
[341.58593750 30.53381157]
[327.18234253 34.72148895]
[312.77877808 38.90916824]
[298.37518311 43.09684372]
[291.44961548 56.23351288]
[276.90197754 60.68559647]
[263.16998291 53.33234787]
[248.76638794 57.52002335]
[234.40434265 61.84803009]
[220.08520508 66.31594849]
[205.76606750 70.78386688]
[191.49121094 75.39127350]
[177.26197815 80.13774109]
[163.03274536 84.88420105]
[148.80349731 89.63066101]
[134.57426453 94.37712097]
[120.34503937 99.12358093]
[134.69995117 94.77198792]
[149.37825012 97.86189270]
[160.76055908 107.63138580]
[166.04023743 121.67150879]
[163.91542053 136.52024841]
[154.91004944 148.51622009]
[141.24465942 154.70144653]
[126.28885651 153.55079651]
[113.73044586 145.34797668]
[106.66606140 132.11564636]
[106.83733368 117.11779785]
[106.25209808 132.10638428]
[105.66685486 147.09495544]
[108.46978760 155.84306335]
[104.92113495 162.36946106]
[104.04354858 177.34376526]
[103.16596985 192.31806946]
[115.88525391 200.81318665]
[122.60030365 214.44421387]
[121.59754944 229.50611877]
[113.24620056 241.96046448]
[99.87229919 248.51824951]
[98.99472046 263.49255371]
[98.11713409 278.46685791]
[97.23955536 293.44116211]
[107.92787933 305.08312988]
] def
/pairs [
[5 159]
[6 158]
[7 157]
[8 156]
[13 151]
[14 150]
[15 149]
[16 147]
[17 146]
[18 145]
[19 88]
[20 87]
[21 86]
[23 84]
[24 83]
[25 82]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[50 57]
[51 56]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[98 128]
[99 127]
[100 126]
[102 125]
[103 124]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 cmark
16 147 1 gmark
146 cmark
19 88 1 gmark
23 84 1 gmark
25 cmark
82 cmark
34 cmark
37 70 1 gmark
43 cmark
50 57 1 gmark
91 134 1 gmark
133 cmark
94 131 1 gmark
103 cmark
124 cmark
106 121 1 gmark
106 cmark
121 cmark

% End Annotations
% show it
showpage
end
%%EOF
