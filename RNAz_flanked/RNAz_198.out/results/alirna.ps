%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:26:20 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAUACUUAUAACCUCUGGAAUACUUUUACAAGGCUACAGAGUUUAGAAAAUGUGGCUUAUAAUGUUGUAAAUAAUGGACACUUUGAUGGACAAGCGGGUGAAGUACCUGGUGCCAUCAUUAAUAACAAAGUUUACACAAAGAUUGAUAAUGUUG\
) def
/coor [
[96.56995392 300.85202026]
[96.26595306 285.85510254]
[95.96194458 270.85818481]
[95.65794373 255.86126709]
[95.35393524 240.86434937]
[95.04993439 225.86743164]
[84.16214752 215.76832581]
[83.64020538 200.56365967]
[94.30688477 189.21202087]
[94.00288391 174.21510315]
[93.69887543 159.21818542]
[93.39487457 144.22126770]
[93.09086609 129.22433472]
[92.78686523 114.22742462]
[87.29883575 109.11552429]
[83.93269348 123.73294830]
[69.59053040 128.12638855]
[58.61468506 117.90235138]
[61.98114777 103.28500366]
[76.32276917 98.89172363]
[70.83473969 93.77983093]
[55.85399246 94.53956604]
[40.87324142 95.29930115]
[27.48267174 103.72563934]
[14.37984657 96.64289856]
[-0.60090107 97.40263367]
[-15.58164883 98.16236877]
[-28.97222137 106.58870697]
[-42.07504654 99.50596619]
[-57.05579376 100.26570129]
[-72.03653717 101.02543640]
[-87.01728821 101.78517914]
[-101.99803925 102.54491425]
[-116.97878265 103.30464935]
[-131.95953369 104.06439209]
[-145.42665100 113.42220306]
[-160.14706421 106.19437408]
[-160.97766113 89.81626892]
[-147.06401062 81.13628387]
[-132.71926880 89.08364105]
[-117.73851776 88.32390594]
[-102.75777435 87.56416321]
[-87.77702332 86.80442810]
[-72.79627991 86.04469299]
[-57.81552887 85.28495026]
[-42.83478165 84.52521515]
[-30.51573372 76.15322113]
[-16.34138680 83.18162537]
[-1.36063862 82.42188263]
[13.62010860 81.66214752]
[25.93915749 73.29015350]
[40.11350632 80.31855774]
[55.09425354 79.55881500]
[70.07499695 78.79907990]
[63.13424683 65.50148773]
[62.82180786 50.50474548]
[69.20271301 36.92961502]
[80.94910431 27.60104370]
[95.61660004 24.46027374]
[110.15295410 28.16088867]
[121.53318787 37.93280411]
[127.38911438 51.74251556]
[126.50213623 66.71627045]
[119.05682373 79.73807526]
[106.60519409 88.09713745]
[119.17143250 79.90631104]
[131.73767090 71.71549225]
[144.30392456 63.52466965]
[151.64001465 49.50710297]
[166.52726746 49.03923416]
[179.09350586 40.84841156]
[186.42961121 26.83084106]
[201.31686401 26.36297226]
[213.88310242 18.17215157]
[226.44934082 9.98132896]
[239.01559448 1.79050684]
[242.28822327 -15.36541271]
[256.65722656 -24.68793869]
[273.00149536 -20.83920479]
[285.39913940 -29.28302383]
[297.79678345 -37.72684479]
[310.19445801 -46.17066193]
[317.77084351 -62.92412567]
[335.28137207 -63.60905457]
[347.50534058 -72.30240631]
[359.72933960 -80.99575043]
[371.95330811 -89.68909454]
[384.17730713 -98.38244629]
[396.40127563 -107.07579041]
[408.62524414 -115.76914215]
[410.83834839 -120.62660217]
[414.36154175 -123.79631805]
[418.31600952 -125.06147766]
[421.86672974 -124.59256744]
[434.59640503 -132.52702332]
[447.32604980 -140.46148682]
[459.97467041 -148.52455139]
[472.54092407 -156.71536255]
[485.10714722 -164.90618896]
[497.67340088 -173.09701538]
[507.64099121 -186.81137085]
[523.57867432 -181.02981567]
[522.43505859 -164.11448669]
[505.86422729 -160.53076172]
[493.29797363 -152.33995056]
[480.73171997 -144.14912415]
[468.16549683 -135.95829773]
[464.25625610 -129.63394165]
[455.26052856 -127.73182678]
[442.53085327 -119.79736328]
[429.80120850 -111.86290741]
[417.31860352 -103.54515839]
[405.09463501 -94.85181427]
[392.87063599 -86.15846252]
[380.64666748 -77.46511841]
[368.42266846 -68.77176666]
[356.19869995 -60.07842255]
[343.97473145 -51.38507462]
[341.63568115 -39.47931290]
[331.47177124 -32.14313507]
[318.63827515 -33.77300262]
[306.24060059 -25.32918549]
[293.84295654 -16.88536644]
[281.44531250 -8.44154739]
[280.82879639 4.46306038]
[272.75744629 14.79929161]
[260.01391602 18.63822937]
[247.20640564 14.35674858]
[234.64016724 22.54757118]
[222.07392883 30.73839188]
[209.50769043 38.92921448]
[203.07040405 52.36091995]
[187.28433228 53.41465378]
[174.71809387 61.60547638]
[168.28082275 75.03717804]
[152.49473572 76.09091187]
[139.92849731 84.28173828]
[127.36225128 92.47255707]
[114.79601288 100.66337585]
[107.78378296 113.92341614]
[108.08779144 128.92033386]
[108.39179230 143.91725159]
[108.69579315 158.91416931]
[108.99980164 173.91108704]
[109.30380249 188.90802002]
[120.42175293 199.81805420]
[120.51641846 215.03138733]
[110.04685211 225.56341553]
[110.35085297 240.56034851]
[110.65486145 255.55726624]
[110.95886230 270.55416870]
[111.26287079 285.55108643]
[111.56687164 300.54800415]
[114.14756012 319.75714111]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[9 145]
[10 144]
[11 143]
[12 142]
[13 141]
[14 140]
[21 54]
[22 53]
[23 52]
[25 50]
[26 49]
[27 48]
[29 46]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[65 139]
[66 138]
[67 137]
[68 136]
[70 134]
[71 133]
[73 131]
[74 130]
[75 129]
[76 128]
[79 124]
[80 123]
[81 122]
[82 121]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[94 111]
[95 110]
[96 109]
[97 107]
[98 106]
[99 105]
[100 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 153 3 gmark
2 152 2 gmark
151 cmark
4 150 2 gmark
4 cmark
150 cmark
5 cmark
149 cmark
148 cmark
9 145 1 gmark
9 cmark
145 cmark
10 144 2 gmark
12 142 1 gmark
12 cmark
142 cmark
13 141 2 gmark
13 cmark
21 54 2 gmark
21 cmark
54 cmark
27 cmark
48 cmark
30 45 3 gmark
30 cmark
45 cmark
32 43 1 gmark
32 cmark
33 cmark
42 cmark
34 cmark
66 cmark
138 cmark
137 cmark
136 cmark
70 134 3 gmark
71 133 3 gmark
73 cmark
74 130 3 gmark
74 cmark
75 cmark
129 cmark
76 128 3 gmark
79 124 3 gmark
81 122 3 gmark
81 cmark
122 cmark
121 cmark
85 cmark
117 cmark
86 116 1 gmark
87 115 1 gmark
115 cmark
114 cmark
90 112 2 gmark
90 cmark
112 cmark
94 111 2 gmark
94 cmark
95 110 1 gmark
95 cmark
110 cmark
96 109 3 gmark
96 cmark
109 cmark
99 105 1 gmark
105 cmark
104 cmark

% End Annotations
% show it
showpage
end
%%EOF
