%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:11:54 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGCAACAUUUGCAUGUUGCAUCUAAUUCUAAGUUGUGGCAGUAUUGUAGCACUUUACACAAUGAAAUACUCGCAACUUCAGAUAUGAGUGUAGCCUUUGAAAAGCUGGCUCAACUAUUAAUUGUUUUGUUUGCCAAUCCAGCUGCUGUGGAUAGCA\
) def
/coor [
[116.35992432 192.77998352]
[114.57464600 177.88659668]
[112.78937531 162.99320984]
[111.00410461 148.09983826]
[109.21882629 133.20645142]
[89.06556702 130.73255920]
[74.88581085 117.79089355]
[71.06552887 100.10743713]
[56.56385803 96.27318573]
[42.06218338 92.43894196]
[27.56050873 88.60469055]
[13.05883598 84.77043915]
[3.90618110 85.60161591]
[-1.69156921 80.71311188]
[-16.11414337 76.59129333]
[-30.53671646 72.46947479]
[-44.95928955 68.34766388]
[-60.35433960 71.99499512]
[-70.46556091 61.05824280]
[-84.88813019 56.93642807]
[-94.37582397 68.77954102]
[-107.63919830 76.06829834]
[-122.64212799 77.71929169]
[-137.09500122 73.51189423]
[-148.80412292 64.11714935]
[-156.00469971 50.99094772]
[-157.62677002 36.14850616]
[-172.04934692 32.02668762]
[-186.47192383 27.90487099]
[-191.63998413 29.20608521]
[-196.30915833 28.43604469]
[-199.76414490 26.14340210]
[-201.61763000 23.08342171]
[-215.76882935 18.10913277]
[-229.92002869 13.13484287]
[-244.07122803 8.16055393]
[-258.22244263 3.18626451]
[-272.37362671 -1.78802466]
[-287.97396851 6.06917334]
[-304.12170410 0.35114723]
[-311.02374268 -14.95810032]
[-325.27102661 -19.65004921]
[-339.51834106 -24.34199905]
[-353.76562500 -29.03394699]
[-368.01293945 -33.72589493]
[-383.94802856 -29.85225487]
[-395.07296753 -41.90082169]
[-389.94335938 -57.47706223]
[-373.83612061 -60.55747604]
[-363.32098389 -47.97319794]
[-349.07369995 -43.28125000]
[-334.82638550 -38.58929825]
[-320.57907104 -33.89735031]
[-306.33178711 -29.20540237]
[-295.72271729 -36.57382584]
[-282.61132812 -36.46785736]
[-271.80609131 -28.70149803]
[-267.39935303 -15.93922424]
[-253.24813843 -10.96493530]
[-239.09693909 -5.99064589]
[-224.94573975 -1.01635659]
[-210.79454041 3.95793271]
[-196.64334106 8.93222141]
[-182.35009766 13.48229790]
[-167.92752075 17.60411453]
[-153.50495911 21.72593117]
[-144.28480530 9.98208141]
[-131.23548889 2.64308214]
[-116.33026886 0.85442626]
[-101.83675385 4.91959524]
[-89.97193146 14.24910450]
[-82.56307220 27.44576263]
[-80.76631165 42.51385117]
[-66.34374237 46.63566971]
[-51.98028946 42.69351578]
[-40.83747482 53.92508698]
[-26.41489983 58.04690170]
[-11.99232578 62.16872025]
[2.43024731 66.29053497]
[16.89308548 70.26876831]
[31.39475822 74.10301208]
[45.89643097 77.93726349]
[60.39810562 81.77151489]
[74.89978027 85.60576630]
[81.91545868 76.41004944]
[92.21456909 70.49589539]
[104.30817413 68.99418640]
[116.33825684 72.37673187]
[126.36323547 80.34615326]
[132.67076111 91.84692383]
[134.06762695 105.20113373]
[149.06762695 105.20113373]
[164.06762695 105.20113373]
[179.06762695 105.20113373]
[194.06762695 105.20113373]
[209.06762695 105.20113373]
[216.35131836 97.03071594]
[226.72430420 94.30389404]
[236.66731262 97.69429016]
[242.94439697 105.84150696]
[257.93252563 106.43785858]
[272.92068481 107.03420258]
[287.01754761 99.85166931]
[299.42715454 108.08884430]
[314.41528320 108.68518829]
[329.40341187 109.28153992]
[343.50030518 102.09899902]
[355.90991211 110.33617401]
[370.89804077 110.93252563]
[385.88616943 111.52886963]
[397.44363403 101.08554840]
[412.63525391 101.90383911]
[422.52014160 112.98646545]
[437.50827026 113.58280945]
[452.49642944 114.17916107]
[462.00292969 101.91514587]
[476.91183472 97.61347961]
[491.49032593 102.92823029]
[500.13272095 115.81576538]
[499.51583862 131.32057190]
[489.87683105 143.48072815]
[474.92214966 147.62042236]
[460.40216064 142.14782715]
[451.90005493 129.16729736]
[436.91192627 128.57095337]
[421.92379761 127.97460175]
[411.18963623 138.23683167]
[395.98101807 137.84556580]
[385.28982544 126.51701355]
[370.30169678 125.92066193]
[355.31353760 125.32431793]
[342.28872681 132.54951477]
[328.80706787 124.26967621]
[313.81893921 123.67333221]
[298.83081055 123.07698059]
[285.80596924 130.30216980]
[272.32431030 122.02234650]
[257.33618164 121.42599487]
[242.34803772 120.82965088]
[225.99287415 131.08476257]
[209.06762695 120.20113373]
[194.06762695 120.20113373]
[179.06762695 120.20113373]
[164.06762695 120.20113373]
[149.06762695 120.20113373]
[134.06762695 120.20113373]
[124.11221313 131.42118835]
[125.89748383 146.31455994]
[127.68275452 161.20794678]
[129.46803284 176.10131836]
[131.25329590 190.99470520]
[144.44166565 199.39714050]
[149.09423828 214.32656860]
[143.01419067 228.73376465]
[129.07235718 235.81608582]
[113.85163879 232.22947693]
[104.53879547 219.66743469]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[8 84]
[9 83]
[10 82]
[11 81]
[12 80]
[14 79]
[15 78]
[16 77]
[17 76]
[19 74]
[20 73]
[27 66]
[28 65]
[29 64]
[33 63]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[100 139]
[101 138]
[102 137]
[104 135]
[105 134]
[106 133]
[108 131]
[109 130]
[110 129]
[113 126]
[114 125]
[115 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 cmark
2 150 1 gmark
150 cmark
3 149 1 gmark
3 cmark
5 147 2 gmark
9 83 3 gmark
10 cmark
11 81 2 gmark
81 cmark
12 80 1 gmark
12 cmark
80 cmark
14 79 2 gmark
15 78 3 gmark
15 cmark
78 cmark
16 77 1 gmark
76 cmark
74 cmark
20 73 1 gmark
20 cmark
73 cmark
27 66 2 gmark
33 cmark
60 cmark
41 cmark
54 cmark
42 53 1 gmark
42 cmark
53 cmark
43 52 2 gmark
52 cmark
44 51 3 gmark
45 cmark
50 cmark
92 145 2 gmark
93 144 3 gmark
94 143 2 gmark
96 141 2 gmark
96 cmark
141 cmark
101 138 2 gmark
102 137 2 gmark
102 cmark
137 cmark
104 135 3 gmark
105 134 2 gmark
106 cmark
133 cmark
108 131 3 gmark
130 cmark
110 129 2 gmark
110 cmark
113 126 2 gmark
114 cmark
115 cmark

% End Annotations
% show it
showpage
end
%%EOF
