%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:40:09 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGUUGUUAGUUUG_UCUGUUUUAUUGUAUUGUGGUCCUUAAUGCCCACAUAUACAGUAC_ACAAAUCGGAUUUUCAGCUGCCCGUUUAUGCCAGUUAUAAAGUUAUAGAUAAUGGUGUUAUUAGAGAUGUUACAGUUAAAGAUGUUUGUUUCGCUA\
) def
/coor [
[141.26237488 170.33197021]
[124.15113068 177.88383484]
[105.76924896 181.33808899]
[87.08383942 180.51300049]
[69.07797241 175.45195007]
[52.69896698 166.42124939]
[38.80856323 153.89598083]
[28.13755417 138.53515625]
[21.24736786 121.14691925]
[18.50050545 102.64610291]
[3.52718472 101.75187683]
[-11.44613647 100.85765076]
[-26.41945839 99.96342468]
[-41.39278030 99.06919861]
[-56.36610031 98.17497253]
[-71.33942413 97.28073883]
[-86.31274414 96.38651276]
[-101.28606415 95.49228668]
[-116.25938416 94.59806061]
[-131.23271179 93.70383453]
[-142.99551392 103.91530609]
[-158.16784668 102.79513550]
[-167.83044434 91.51816559]
[-182.80375671 90.62393951]
[-197.77708435 89.72971344]
[-212.75041199 88.83548737]
[-227.72372437 87.94126129]
[-242.69705200 87.04703522]
[-257.67037964 86.15280914]
[-272.64370728 85.25858307]
[-287.62515259 84.51325989]
[-302.61331177 83.91690826]
[-317.60144043 83.32056427]
[-332.58959961 82.72421265]
[-347.57772827 82.12786865]
[-355.71197510 95.15590668]
[-369.27795410 102.35723114]
[-384.62655640 101.79472351]
[-397.62902832 93.61968994]
[-404.78781128 80.03118134]
[-404.17718506 64.68443298]
[-395.96142578 51.70764160]
[-382.35055542 44.59150314]
[-367.00579834 45.25022125]
[-354.05480957 53.50660324]
[-346.98138428 67.13972473]
[-331.99322510 67.73607635]
[-317.00509644 68.33242035]
[-302.01696777 68.92877197]
[-287.02880859 69.52511597]
[-280.18286133 66.63286591]
[-271.74945068 70.28526306]
[-256.77615356 71.17948914]
[-241.80282593 72.07371521]
[-226.82949829 72.96794128]
[-211.85618591 73.86216736]
[-196.88285828 74.75639343]
[-181.90953064 75.65061951]
[-166.93621826 76.54484558]
[-156.00013733 66.49806213]
[-140.80232239 67.19163513]
[-130.33848572 78.73051453]
[-115.36515808 79.62474060]
[-100.39183807 80.51896667]
[-85.41851807 81.41319275]
[-70.44519806 82.30741882]
[-55.47187424 83.20164490]
[-40.49855423 84.09587097]
[-25.52523232 84.99010468]
[-10.55191040 85.88433075]
[4.42141151 86.77855682]
[19.39473343 87.67278290]
[21.98527527 76.27507782]
[26.17876434 65.36483765]
[31.88903618 55.16624069]
[38.99876785 45.88882828]
[47.36186981 37.72322464]
[56.80651855 30.83720398]
[67.13864899 25.37225151]
[78.14597321 21.44065475]
[89.60232544 19.12319374]
[101.27231598 18.46748734]
[112.91616058 19.48700714]
[124.29462433 22.16080284]
[135.17391968 26.43394089]
[145.33049011 32.21861649]
[154.55567932 39.39598083]
[162.65992737 47.81855774]
[169.47671509 57.31329346]
[174.86599731 67.68509674]
[178.71701050 78.72087097]
[180.95065308 90.19385529]
[181.52102661 101.86833191]
[180.41641235 113.50441742]
[194.91809082 117.33866119]
[209.41976929 121.17291260]
[228.56475830 114.97721863]
[241.75520325 129.07229614]
[256.39785767 132.32698059]
[271.04049683 135.58166504]
[285.68313599 138.83634949]
[300.32577515 142.09103394]
[315.00006104 145.19998169]
[329.70452881 148.16288757]
[344.40896606 151.12580872]
[359.11343384 154.08871460]
[373.81790161 157.05162048]
[388.52236938 160.01454163]
[403.22680664 162.97744751]
[417.93127441 165.94035339]
[432.63574219 168.90327454]
[445.70147705 160.42247009]
[460.57168579 163.63674927]
[468.57632446 176.14520264]
[483.28079224 179.10810852]
[497.98522949 182.07102966]
[512.68969727 185.03393555]
[527.39416504 187.99684143]
[542.09863281 190.95976257]
[556.80310059 193.92266846]
[569.82525635 184.96733093]
[585.35034180 187.92512512]
[594.16748047 201.04127502]
[591.04571533 216.53417969]
[577.83709717 225.21217346]
[562.37805176 221.92677307]
[553.84014893 208.62713623]
[539.13574219 205.66421509]
[524.43127441 202.70130920]
[509.72680664 199.73840332]
[495.02233887 196.77548218]
[480.31787109 193.81257629]
[465.61340332 190.84967041]
[453.38925171 199.28207397]
[438.43463135 196.48672485]
[429.67282104 183.60772705]
[414.96835327 180.64482117]
[400.26391602 177.68190002]
[385.55944824 174.71899414]
[370.85498047 171.75608826]
[356.15051270 168.79316711]
[341.44607544 165.83026123]
[326.74160767 162.86735535]
[312.03713989 159.90443420]
[304.81948853 161.67578125]
[297.07110596 156.73367310]
[282.42843628 153.47898865]
[267.78579712 150.22430420]
[253.14315796 146.96963501]
[238.50051880 143.71495056]
[230.34941101 149.98696899]
[219.87008667 150.72314453]
[210.53872681 145.43539429]
[205.58551025 135.67459106]
[191.08384705 131.84033203]
[176.58216858 128.00608826]
[168.18615723 144.71932983]
] def
/pairs [
[10 72]
[11 71]
[12 70]
[13 69]
[14 68]
[15 67]
[16 66]
[17 65]
[18 64]
[19 63]
[20 62]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[94 156]
[95 155]
[96 154]
[98 150]
[99 149]
[100 148]
[101 147]
[102 146]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 72 2 gmark
10 cmark
11 71 2 gmark
12 70 1 gmark
70 cmark
13 69 1 gmark
13 cmark
69 cmark
14 68 3 gmark
15 67 2 gmark
15 cmark
66 cmark
17 65 2 gmark
17 cmark
65 cmark
18 64 1 gmark
19 63 1 gmark
63 cmark
23 59 1 gmark
23 cmark
59 cmark
24 cmark
25 57 1 gmark
57 cmark
26 56 1 gmark
26 cmark
56 cmark
27 55 2 gmark
27 cmark
55 cmark
28 54 3 gmark
28 cmark
54 cmark
29 53 3 gmark
29 cmark
30 52 1 gmark
30 cmark
52 cmark
31 50 3 gmark
32 49 1 gmark
33 48 1 gmark
34 47 2 gmark
34 cmark
47 cmark
35 46 2 gmark
94 156 2 gmark
95 155 1 gmark
96 154 1 gmark
96 cmark
98 150 3 gmark
99 cmark
101 147 3 gmark
102 146 2 gmark
102 cmark
146 cmark
144 cmark
104 143 1 gmark
106 141 2 gmark
106 cmark
141 cmark
107 140 2 gmark
108 139 3 gmark
139 cmark
110 137 2 gmark
111 136 2 gmark
114 133 2 gmark
133 cmark
115 132 3 gmark
130 cmark
118 cmark
129 cmark
120 127 1 gmark
120 cmark

% End Annotations
% show it
showpage
end
%%EOF
