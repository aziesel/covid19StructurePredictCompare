%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:33:20 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGUUCUGUUAUUGAUUUAAUACUUGAUGACUUUGUUGAAAUAAUAAAGUCACAAGACCUUUCUGUAGUUUCAAAAGUUGUCAAAGUUACUAUUGACUAAACAAAAAUUGAAUUUAUGCUUUGGUGUAAAGAUGGACAGGUUCAAACCUUCUACCCAAA\
) def
/coor [
[191.45866394 223.10835266]
[181.41943359 205.27973938]
[178.77580261 184.96162415]
[183.93292236 165.10235596]
[171.46087646 156.76881409]
[158.98884583 148.43525696]
[146.51679993 140.10169983]
[134.04475403 131.76814270]
[121.57270813 123.43459320]
[109.10066223 115.10104370]
[90.49427795 114.84940338]
[82.47601318 98.05749512]
[69.68640900 90.22001648]
[56.89680481 82.38253784]
[44.10720444 74.54505920]
[31.31760025 66.70758057]
[19.00219727 75.57360840]
[4.27030277 79.03977966]
[-10.62604237 76.60820770]
[-23.42188835 68.68016052]
[-32.18375015 56.49021530]
[-35.60173798 41.91411591]
[-33.18532944 27.18013191]
[-45.97493362 19.34265327]
[-58.76453400 11.50517559]
[-71.55413818 3.66769671]
[-84.34374237 -4.16978168]
[-97.13334656 -12.00726032]
[-109.92294312 -19.84473801]
[-122.71254730 -27.68221664]
[-135.50215149 -35.51969528]
[-148.29174805 -43.35717392]
[-161.08135986 -51.19465256]
[-173.87095642 -59.03213120]
[-186.66055298 -66.86960602]
[-193.33241272 -67.43083954]
[-197.99053955 -70.79933167]
[-199.78988647 -75.27424622]
[-212.26193237 -83.60779572]
[-224.73397827 -91.94135284]
[-237.20602417 -100.27490234]
[-249.67807007 -108.60845947]
[-262.31134033 -116.69553375]
[-275.10092163 -124.53301239]
[-287.89053345 -132.37048340]
[-300.68014526 -140.20796204]
[-313.46972656 -148.04544067]
[-326.25933838 -155.88291931]
[-339.04895020 -163.72039795]
[-352.89666748 -156.92008972]
[-368.22000122 -158.70864868]
[-380.12933350 -168.51536560]
[-384.82443237 -183.21092224]
[-380.80709839 -198.10604858]
[-369.35928345 -208.44775391]
[-354.13391113 -210.93603516]
[-339.98934937 -204.77688599]
[-331.43908691 -191.93568420]
[-331.21145630 -176.51000977]
[-318.42187500 -168.67253113]
[-305.63226318 -160.83505249]
[-292.84265137 -152.99757385]
[-280.05307007 -145.16009521]
[-267.26345825 -137.32261658]
[-254.47384644 -129.48513794]
[-249.65667725 -129.72451782]
[-244.64743042 -126.90454102]
[-241.34451294 -121.08049774]
[-228.87246704 -112.74694824]
[-216.40042114 -104.41339111]
[-203.92839050 -96.07984161]
[-191.45634460 -87.74628448]
[-178.82307434 -79.65921021]
[-166.03347778 -71.82173157]
[-153.24388123 -63.98425674]
[-140.45426941 -56.14677811]
[-127.66467285 -48.30929947]
[-114.87506866 -40.47182083]
[-102.08546448 -32.63434219]
[-89.29586792 -24.79686356]
[-76.50626373 -16.95938492]
[-63.71665955 -9.12190533]
[-50.92705536 -1.28442729]
[-38.13745499 6.55305099]
[-25.34785271 14.39052963]
[-13.31680393 5.54840565]
[1.22233307 1.97644627]
[16.06145096 4.24920416]
[28.93458557 12.05112743]
[37.86393356 24.21995735]
[41.46369553 38.91977692]
[39.15507889 53.91797638]
[51.94468307 61.75545502]
[64.73428345 69.59293365]
[77.52388763 77.43041229]
[90.31349182 85.26789093]
[99.89225006 82.36900330]
[109.50572205 85.15059662]
[116.05657959 92.71646881]
[117.43421936 102.62899780]
[129.90626526 110.96254730]
[142.37831116 119.29610443]
[154.85034180 127.62966156]
[167.32238770 135.96321106]
[179.79443359 144.29676819]
[192.26647949 152.63032532]
[199.77870178 145.71623230]
[208.45544434 140.34729004]
[217.98367310 136.71444702]
[228.02012634 134.94606018]
[238.20376587 135.10336304]
[248.16865540 137.17835999]
[257.55718994 141.09419250]
[266.03286743 146.70797729]
[273.29241943 153.81600952]
[279.07662964 162.16119385]
[283.17953491 171.44230652]
[285.45587158 181.32487488]
[285.82611084 191.45323181]
[284.27926636 201.46333313]
[280.87329102 210.99581909]
[275.73275757 219.70892334]
[286.54556274 230.10523987]
[297.35836792 240.50154114]
[305.75979614 244.22000122]
[308.27890015 251.20970154]
[318.88549805 261.81631470]
[329.49209595 272.42291260]
[340.09869385 283.02951050]
[350.70529175 293.63610840]
[351.00570679 278.63912964]
[360.75064087 267.23577881]
[375.51748657 264.60137939]
[388.60449219 271.93151855]
[394.07223511 285.89947510]
[389.43923950 300.16604614]
[376.80819702 308.25653076]
[361.91174316 306.49926758]
[370.96505737 318.45907593]
[380.01840210 330.41888428]
[389.07174683 342.37872314]
[404.38330078 348.25140381]
[406.68554688 364.48815918]
[393.61016846 374.38595581]
[378.60797119 367.76281738]
[377.11193848 351.43203735]
[368.05859375 339.47222900]
[359.00524902 327.51242065]
[349.95190430 315.55261230]
[340.09869385 304.24270630]
[329.49209595 293.63610840]
[318.88549805 283.02951050]
[308.27890015 272.42291260]
[297.67227173 261.81631470]
[286.96206665 251.31434631]
[276.14926147 240.91802979]
[265.33645630 230.52172852]
[247.25054932 239.84283447]
[226.96235657 241.72317505]
] def
/pairs [
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[10 100]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[23 85]
[24 84]
[25 83]
[26 82]
[27 81]
[28 80]
[29 79]
[30 78]
[31 77]
[32 76]
[33 75]
[34 74]
[35 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[122 157]
[123 156]
[124 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
106 cmark
5 105 3 gmark
6 104 3 gmark
7 103 2 gmark
7 cmark
103 cmark
101 cmark
10 100 2 gmark
10 cmark
100 cmark
13 95 1 gmark
23 85 3 gmark
82 cmark
28 cmark
29 79 2 gmark
79 cmark
31 cmark
76 cmark
34 74 1 gmark
35 73 3 gmark
73 cmark
38 72 2 gmark
39 71 2 gmark
40 70 2 gmark
40 cmark
70 cmark
68 cmark
43 65 3 gmark
43 cmark
44 64 2 gmark
45 63 3 gmark
63 cmark
46 62 2 gmark
46 cmark
62 cmark
47 61 3 gmark
49 cmark
59 cmark
122 157 2 gmark
157 cmark
154 cmark
129 151 2 gmark
129 cmark
151 cmark
130 cmark
139 148 1 gmark
139 cmark
148 cmark

% End Annotations
% show it
showpage
end
%%EOF
