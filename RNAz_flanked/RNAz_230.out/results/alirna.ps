%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:45:38 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUAAAGAAGGUGGUAAUUAUAAUUAUCUAUAUAGAUUCUUUAGAAAAGCUAAUCUUAAACCCUUUGAGAGAGAUAUAUCAACUGAAAUUUACCAAGCAGGUAGCAAACCUUGUAAUGGU_AAACUGGUCUUAAUUGUUACUACCCAUUAAAUAAAUAUGG\
) def
/coor [
[79.38745117 127.70566559]
[68.03379822 137.50845337]
[56.68014908 147.31123352]
[45.32649994 157.11401367]
[34.16627884 167.13647461]
[23.20373917 177.37477112]
[12.24120045 187.61306763]
[1.37907076 197.95782471]
[-9.38161469 208.40808105]
[-8.90377331 227.30758667]
[-22.12851334 240.36906433]
[-40.38503265 239.68028259]
[-50.72979736 250.54241943]
[-61.07456207 261.40454102]
[-71.41932678 272.26666260]
[-81.76409149 283.12881470]
[-92.10885620 293.99093628]
[-95.43766785 310.04867554]
[-111.09127045 314.93710327]
[-122.96658325 303.62741089]
[-118.84729767 287.75405884]
[-102.97098541 283.64617920]
[-92.62622070 272.78402710]
[-82.28145599 261.92190552]
[-71.93669128 251.05978394]
[-61.59192657 240.19764709]
[-51.24716187 229.33552551]
[-53.99724579 218.20222473]
[-50.97802734 207.01434326]
[-42.83305359 198.60340881]
[-31.51798820 195.15628052]
[-19.83186150 197.64738464]
[-9.07117558 187.19714355]
[-6.45039415 180.24600220]
[2.00290298 176.65052795]
[12.96544266 166.41223145]
[23.92798233 156.17393494]
[24.98112869 151.46844482]
[29.03256035 147.39274597]
[35.52371216 145.76037598]
[46.87736511 135.95758057]
[58.23101425 126.15480042]
[69.58466339 116.35201263]
[66.06779480 106.40987396]
[65.71555328 95.86992645]
[68.56078339 85.71516418]
[74.33813477 76.89265442]
[82.50878906 70.22520447]
[77.90138245 55.95034027]
[73.29396820 41.67547226]
[58.23054123 42.40225601]
[43.50372696 39.20751572]
[30.11613464 32.31488800]
[18.97760391 22.19956207]
[10.84337044 9.55551434]
[6.26286793 -4.75210524]
[5.54261255 -19.74616241]
[8.72570324 -34.40427780]
[15.58928967 -47.72852707]
[25.66016579 -58.81339645]
[38.24738693 -66.90730286]
[24.45984459 -74.15584564]
[19.99062729 -88.69822693]
[26.98597527 -101.79787445]
[22.37856674 -116.07273865]
[17.77115822 -130.34759521]
[13.16374874 -144.62246704]
[8.55633926 -158.89733887]
[3.94893026 -173.17219543]
[-10.23121834 -180.15066528]
[-15.24441719 -195.13876343]
[-8.11642361 -209.24433899]
[6.92384958 -214.09880066]
[20.95327568 -206.82206726]
[25.64844322 -191.73130798]
[18.22379494 -177.77960205]
[22.83120537 -163.50474548]
[27.43861389 -149.22987366]
[32.04602432 -134.95501709]
[36.65343094 -120.68014526]
[41.26084137 -106.40528107]
[54.59456253 -99.86711884]
[59.47048187 -85.45601654]
[52.52225113 -71.51470947]
[67.46620941 -72.30686951]
[82.11723328 -69.20133972]
[95.47536469 -62.40392303]
[106.62730408 -52.37263870]
[114.80883026 -39.78680801]
[119.45722198 -25.50110054]
[120.24988556 -10.48746109]
[117.12680054 4.23099709]
[110.29497528 17.64971924]
[100.21476746 28.85127068]
[87.56884003 37.06806564]
[92.17624664 51.34292984]
[96.78365326 65.61779785]
[119.91410828 71.78813934]
[133.47409058 91.51673889]
[148.46766663 91.07775879]
[163.46124268 90.63877869]
[178.45481873 90.19979858]
[193.44839478 89.76081848]
[208.44197083 89.32183838]
[223.43554688 88.88285828]
[238.42912292 88.44387817]
[253.38345337 87.27428436]
[268.26296997 85.37686920]
[283.14248657 83.47944641]
[286.45925903 68.68840790]
[294.63745117 55.92545700]
[306.68951416 46.73178482]
[321.16009521 42.21756744]
[336.30178833 42.92792511]
[350.28619385 48.77706909]
[361.42459106 59.05869293]
[368.37197876 72.53124237]
[370.28942871 87.56784058]
[366.94540405 102.35273743]
[358.74371338 115.10059357]
[346.67471313 124.27204132]
[332.19583130 128.75958252]
[317.05548096 128.02133179]
[303.08187866 122.14641571]
[291.96243286 111.84428406]
[285.03988647 98.35895538]
[270.16036987 100.25637817]
[255.28086853 102.15379333]
[265.14791870 113.45166016]
[262.66406250 128.24458313]
[249.64820862 135.70025635]
[235.63133240 130.35917664]
[230.87748718 116.13240051]
[238.86810303 103.43745422]
[223.87452698 103.87643433]
[208.88095093 104.31541443]
[193.88737488 104.75439453]
[178.89379883 105.19337463]
[163.90022278 105.63235474]
[148.90664673 106.07133484]
[133.91307068 106.51031494]
[130.94299316 115.33010101]
[125.72551727 123.03646851]
[118.63958740 129.06968689]
[123.80043793 143.15391541]
[128.96128845 157.23815918]
[134.12214661 171.32238770]
[149.19989014 174.58813477]
[160.10234070 185.50326538]
[163.35057068 200.58479309]
[157.90806580 215.02026367]
[145.51153564 224.20336914]
[130.11663818 225.20381165]
[116.63584900 217.70234680]
[109.37083435 204.09268188]
[110.63983154 188.71760559]
[120.03790283 176.48323059]
[114.87705231 162.39900208]
[109.71620178 148.31477356]
[104.55535126 134.23052979]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 37]
[6 36]
[7 35]
[8 33]
[9 32]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[48 97]
[49 96]
[50 95]
[61 84]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[69 76]
[99 141]
[100 140]
[101 139]
[102 138]
[103 137]
[104 136]
[105 135]
[106 134]
[107 128]
[108 127]
[109 126]
[144 160]
[145 159]
[146 158]
[147 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 42 1 gmark
4 40 1 gmark
5 cmark
37 cmark
6 36 1 gmark
36 cmark
7 cmark
35 cmark
8 33 1 gmark
8 cmark
33 cmark
9 cmark
32 cmark
12 27 1 gmark
26 cmark
16 23 1 gmark
48 97 1 gmark
49 cmark
96 cmark
50 95 1 gmark
95 cmark
65 80 1 gmark
68 77 1 gmark
77 cmark
100 cmark
140 cmark
101 139 1 gmark
102 cmark
137 cmark
106 134 1 gmark
108 127 1 gmark
146 158 1 gmark
147 157 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
