%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:11:45 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCUGCGGUAACUUUAAAGUUACAAAGGGAAAGGCAAAAAAAGGUGCUUGGAACAUUGGUGAACAGAAAUCAAUAUUGAGUCCUCUUUAUGCAUUUGCAUCAGAGGCUGCUCGUGUUGUACGAUCAAUUUUCUCCCGCACUCUUGAAACUGCUCAAAAUUC\
) def
/coor [
[-22.68226051 375.33340454]
[-30.72460556 387.99520874]
[-38.76694870 400.65698242]
[-33.22412872 415.02996826]
[-37.16138458 429.73886108]
[-48.86635590 439.19708252]
[-63.71847534 439.94039917]
[-71.76081848 452.60217285]
[-79.80316162 465.26394653]
[-87.84550476 477.92575073]
[-95.88784790 490.58752441]
[-103.93019104 503.24929810]
[-104.08233643 519.64776611]
[-118.49103546 527.47851562]
[-132.33386230 518.68603516]
[-131.37049866 502.31521606]
[-116.59197235 495.20697021]
[-108.54962921 482.54516602]
[-100.50728607 469.88339233]
[-92.46494293 457.22161865]
[-84.42259979 444.55984497]
[-76.38025665 431.89804077]
[-82.02066803 418.13854980]
[-78.43495178 403.52325439]
[-66.79469299 393.70706177]
[-51.42873001 392.61462402]
[-43.38638687 379.95285034]
[-35.34404373 367.29107666]
[-44.69725418 348.58557129]
[-40.94379044 327.87637329]
[-25.42574883 313.46237183]
[-4.23186779 311.21670532]
[2.27638841 297.70217896]
[8.78464413 284.18765259]
[-1.40642631 271.90960693]
[-5.24858093 256.36279297]
[-1.92604482 240.63735962]
[7.94768047 227.88162231]
[22.44236374 220.67185974]
[38.68822861 220.49201965]
[44.93155289 206.85307312]
[51.17487717 193.21412659]
[57.28483963 179.51490784]
[63.26085663 165.75674438]
[69.23686981 151.99856567]
[75.21289062 138.24040222]
[69.52684784 124.52163696]
[75.39138794 110.48376465]
[89.81944275 104.61273956]
[95.66094971 90.79692078]
[101.36737823 76.92476654]
[107.07381439 63.05261612]
[105.16825867 47.34658432]
[117.16561890 38.51976395]
[122.87204742 24.64761162]
[128.57847595 10.77545834]
[134.28491211 -3.09669423]
[139.99134827 -16.96884727]
[145.69778442 -30.84099960]
[138.01370239 -37.57016754]
[132.33573914 -46.04004288]
[129.04116821 -55.67203903]
[128.34478760 -65.81091309]
[130.28492737 -75.76934814]
[134.72155762 -84.87452698]
[141.34622192 -92.51361847]
[149.70356750 -98.17498779]
[159.22259521 -101.48250580]
[169.25567627 -102.22046661]
[179.12261963 -100.34768677]
[186.41040039 -113.45830536]
[193.69818115 -126.56891632]
[200.98596191 -139.67953491]
[208.27374268 -152.79014587]
[215.56152344 -165.90075684]
[217.00910950 -174.97215271]
[223.12156677 -179.19407654]
[230.66377258 -192.15998840]
[238.20599365 -205.12591553]
[245.74819946 -218.09184265]
[253.03598022 -231.20245361]
[260.06655884 -244.45277405]
[267.09713745 -257.70309448]
[274.12774658 -270.95339966]
[281.15832520 -284.20370483]
[278.12847900 -296.77493286]
[284.29702759 -307.68099976]
[295.86648560 -311.31973267]
[303.15426636 -324.43035889]
[310.44204712 -337.54095459]
[317.72982788 -350.65158081]
[316.92230225 -367.03082275]
[330.84820557 -375.69119263]
[345.18173218 -367.72363281]
[345.17779541 -351.32449341]
[330.84045410 -343.36380005]
[323.55267334 -330.25317383]
[316.26489258 -317.14257812]
[308.97711182 -304.03195190]
[310.22976685 -286.54931641]
[294.40863037 -277.17312622]
[287.37805176 -263.92282104]
[280.34747314 -250.67250061]
[273.31686401 -237.42218018]
[266.28628540 -224.17185974]
[266.82299805 -219.37992859]
[264.31976318 -214.20698547]
[258.71411133 -210.54963684]
[251.17190552 -197.58370972]
[243.62969971 -184.61778259]
[236.08749390 -171.65187073]
[228.67214966 -158.61297607]
[221.38436890 -145.50236511]
[214.09657288 -132.39175415]
[206.80879211 -119.28113556]
[199.52101135 -106.17051697]
[192.23323059 -93.05990601]
[203.78436279 -76.56661224]
[205.47224426 -56.42590332]
[196.76271057 -38.10400772]
[179.95378113 -26.61183167]
[159.56993103 -25.13456726]
[153.86349487 -11.26241493]
[148.15707397 2.60973835]
[142.45063782 16.48189163]
[136.74420166 30.35404396]
[131.03776550 44.22619629]
[133.35148621 58.93999863]
[120.94596863 68.75904846]
[115.23953247 82.63120270]
[109.53309631 96.50335693]
[109.61891937 104.60746765]
[103.57761383 110.58876038]
[109.13477325 125.14058685]
[102.87825012 139.00819397]
[88.97106171 144.21641541]
[82.99504089 157.97459412]
[77.01902771 171.73275757]
[71.04300690 185.49092102]
[70.48596954 194.66018677]
[64.81382751 199.45744324]
[58.57050323 213.09638977]
[52.32717896 226.73533630]
[61.77651215 237.28097534]
[66.46958923 250.59446716]
[65.72668457 264.64788818]
[59.69341278 277.31405640]
[49.31367111 286.68835449]
[36.18210602 291.37524414]
[22.29917717 290.69589233]
[15.79092121 304.21041870]
[9.28266525 317.72497559]
[15.71961594 324.64361572]
[19.97817802 333.05328369]
[21.73687172 342.29025269]
[20.87093925 351.62954712]
[17.46109390 360.34185791]
[11.78619957 367.75042725]
[4.30050659 373.28369141]
[-4.40269375 376.51928711]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[32 152]
[33 151]
[34 150]
[40 143]
[41 142]
[42 141]
[43 139]
[44 138]
[45 137]
[46 136]
[49 133]
[50 131]
[51 130]
[52 129]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[77 111]
[78 110]
[79 109]
[80 108]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[88 99]
[89 98]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 cmark
11 cmark
32 152 1 gmark
32 cmark
33 151 1 gmark
131 cmark
59 122 1 gmark
70 117 1 gmark
72 cmark
74 113 1 gmark
75 cmark
77 111 1 gmark
79 109 1 gmark
80 108 1 gmark
83 103 1 gmark
84 102 1 gmark
88 cmark
89 98 1 gmark
98 cmark
91 cmark
96 cmark

% End Annotations
% show it
showpage
end
%%EOF
