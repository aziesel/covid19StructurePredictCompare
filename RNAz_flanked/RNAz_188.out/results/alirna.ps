%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:18:59 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCUACGAAGUACUUUGGCAAGAUAGGAAAUGAACAAACGUGUUGUAUGUGUAAUAGACGUGCAACAUCCUUCUCCACACCUUCACACACUUAUGCCUGCUGGAAUCAUUCUAGUGGAUAUGAUUAUGUCUAUAACCCAUUUAUGAUUGAUG\
) def
/coor [
[102.19032288 161.07659912]
[94.64493561 174.04067993]
[83.94325256 184.55133057]
[70.84539795 191.86203003]
[56.28169632 195.45347595]
[41.28658295 195.07060242]
[26.92514038 190.74060059]
[14.21743965 182.77101135]
[4.06609249 171.72790527]
[-2.80786824 158.39566040]
[-5.91619444 143.72125244]
[-5.03810644 128.74697876]
[-0.23597385 114.53643036]
[8.14911556 102.09897614]
[19.52157974 92.31802368]
[33.07365036 85.88829803]
[47.84274673 83.26650238]
[62.77983856 84.63883972]
[76.82396698 89.90785217]
[88.97576141 98.69754791]
[79.76257324 86.86043549]
[71.97080994 81.97043610]
[70.48431396 74.68215179]
[61.51773071 62.65716171]
[52.55114365 50.63217545]
[43.58455658 38.60718918]
[34.61796951 26.58219910]
[25.65138435 14.55721283]
[8.59025764 7.70714664]
[7.15188742 -9.75577068]
[-2.06130314 -21.59287834]
[-11.27449417 -33.42998505]
[-20.48768425 -45.26709366]
[-39.46957779 -51.92862701]
[-41.44295120 -71.12679291]
[-51.13743973 -82.57305145]
[-60.83192825 -94.01931000]
[-75.65518188 -99.54939270]
[-77.97659302 -114.26198578]
[-87.67108154 -125.70824432]
[-97.36557007 -137.15451050]
[-107.06005859 -148.60076904]
[-117.77570343 -159.09719849]
[-129.41987610 -168.55305481]
[-141.06404114 -178.00891113]
[-159.28469849 -180.46110535]
[-164.96594238 -197.03656006]
[-176.80305481 -206.24975586]
[-188.64016724 -215.46295166]
[-200.47726440 -224.67613220]
[-212.31437683 -233.88932800]
[-228.34802246 -233.33973694]
[-238.66458130 -245.62582397]
[-235.35009766 -261.32275391]
[-220.94714355 -268.38919067]
[-206.50444031 -261.40435791]
[-203.10118103 -245.72644043]
[-191.26408386 -236.51324463]
[-179.42697144 -227.30004883]
[-167.58985901 -218.08686829]
[-155.75276184 -208.87367249]
[-143.67391968 -210.05107117]
[-133.72770691 -202.41772461]
[-131.60818481 -189.65307617]
[-119.96401215 -180.19721985]
[-108.31984711 -170.74136353]
[-111.01048279 -185.49807739]
[-105.43231964 -199.42230225]
[-93.29763031 -208.23986816]
[-78.33129120 -209.24412537]
[-65.12735748 -202.12680054]
[-57.73891830 -189.07264709]
[-58.43393326 -174.08876038]
[-66.99905396 -161.77459717]
[-80.80513763 -155.91011047]
[-95.61380005 -158.29525757]
[-85.91931152 -146.84899902]
[-76.22482300 -135.40272522]
[-66.53033447 -123.95647430]
[-52.40049744 -119.24510193]
[-49.38566589 -103.71379852]
[-39.69117737 -92.26753998]
[-29.99668884 -80.82128143]
[-19.70154381 -80.88665771]
[-10.90444374 -75.12545776]
[-6.67563677 -65.25728607]
[-8.65057659 -54.48028564]
[0.56261390 -42.64317703]
[9.77580452 -30.80606842]
[18.98899460 -18.96896172]
[30.98725891 -17.14514923]
[38.75524521 -7.30373812]
[37.67637253 5.59062576]
[46.64295959 17.61561394]
[55.60954666 29.64060020]
[64.57613373 41.66558838]
[73.54271698 53.69057465]
[82.50930786 65.71556091]
[91.59967804 77.64724731]
[100.81286621 89.48435974]
[106.17977905 79.54106903]
[115.70478821 71.89321899]
[128.55285645 67.81932068]
[143.54965210 67.50931549]
[158.54644775 67.19931030]
[173.54324341 66.88931274]
[188.54003906 66.57930756]
[203.53683472 66.26930237]
[218.52961731 65.80433655]
[233.51681519 65.18446350]
[248.50399780 64.56459045]
[264.07974243 57.86886215]
[274.82559204 70.98233032]
[265.19934082 84.93840027]
[249.12387085 79.55177307]
[234.13668823 80.17165375]
[219.14949036 80.79152679]
[212.55468750 84.23206329]
[203.84683228 81.26609802]
[188.85003662 81.57610321]
[173.85324097 81.88610840]
[158.85644531 82.19610596]
[143.85964966 82.50611115]
[128.86285400 82.81611633]
[125.29324341 89.41217041]
[118.15403748 102.60427856]
[114.58443451 109.20032501]
[122.52737427 121.92469788]
[130.47032166 134.64906311]
[144.34141541 142.25851440]
[144.51739502 157.15206909]
[152.46034241 169.87644958]
[160.40328979 182.60081482]
[168.34622192 195.32518005]
[183.83387756 196.28033447]
[195.78077698 206.18243408]
[199.59307861 221.22390747]
[193.80490112 235.62100220]
[180.64189148 243.83775330]
[165.16551208 242.71464539]
[153.32675171 232.68354797]
[149.67784119 217.60159302]
[155.62185669 203.26812744]
[147.67890930 190.54376221]
[139.73596191 177.81939697]
[131.79301453 165.09501648]
[118.49006653 158.39570618]
[117.74594879 142.59201050]
[109.80300903 129.86764526]
[101.86006165 117.14327240]
[105.93072510 131.58036804]
] def
/pairs [
[20 100]
[21 99]
[23 98]
[24 97]
[25 96]
[26 95]
[27 94]
[28 93]
[30 90]
[31 89]
[32 88]
[33 87]
[35 83]
[36 82]
[37 81]
[39 79]
[40 78]
[41 77]
[42 76]
[43 66]
[44 65]
[45 64]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[103 124]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 117]
[110 116]
[111 115]
[127 150]
[128 149]
[129 148]
[131 146]
[132 145]
[133 144]
[134 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
21 cmark
99 cmark
24 97 2 gmark
27 94 3 gmark
28 93 3 gmark
30 90 3 gmark
30 cmark
32 88 3 gmark
33 87 2 gmark
33 cmark
87 cmark
35 cmark
83 cmark
36 82 2 gmark
36 cmark
82 cmark
37 81 1 gmark
37 cmark
81 cmark
39 cmark
79 cmark
40 78 3 gmark
42 76 3 gmark
43 66 1 gmark
43 cmark
66 cmark
45 64 2 gmark
45 cmark
64 cmark
48 cmark
60 cmark
51 57 2 gmark
103 124 2 gmark
104 123 2 gmark
104 cmark
123 cmark
108 119 3 gmark
109 117 2 gmark
111 cmark
129 cmark
132 cmark
145 cmark
133 144 3 gmark

% End Annotations
% show it
showpage
end
%%EOF
