%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:38:09 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGAUUCAGAUGUUGAAACUAAGUAUAUUACUGAAUCUGUCAUAUCUGCAGUACAGGCUGGCCUUGAAUUGACGGAUGAAAGUUGUAAUAACUUGGUGCCAACAUAUUUGAAGAGUGAAAACAUUGUGGCAGCUGAUUUAGGUGUUCUUAUU\
) def
/coor [
[200.33309937 286.31677246]
[183.44984436 281.75927734]
[168.08349609 273.39575195]
[155.07887268 261.68212891]
[145.15176392 247.25856018]
[138.84968567 230.91452026]
[136.52162170 213.54553223]
[138.29869080 196.10417175]
[144.08679199 179.54776001]
[153.57156372 164.78587341]
[143.01954651 154.12496948]
[132.46752930 143.46405029]
[121.91551208 132.80314636]
[107.46318054 129.20046997]
[103.25431061 113.94936371]
[89.81958008 110.07643127]
[86.08477783 96.60264587]
[75.53276062 85.94174194]
[64.98075104 75.28083038]
[54.42873383 64.61991882]
[43.87671661 53.95901108]
[33.32470322 43.29810333]
[22.77268791 32.63719559]
[12.22067261 21.97628593]
[3.90526462 18.04566574]
[1.56425834 10.98649502]
[-8.76664448 0.11118103]
[-19.09754753 -10.76413250]
[-29.42844963 -21.63944626]
[-39.75935364 -32.51475906]
[-50.09025574 -43.39007568]
[-69.65895844 -39.67096710]
[-87.41826630 -48.37213516]
[-96.34212494 -65.86059570]
[-93.01461792 -85.06549072]
[-104.20291138 -95.05658722]
[-115.39121246 -105.04768372]
[-126.57950592 -115.03878021]
[-137.76780701 -125.02988434]
[-148.95610046 -135.02098083]
[-160.14439392 -145.01206970]
[-171.33268738 -155.00317383]
[-186.89331055 -154.29254150]
[-198.09750366 -164.58432007]
[-198.67907715 -179.42337036]
[-209.86738586 -189.41447449]
[-221.05567932 -199.40556335]
[-232.24397278 -209.39666748]
[-243.73463440 -219.03848267]
[-255.51676941 -228.32185364]
[-267.29891968 -237.60523987]
[-279.08105469 -246.88862610]
[-295.37976074 -248.70083618]
[-301.71096802 -263.82855225]
[-291.56164551 -276.70968628]
[-275.37258911 -274.09323120]
[-269.79766846 -258.67077637]
[-258.01553345 -249.38739014]
[-246.23339844 -240.10400391]
[-234.45124817 -230.82061768]
[-230.86779785 -230.89840698]
[-227.07272339 -229.20515442]
[-223.91708374 -225.66291809]
[-222.25286865 -220.58496094]
[-211.06457520 -210.59385681]
[-199.87628174 -200.60276794]
[-188.68798828 -190.61166382]
[-173.87792969 -191.70605469]
[-162.38906860 -181.73304749]
[-161.34159851 -166.19146729]
[-150.15330505 -156.20037842]
[-138.96499634 -146.20927429]
[-127.77670288 -136.21817017]
[-116.58840942 -126.22708130]
[-105.40011597 -116.23598480]
[-94.21181488 -106.24488831]
[-83.02352142 -96.25379181]
[-73.51997375 -100.66628265]
[-63.04852295 -101.63718414]
[-52.82127762 -99.02820587]
[-44.03077316 -93.11696625]
[-37.71092606 -84.56766510]
[-34.61544418 -74.35653687]
[-35.12801743 -63.66037750]
[-39.21494293 -53.72097778]
[-28.88403893 -42.84566116]
[-18.55313492 -31.97034836]
[-8.22223282 -21.09503555]
[2.10866952 -10.21972179]
[12.43957233 0.65559220]
[22.88158035 11.42427063]
[33.43359756 22.08518028]
[43.98561096 32.74608994]
[54.53762817 43.40699768]
[65.08964539 54.06790543]
[75.64165497 64.72881317]
[86.19367218 75.38972473]
[96.74568939 86.05063629]
[110.18041992 89.92356873]
[113.91522217 103.39735413]
[129.12231445 107.76257324]
[132.57641602 122.25112915]
[143.12843323 132.91203308]
[153.68045044 143.57295227]
[164.23246765 154.23385620]
[174.79168701 147.11398315]
[186.40110779 141.88706970]
[198.72470093 138.70304871]
[211.40599060 137.65281677]
[224.07839966 138.76550293]
[236.37576294 142.00775146]
[247.94299316 147.28469849]
[258.44628906 154.44273376]
[267.58276367 163.27398682]
[275.08920288 173.52236938]
[280.74966431 184.89097595]
[284.40155029 197.05070496]
[285.94055176 209.64978027]
[285.32336426 222.32392883]
[282.56903076 234.70692444]
[277.75830078 246.44113159]
[271.03134155 257.18786621]
[262.58358765 266.63720703]
[271.74554443 278.51403809]
[280.90747070 290.39086914]
[290.06939697 302.26770020]
[304.62478638 308.46859741]
[306.27224731 323.27178955]
[315.43417358 335.14862061]
[324.59613037 347.02545166]
[333.75805664 358.90228271]
[348.31344604 365.10317993]
[349.96090698 379.90640259]
[359.12283325 391.78320312]
[368.28479004 403.66003418]
[382.74667358 412.50820923]
[378.24774170 428.85433960]
[361.29501343 429.05630493]
[356.40795898 412.82199097]
[347.24603271 400.94515991]
[338.08407593 389.06832886]
[324.18402100 383.71694946]
[321.88122559 368.06420898]
[312.71929932 356.18737793]
[303.55737305 344.31057739]
[294.39541626 332.43374634]
[280.49536133 327.08233643]
[278.19256592 311.42962646]
[269.03063965 299.55279541]
[259.86871338 287.67596436]
[250.70677185 275.79916382]
[234.90986633 283.24917603]
] def
/pairs [
[10 105]
[11 104]
[12 103]
[13 102]
[15 100]
[17 98]
[18 97]
[19 96]
[20 95]
[21 94]
[22 93]
[23 92]
[24 91]
[26 90]
[27 89]
[28 88]
[29 87]
[30 86]
[31 85]
[35 77]
[36 76]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[45 67]
[46 66]
[47 65]
[48 64]
[49 60]
[50 59]
[51 58]
[52 57]
[123 151]
[124 150]
[125 149]
[126 148]
[128 146]
[129 145]
[130 144]
[131 143]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 104 3 gmark
100 cmark
17 98 3 gmark
17 cmark
19 96 2 gmark
20 95 3 gmark
20 cmark
21 94 1 gmark
22 cmark
23 92 1 gmark
23 cmark
92 cmark
24 91 2 gmark
27 89 3 gmark
27 cmark
89 cmark
29 87 2 gmark
30 cmark
31 85 1 gmark
31 cmark
35 77 3 gmark
35 cmark
76 cmark
37 75 2 gmark
38 74 2 gmark
38 cmark
74 cmark
39 73 3 gmark
41 71 2 gmark
41 cmark
71 cmark
45 67 1 gmark
46 cmark
47 65 3 gmark
47 cmark
65 cmark
48 64 2 gmark
50 cmark
59 cmark
51 58 2 gmark
52 cmark
57 cmark
125 149 2 gmark
125 cmark
149 cmark
126 148 2 gmark
128 146 2 gmark
128 cmark
129 145 2 gmark
131 143 3 gmark
133 141 2 gmark
134 140 1 gmark
134 cmark
140 cmark

% End Annotations
% show it
showpage
end
%%EOF
