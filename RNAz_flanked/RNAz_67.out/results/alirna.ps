%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:27:02 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGGUCACACAGAUCUAAUGGCUGCUUAUGUAGACAAUUCUAGUCUUACUAUUAAGAAACCUAAUGAAUUAUCUAGAGUAUUAGGUUUGAAAACCCUUGCUACUCAUGGUUUAGCUGCUGUUAAUAGUGUUCCUUGGGAUACUAUAGCUAAUUAUGCUAA\
) def
/coor [
[208.29647827 286.90301514]
[206.07321167 272.06869507]
[199.00624084 274.58029175]
[193.84539795 288.66455078]
[188.68453979 302.74877930]
[183.52369690 316.83300781]
[188.94061279 331.93386841]
[180.38940430 345.50799561]
[164.42982483 347.14242554]
[153.30470276 335.58340454]
[155.54827881 319.69799805]
[169.43946838 311.67214966]
[174.60031128 297.58792114]
[179.76116943 283.50369263]
[184.92201233 269.41946411]
[184.33677673 254.43087769]
[178.09344482 240.79193115]
[171.85012817 227.15298462]
[165.60679626 213.51403809]
[159.36347961 199.87507629]
[153.12014771 186.23612976]
[146.87683105 172.59718323]
[134.54421997 164.24517822]
[135.83552551 148.47676086]
[129.59220886 134.83781433]
[123.34887695 121.19886017]
[115.61773682 131.20678711]
[103.60632324 138.08628845]
[88.69104767 140.05061340]
[72.96694183 135.94593811]
[58.95381927 125.52721405]
[44.11416245 127.71459961]
[29.27450943 129.90197754]
[14.43485451 132.08937073]
[1.92328238 142.69090271]
[-13.42028522 136.90238953]
[-15.81170082 120.67853546]
[-2.79088211 110.70906830]
[12.24746990 117.24971008]
[27.08712387 115.06232452]
[41.92678070 112.87493896]
[56.76643372 110.68755341]
[57.71514511 103.24780273]
[59.61256409 88.36829376]
[60.56127548 80.92853546]
[46.74545670 75.08703613]
[32.92963791 69.24553680]
[19.11381721 63.40402985]
[2.91529918 65.96138000]
[-7.18692017 53.04328156]
[-0.80054259 37.93877411]
[15.50467396 36.18607330]
[24.95532036 49.58821106]
[38.77114105 55.42971420]
[52.58695984 61.27121735]
[66.40277863 67.11271667]
[77.46468353 56.98186493]
[72.85727692 42.70700073]
[68.24986267 28.43213272]
[63.64245605 14.15726852]
[59.03504562 -0.11759712]
[54.42763519 -14.39246273]
[49.82022858 -28.66732788]
[45.21281815 -42.94219208]
[40.60540771 -57.21706009]
[35.90739822 -61.98448944]
[34.56344223 -67.57189941]
[36.10851288 -72.13956451]
[32.06156158 -86.58332062]
[28.01460838 -101.02708435]
[14.11752892 -108.55348206]
[9.69292450 -123.72577667]
[17.36583519 -137.54251099]
[32.58405685 -141.80645752]
[46.31889343 -133.98788452]
[50.42170334 -118.72543335]
[42.45836639 -105.07403564]
[46.50531769 -90.63027191]
[50.55226898 -76.18651581]
[54.88027573 -61.82446671]
[59.48768234 -47.54960251]
[64.09509277 -33.27473831]
[68.70249939 -18.99987221]
[73.30991364 -4.72500610]
[77.91732025 9.54985905]
[82.52472687 23.82472420]
[87.13214111 38.09959030]
[91.73954773 52.37445450]
[112.36265564 59.09053421]
[125.54859924 73.04818726]
[129.65794373 89.27766418]
[140.62048340 79.03936768]
[151.58302307 68.80107117]
[162.54556274 58.56277084]
[173.50810242 48.32447433]
[174.73753357 35.45186996]
[184.12155151 27.14929008]
[196.24531555 27.47674561]
[207.40553284 17.45429611]
[209.69834900 1.57592654]
[223.61434937 -6.40682364]
[238.47839355 -0.37027249]
[242.88804626 15.05485439]
[233.46060181 28.03572083]
[217.42799377 28.61451530]
[206.26776123 38.63696289]
[201.75856018 55.57445908]
[183.74639893 59.28701401]
[172.78385925 69.52530670]
[161.82131958 79.76361084]
[150.85877991 90.00190735]
[139.89624023 100.24020386]
[136.98782349 114.95553589]
[143.23115540 128.59448242]
[149.47447205 142.23342896]
[162.25364685 151.56098938]
[160.51577759 166.35386658]
[166.75909424 179.99281311]
[173.00242615 193.63175964]
[179.24574280 207.27070618]
[185.48907471 220.90965271]
[191.73239136 234.54859924]
[197.97572327 248.18754578]
[234.94242859 251.64219666]
[247.83413696 259.31054688]
[260.72586060 266.97888184]
[273.61758423 274.64724731]
[286.50930786 282.31558228]
[299.40103149 289.98394775]
[312.29275513 297.65228271]
[325.18444824 305.32061768]
[338.07617188 312.98898315]
[354.47204590 312.66116333]
[362.72116089 326.83450317]
[354.33755493 340.92871094]
[337.94552612 340.44488525]
[330.40783691 325.88070679]
[317.51611328 318.21234131]
[304.62438965 310.54400635]
[291.73266602 302.87564087]
[278.84094238 295.20730591]
[265.94924927 287.53897095]
[253.05751038 279.87060547]
[240.16580200 272.20227051]
[227.27407837 264.53390503]
[220.20712280 267.04550171]
[227.84426880 279.95574951]
[235.48141479 292.86596680]
[243.11856079 305.77618408]
[250.75570679 318.68643188]
[262.60946655 327.87820435]
[268.11868286 341.82983398]
[265.74301147 356.64050293]
[256.14669800 368.16918945]
[242.01281738 373.19250488]
[227.29318237 370.30590820]
[216.10336304 360.31649780]
[211.57202148 346.01730347]
[214.96627808 331.40597534]
[212.74301147 316.57165527]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[21 118]
[22 117]
[24 115]
[25 114]
[26 113]
[31 42]
[32 41]
[33 40]
[34 39]
[45 56]
[46 55]
[47 54]
[48 53]
[57 88]
[58 87]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[68 79]
[69 78]
[70 77]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[98 106]
[99 105]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 13 1 gmark
17 122 1 gmark
120 cmark
20 119 1 gmark
26 113 1 gmark
32 41 1 gmark
34 39 1 gmark
45 56 1 gmark
64 81 1 gmark
65 80 1 gmark
68 cmark
79 cmark
69 cmark
92 111 1 gmark
95 108 1 gmark
126 143 1 gmark
127 142 1 gmark
139 cmark
131 cmark
138 cmark

% End Annotations
% show it
showpage
end
%%EOF
