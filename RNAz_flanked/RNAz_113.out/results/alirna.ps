%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:06:29 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCAACUAUUUGGUUGUGUACAAGCAUACUUUUAGAG__GUUAUGAUUAUGCCU_GGCUAUCAUAUUUUGUUCCUACUGU___UGAUUAUACUUAUAAUGAUGAAGUUAUUUAUGGUUUAGUUUUACUUGUAGUA\
) def
/coor [
[77.31792450 144.64662170]
[69.89091492 145.69041443]
[64.11037445 159.53186035]
[58.32983398 173.37329102]
[52.54929352 187.21473694]
[46.76875687 201.05616760]
[49.39749146 217.24325562]
[36.52405548 227.40232849]
[21.39153862 221.08259583]
[19.56697464 204.78526306]
[32.92731857 195.27563477]
[38.70785904 181.43418884]
[44.48839951 167.59275818]
[50.26893616 153.75131226]
[56.04947662 139.90988159]
[65.76110840 107.73663330]
[89.62407684 96.87207794]
[77.18851471 88.48418427]
[64.75295258 80.09629059]
[49.43101883 82.90271759]
[36.93907547 74.21905518]
[34.35799789 59.59463120]
[21.92243576 51.20673752]
[9.48687172 42.81884384]
[-2.94869184 34.43095016]
[-15.38425541 26.04305840]
[-27.81981850 17.65516472]
[-40.25538254 9.26727104]
[-54.04743958 15.87986660]
[-69.19754028 14.70888615]
[-81.64466095 6.16865110]
[-88.10260773 -7.36467361]
[-86.92738342 -22.21339226]
[-99.36294556 -30.60128593]
[-111.79851532 -38.98917770]
[-124.23407745 -47.37707138]
[-134.88745117 -44.66874695]
[-145.04721069 -48.24708557]
[-151.38644409 -56.68112183]
[-151.97383118 -66.99445343]
[-167.40974426 -64.90392303]
[-179.48414612 -74.15937042]
[-181.38201904 -88.88803864]
[-193.41387939 -97.84542084]
[-205.44572449 -106.80280304]
[-221.78793335 -108.16815948]
[-228.53086853 -123.11690521]
[-218.73797607 -136.27104187]
[-202.48333740 -134.09872437]
[-196.48834229 -118.83464813]
[-184.45649719 -109.87726593]
[-172.42465210 -100.91989136]
[-157.77041626 -103.32597351]
[-145.44081116 -94.41331482]
[-143.01644897 -79.02629852]
[-123.74800110 -78.29195404]
[-115.84618378 -59.81263733]
[-103.41062164 -51.42474365]
[-90.97505188 -43.03684998]
[-78.53948975 -34.64895630]
[-65.21224976 -41.30103302]
[-50.24517441 -40.38299942]
[-37.66403580 -32.04145813]
[-30.90299225 -18.43318748]
[-31.86748886 -3.16829228]
[-19.43192482 5.21960115]
[-6.99636173 13.60749531]
[5.43920183 21.99538803]
[17.87476540 30.38328171]
[30.31032944 38.77117538]
[42.74589157 47.15906906]
[57.27230453 44.07379913]
[70.00322723 52.40316772]
[73.14084625 67.66072083]
[85.57640839 76.04861450]
[98.01197052 84.43650818]
[86.83480835 74.43296814]
[80.50360870 60.83458328]
[80.04281616 45.84166336]
[85.52698517 31.88014793]
[96.06873322 21.20909119]
[109.96235657 15.55513382]
[124.95978546 15.83312035]
[138.63433838 21.99806976]
[148.77339172 33.05245590]
[153.73640442 47.20761871]
[152.72030640 62.17316437]
[145.88952637 75.52758026]
[134.34931946 85.11004639]
[119.96437836 89.37027740]
[134.79310608 87.10999298]
[149.62182617 84.84970856]
[164.45054626 82.58942413]
[170.64630127 68.46086121]
[183.50959778 59.94387436]
[198.93582153 59.75620270]
[212.00251770 67.95773315]
[218.54014587 81.93138123]
[216.46257019 97.21821594]
[206.43275452 108.94025421]
[191.65116882 113.35704803]
[176.83454895 109.05920410]
[166.71084595 97.41815186]
[151.88211060 99.67843628]
[137.05339050 101.93872070]
[122.22466278 104.19900513]
[119.49620819 111.18510437]
[133.59327698 116.31078339]
[148.54684448 117.49024963]
[152.24533081 132.02714539]
[139.67364502 140.20960999]
[127.87885284 130.94238281]
[114.03931427 125.15730286]
[111.31086731 132.14340210]
[120.68269348 143.85531616]
[130.05451965 155.56721497]
[139.42634583 167.27912903]
[155.15985107 168.77322388]
[165.16410828 181.00802612]
[163.50375366 196.72485352]
[151.16386414 206.59919739]
[135.46546936 204.77276611]
[125.72214508 192.32916260]
[127.71443939 176.65095520]
[118.34261322 164.93904114]
[108.97077942 153.22714233]
[99.59895325 141.51522827]
[92.17194366 142.55902100]
[94.78150940 157.33029175]
[97.39106750 172.10154724]
[103.13101959 185.95986938]
[92.13080597 196.15768433]
[78.74606323 189.38652039]
[80.44400024 174.48330688]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[17 76]
[18 75]
[19 74]
[22 71]
[23 70]
[24 69]
[25 68]
[26 67]
[27 66]
[28 65]
[33 60]
[34 59]
[35 58]
[36 57]
[40 55]
[43 52]
[44 51]
[45 50]
[90 106]
[91 105]
[92 104]
[93 103]
[114 127]
[115 126]
[116 125]
[117 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 15 1 gmark
2 cmark
3 cmark
14 cmark
5 12 1 gmark
5 cmark
12 cmark
6 11 2 gmark
11 cmark
17 76 1 gmark
17 cmark
76 cmark
18 75 2 gmark
75 cmark
19 74 2 gmark
22 71 3 gmark
23 70 2 gmark
23 cmark
24 69 1 gmark
25 68 2 gmark
26 67 3 gmark
26 cmark
67 cmark
27 66 2 gmark
27 cmark
28 65 2 gmark
28 cmark
65 cmark
33 cmark
60 cmark
34 59 3 gmark
59 cmark
35 cmark
57 cmark
40 cmark
43 52 1 gmark
43 cmark
52 cmark
44 cmark
51 cmark
45 50 2 gmark
45 cmark
91 105 2 gmark
92 104 1 gmark
92 cmark
104 cmark
93 cmark
103 cmark
114 127 1 gmark
115 cmark
126 cmark
116 125 1 gmark
116 cmark
125 cmark
117 124 3 gmark
117 cmark

% End Annotations
% show it
showpage
end
%%EOF
