%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:40:04 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAAUUAAUUACCUUGGCAAGCCAAAAGAACAAAUAGAUGGUUAUGUCAUGCAUGCCAACUACAUAUUUUGGAGGAAUACAAAUCCAAUGAAGUUGACUACCUACUCACUAUUUGACAUGACUAAAUUUCCUCUUAAAUUAAAAGGAACACCAGU\
) def
/coor [
[5.47303152 184.80862427]
[0.88879573 193.84800720]
[-5.11411715 202.00775146]
[-12.37137032 209.06747437]
[-20.68477440 214.83682251]
[-29.82770729 219.16070557]
[-39.55128098 221.92335510]
[-49.59112549 223.05151367]
[-59.67457199 222.51632690]
[-69.52806854 220.33407593]
[-78.88457489 216.56570435]
[-87.49082947 211.31513977]
[-97.71463013 222.29119873]
[-107.93842316 233.26725769]
[-118.16222382 244.24331665]
[-128.38601685 255.21939087]
[-131.53674316 271.31301880]
[-147.13522339 276.37454224]
[-159.13510132 265.19711304]
[-155.19190979 249.27909851]
[-139.36207581 244.99559021]
[-129.13829041 234.01953125]
[-118.91448975 223.04345703]
[-108.69068909 212.06739807]
[-98.46689606 201.09133911]
[-102.71006012 195.39065552]
[-106.26355743 189.23638916]
[-109.07943726 182.71157837]
[-111.11969757 175.90426636]
[-112.35682678 168.90628052]
[-112.77411652 161.81204224]
[-112.36595154 154.71728516]
[-111.13783264 147.71771240]
[-125.20411682 142.50813293]
[-139.27040100 137.29855347]
[-153.33668518 132.08897400]
[-168.96502686 134.55177307]
[-178.21284485 122.87585449]
[-192.27912903 117.66627502]
[-206.34541321 112.45669556]
[-220.41169739 107.24711609]
[-229.60617065 107.19476318]
[-234.70846558 101.78678894]
[-248.66627502 96.29319763]
[-262.62408447 90.79960632]
[-276.58190918 85.30602264]
[-293.53494263 85.13135529]
[-298.06018066 68.79248047]
[-283.61254883 59.92105484]
[-271.08831787 71.34821320]
[-257.13049316 76.84179688]
[-243.17269897 82.33538818]
[-229.21487427 87.82897949]
[-215.20211792 93.18083954]
[-201.13583374 98.39041901]
[-187.06954956 103.59999847]
[-173.00326538 108.80957031]
[-158.38104248 105.97415161]
[-148.12710571 118.02269745]
[-134.06082153 123.23227692]
[-119.99453735 128.44184875]
[-105.92825317 133.65142822]
[-91.44757843 115.25311279]
[-71.09392548 103.62191772]
[-47.83360291 100.47821045]
[-25.06603241 106.30353546]
[-6.12691975 120.26705170]
[6.20044994 140.34391785]
[20.79482269 136.87919617]
[35.38919830 133.41448975]
[49.98357010 129.94976807]
[64.57794189 126.48505402]
[79.17231750 123.02033234]
[79.38843536 60.67273331]
[85.02319336 46.77130890]
[90.65794373 32.86988831]
[96.29270172 18.96846771]
[101.92745972 5.06704521]
[107.56221008 -8.83437634]
[113.19696808 -22.73579788]
[118.83172607 -36.63721848]
[108.89526367 -48.27875137]
[105.51835632 -63.20708466]
[109.47700500 -77.99179840]
[119.86153412 -89.23546600]
[134.28565979 -94.35438538]
[149.43481445 -92.17226410]
[161.82783508 -83.19052887]
[168.61689758 -69.47312927]
[168.24194336 -54.17221451]
[160.78910828 -40.80382538]
[147.97100830 -32.43992233]
[132.73313904 -31.00246429]
[127.09838867 -17.10104179]
[121.46363831 -3.19962096]
[115.82888031 10.70180130]
[110.19412231 24.60322189]
[104.55936432 38.50464630]
[98.92461395 52.40606689]
[93.28985596 66.30748749]
[98.23256683 71.94837189]
[109.51450348 62.06313705]
[119.39955139 73.34523773]
[108.11798859 83.23014832]
[113.06070709 88.87103271]
[127.58186340 85.11124420]
[142.10301208 81.35145569]
[151.44795227 68.31106567]
[167.47657776 67.63061523]
[177.89308167 79.83208466]
[174.70683289 95.55554962]
[160.36204529 102.73931885]
[145.86280823 95.87261200]
[131.34164429 99.63240051]
[116.82049561 103.39218903]
[114.64790344 110.57061768]
[129.19395447 114.23291016]
[143.74000549 117.89519501]
[158.28605652 121.55748749]
[173.20797729 123.08602142]
[177.54981995 137.44389343]
[165.97538757 146.98497009]
[152.70960999 139.98258972]
[138.57397461 134.96421814]
[124.43835449 129.94584656]
[110.30272675 124.92748260]
[108.13013458 132.10591125]
[118.12938690 143.28692627]
[128.12863159 154.46794128]
[138.12786865 165.64895630]
[148.12712097 176.82997131]
[158.12637329 188.01098633]
[168.12561035 199.19200134]
[178.12486267 210.37300110]
[188.12409973 221.55401611]
[203.18968201 229.32994080]
[199.88821411 245.95933533]
[182.99476624 247.39036560]
[176.94308472 231.55326843]
[166.94384766 220.37225342]
[156.94459534 209.19123840]
[146.94535828 198.01022339]
[136.94610596 186.82920837]
[126.94686127 175.64819336]
[116.94761658 164.46717834]
[106.94837189 153.28616333]
[96.94911957 142.10514832]
[82.63703156 137.61471558]
[68.04266357 141.07942200]
[53.44828796 144.54414368]
[38.85391235 148.00885010]
[24.25954056 151.47357178]
[9.66516590 154.93829346]
[9.92332458 165.08653259]
] def
/pairs [
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[33 62]
[34 61]
[35 60]
[36 59]
[38 57]
[39 56]
[40 55]
[41 54]
[43 53]
[44 52]
[45 51]
[46 50]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[105 115]
[106 114]
[107 113]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 25 1 gmark
12 cmark
25 cmark
13 24 2 gmark
14 23 2 gmark
14 cmark
23 cmark
22 cmark
16 21 1 gmark
21 cmark
33 62 3 gmark
35 60 2 gmark
59 cmark
39 56 2 gmark
56 cmark
41 cmark
43 53 1 gmark
43 cmark
53 cmark
45 51 1 gmark
46 cmark
68 cmark
69 152 2 gmark
71 150 3 gmark
72 149 3 gmark
74 100 3 gmark
75 99 3 gmark
77 97 3 gmark
78 96 1 gmark
78 cmark
96 cmark
80 94 2 gmark
81 93 2 gmark
107 113 3 gmark
128 146 3 gmark
130 144 1 gmark
131 143 1 gmark
131 cmark
143 cmark
132 142 2 gmark
132 cmark
142 cmark
134 140 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
