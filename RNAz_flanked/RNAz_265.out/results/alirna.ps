%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:04:12 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAUGCAUUGAAUAAUGUGUAUCUUGGAUUUUCUAUAGUUUUUACUAUAGUGGCCAUUAUUAUGUGGAUUAUGUAUUUUGUGAAUAGUAUCAGGCUGUUUAUUAGAACUGGAAGUUGGUGGAGUUUCAACCCAGAAACAAACAACCUUAUGUGUAUAGAUA\
) def
/coor [
[89.13433838 143.84051514]
[83.15832520 157.59867859]
[77.18230438 171.35684204]
[71.20629120 185.11502075]
[65.23027802 198.87318420]
[59.25425720 212.63136292]
[53.27824020 226.38952637]
[47.30222702 240.14768982]
[49.70141220 256.37039185]
[36.68537140 266.34609985]
[21.64388847 259.81265259]
[20.05035210 243.49111938]
[33.54405594 234.17167664]
[39.52007294 220.41351318]
[45.49608994 206.65533447]
[51.47210312 192.89717102]
[57.44812012 179.13900757]
[63.42413712 165.38082886]
[69.40015411 151.62266541]
[75.37616730 137.86448669]
[65.04915619 130.26403809]
[57.06861877 119.85101318]
[52.19720078 107.35007477]
[50.97383118 93.69104004]
[35.98025513 94.13002014]
[20.98668098 94.56900024]
[5.99310541 95.00798035]
[-9.00047016 95.44696045]
[-16.03833199 103.82340240]
[-26.32147789 106.85377502]
[-36.35610199 103.76192474]
[-42.87115479 95.81011200]
[-57.87044144 95.66376495]
[-72.86972809 95.51741791]
[-87.86901093 95.37107849]
[-102.86830139 95.22473145]
[-117.86758423 95.07838440]
[-132.86686707 94.93203735]
[-146.87454224 103.45948792]
[-161.13159180 95.35587311]
[-160.97158813 78.95750427]
[-146.55914307 71.13362122]
[-132.72052002 79.93275452]
[-117.72123718 80.07910156]
[-102.72195435 80.22544098]
[-87.72267151 80.37178802]
[-72.72338104 80.51813507]
[-57.72409439 80.66448212]
[-42.72481155 80.81082153]
[-26.68035126 70.07182312]
[-9.43944931 80.45338440]
[5.55412531 80.01440430]
[20.54770088 79.57542419]
[35.54127502 79.13644409]
[50.53485107 78.69746399]
[58.32860947 65.88117981]
[51.82035446 52.36664200]
[45.31209946 38.85211182]
[38.80384064 25.33757782]
[32.29558563 11.82304382]
[25.78733063 -1.69148910]
[12.82859325 -10.76792622]
[14.27750301 -25.59189034]
[7.76924706 -39.10642242]
[1.26099098 -52.62095642]
[-5.24726486 -66.13549042]
[-11.75552082 -79.65002441]
[-24.07542610 -91.29718018]
[-16.29393578 -106.35987091]
[0.33423364 -103.05225372]
[1.75901186 -86.15827942]
[8.26726818 -72.64374542]
[14.77552414 -59.12921143]
[21.28378105 -45.61468124]
[27.79203606 -32.10014725]
[40.28525925 -23.99036026]
[39.30186462 -8.19974518]
[45.81011963 5.31478786]
[52.31837463 18.82932091]
[58.82662964 32.34385300]
[65.33488464 45.85838699]
[71.84313965 59.37292099]
[89.32270050 52.61021042]
[107.73703003 52.90628815]
[124.39073181 59.97365189]
[136.93757629 72.55143738]
[143.71058655 88.62294006]
[158.65280151 87.30750275]
[173.59500122 85.99206543]
[188.53721619 84.67662811]
[203.47943115 83.36119843]
[218.42163086 82.04576111]
[233.36384583 80.73032379]
[248.30604553 79.41488647]
[263.24826050 78.09945679]
[278.19046021 76.78401947]
[293.13269043 75.46858215]
[308.07489014 74.15314484]
[323.01708984 72.83771515]
[326.68389893 61.30419922]
[334.02145386 51.72359085]
[344.14257812 45.21561432]
[355.83651733 42.53080368]
[367.71380615 43.96400833]
[378.37136841 49.32221985]
[386.55828857 57.95016098]
[391.32257080 68.81036377]
[406.31613159 68.37138367]
[421.30972290 67.93240356]
[436.30328369 67.49342346]
[442.19274902 64.31317139]
[447.93319702 64.58253479]
[451.88790894 67.34136200]
[466.88720703 67.48770905]
[481.88647461 67.63405609]
[496.88577271 67.78040314]
[511.88504028 67.92674255]
[521.91497803 55.92944717]
[537.31896973 53.23698807]
[550.82385254 61.12066269]
[556.05297852 75.85803986]
[550.53729248 90.49058533]
[536.88116455 98.10925293]
[521.53259277 95.11674500]
[511.73870850 82.92603302]
[496.73941040 82.77968597]
[481.74014282 82.63333893]
[466.74084473 82.48699951]
[451.74157715 82.34065247]
[436.74227905 82.48699951]
[421.74868774 82.92597961]
[406.75512695 83.36495209]
[391.76153564 83.80393219]
[383.95834351 100.09730530]
[368.92065430 110.26071930]
[350.72390747 111.43659973]
[334.35205078 103.21722412]
[324.33255005 87.77992249]
[309.39031982 89.09535980]
[294.44812012 90.41078949]
[279.50592041 91.72622681]
[264.56369019 93.04166412]
[249.62149048 94.35710144]
[234.67927551 95.67253113]
[219.73707581 96.98796844]
[204.79486084 98.30340576]
[189.85264587 99.61884308]
[174.91044617 100.93427277]
[159.96823120 102.24971008]
[145.02601624 103.56514740]
[144.04277039 110.01431274]
[142.14073181 116.25457001]
[139.35957336 122.15573120]
[135.75732422 127.59468842]
[131.40910339 132.45797729]
[126.40565491 136.64414978]
[120.85134125 140.06587219]
[114.86204529 142.65176392]
[108.56269836 144.34786987]
[102.08471680 145.11880493]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
[87 150]
[88 149]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[107 133]
[108 132]
[109 131]
[110 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 20 3 gmark
2 19 1 gmark
3 18 3 gmark
3 cmark
4 17 1 gmark
4 cmark
17 cmark
5 16 1 gmark
6 15 3 gmark
6 cmark
7 14 2 gmark
7 cmark
14 cmark
8 13 2 gmark
24 55 1 gmark
55 cmark
25 54 2 gmark
54 cmark
26 53 2 gmark
53 cmark
27 52 1 gmark
27 cmark
52 cmark
28 51 1 gmark
28 cmark
51 cmark
32 49 2 gmark
33 48 3 gmark
34 47 1 gmark
34 cmark
47 cmark
35 46 2 gmark
36 45 3 gmark
37 44 1 gmark
38 cmark
43 cmark
56 82 2 gmark
57 81 3 gmark
58 80 1 gmark
58 cmark
79 cmark
60 78 3 gmark
60 cmark
78 cmark
63 75 1 gmark
63 cmark
75 cmark
66 72 3 gmark
72 cmark
67 71 1 gmark
67 cmark
71 cmark
87 150 1 gmark
87 cmark
88 149 1 gmark
89 148 2 gmark
90 147 3 gmark
90 cmark
147 cmark
91 146 2 gmark
145 cmark
93 cmark
144 cmark
94 143 2 gmark
94 cmark
143 cmark
95 142 1 gmark
96 141 1 gmark
141 cmark
99 138 3 gmark
108 132 3 gmark
109 131 1 gmark
113 129 2 gmark
129 cmark
114 128 3 gmark
115 127 1 gmark
116 126 2 gmark
126 cmark
117 125 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
