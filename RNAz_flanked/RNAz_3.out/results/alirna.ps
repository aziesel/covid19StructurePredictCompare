%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:18:01 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCCCUGGUUUCAACGAGAAAACACACGUCCAACUCAGUUUGCCUGUCUUACAGGUUCGCGACGUGCUCGUACGUGGCUUUGGAGACUCCGUGGAGGAGGCCUUAUCAGAGGCACGUCAACAUCUUAAAGAUGGCACUUGUGGCUUAGUAGAAGUUGAAAA\
) def
/coor [
[97.57131195 223.53825378]
[86.19890594 233.96284485]
[70.99201202 236.56166077]
[56.80308533 230.50543213]
[48.15976334 217.72668457]
[47.82009888 202.30305481]
[55.89247894 189.15618896]
[69.80103302 182.48118591]
[71.55319214 167.58386230]
[73.30535889 152.68655396]
[75.05751801 137.78924561]
[76.80967712 122.89192963]
[67.11812592 111.44318390]
[52.13597107 110.71173096]
[37.15381622 109.98028564]
[22.17166138 109.24884033]
[7.18950558 108.51739502]
[16.17104530 120.53121185]
[14.20554066 135.40188599]
[2.41113710 144.66967773]
[-12.50249004 143.06228638]
[-22.05118370 131.49411011]
[-20.80282402 116.54615784]
[-9.46926212 106.72265625]
[-24.26341248 104.24613953]
[-39.05755997 101.76962280]
[-53.85171127 99.29310608]
[-68.64585876 96.81658936]
[-83.44001007 94.34007263]
[-98.25762177 92.00801086]
[-102.09304047 98.40934753]
[-107.39068604 103.63367462]
[-113.80668640 107.35737610]
[-120.92840576 109.35369873]
[-128.30097961 109.50659943]
[-135.45640564 107.81739044]
[-141.94317627 104.40398407]
[-147.35484314 99.49272156]
[-151.35543823 93.40338898]
[-153.70033264 86.52841187]
[-154.25117493 79.30758667]
[-168.57031250 74.83966827]
[-182.88945007 70.37174988]
[-197.20858765 65.90383148]
[-211.52772522 61.43590927]
[-225.84686279 56.96799088]
[-242.76800537 58.02201843]
[-248.46508789 42.05393600]
[-234.69815063 32.15909958]
[-221.37893677 42.64885330]
[-207.05979919 47.11677170]
[-192.74066162 51.58469391]
[-178.42152405 56.05261230]
[-164.10238647 60.52053070]
[-149.78324890 64.98844910]
[-130.82287598 51.85344696]
[-108.04339600 56.85570145]
[-96.07023621 77.16835785]
[-88.95834351 75.02175903]
[-80.96349335 79.54592133]
[-66.16934204 82.02243805]
[-51.37519455 84.49895477]
[-36.58104706 86.97547150]
[-21.78689575 89.45198822]
[-6.99274588 91.92850494]
[7.92095280 93.53524017]
[22.90310860 94.26668549]
[37.88526535 94.99813080]
[52.86742020 95.72957611]
[67.84957123 96.46102905]
[111.72496033 37.15761566]
[119.01274109 24.04700089]
[126.30052185 10.93638611]
[133.58830261 -2.17422867]
[140.87609863 -15.28484344]
[140.81822205 -31.10594368]
[153.76451111 -38.47091675]
[161.05229187 -51.58153152]
[168.34007263 -64.69214630]
[175.62785339 -77.80275726]
[182.91564941 -90.91337585]
[189.94622803 -104.16368866]
[196.71693420 -117.54866028]
[203.48764038 -130.93363953]
[202.02397156 -149.26608276]
[217.02914429 -158.32458496]
[223.53739929 -171.83912659]
[230.04566956 -185.35365295]
[236.55392456 -198.86819458]
[232.63374329 -214.42491150]
[242.46653748 -227.10150146]
[258.50942993 -227.17353821]
[268.45568848 -214.58578491]
[264.67538452 -198.99447632]
[250.06845093 -192.35993958]
[243.56019592 -178.84539795]
[237.05194092 -165.33087158]
[230.54368591 -151.81632996]
[234.24281311 -140.26603699]
[228.89016724 -128.93722534]
[216.87261963 -124.16292572]
[210.10191345 -110.77795410]
[203.33120728 -97.39298248]
[203.96130371 -92.61241913]
[201.55949402 -87.39163208]
[196.02626038 -83.62558746]
[188.73847961 -70.51497650]
[181.45068359 -57.40436172]
[174.16290283 -44.29374695]
[166.87512207 -31.18313217]
[167.45426941 -16.29979134]
[153.98670959 -7.99705982]
[146.69892883 5.11355495]
[139.41113281 18.22416878]
[132.12335205 31.33478355]
[124.83557129 44.44540024]
[127.95723724 51.26487350]
[142.89059448 52.67715836]
[134.20056152 64.90381622]
[137.32221985 71.72329712]
[152.00848389 74.77513123]
[166.69474792 77.82697296]
[181.38101196 80.87881470]
[196.06726074 83.93065643]
[212.80526733 81.23334503]
[220.03071594 96.57053375]
[207.29310608 107.75936127]
[193.01542664 98.61691284]
[178.32916260 95.56507874]
[163.64289856 92.51323700]
[148.95664978 89.46139526]
[134.27038574 86.40955353]
[130.24920654 92.74044800]
[122.20686340 105.40222931]
[118.18569183 111.73311615]
[127.19082642 123.72926331]
[136.19595337 135.72541809]
[145.20109558 147.72155762]
[159.67376709 154.11312866]
[161.12663269 168.93670654]
[170.13177490 180.93286133]
[185.81153870 182.91281128]
[195.43263245 195.45117188]
[193.28700256 211.10913086]
[180.64762878 220.59712219]
[165.01322937 218.28607178]
[155.65940857 205.54708862]
[158.13562012 189.93798828]
[149.13049316 177.94183350]
[135.30191040 172.40832520]
[133.20494080 156.72669983]
[124.19981384 144.73054504]
[115.19467926 132.73440552]
[106.18954468 120.73825073]
[91.70699310 124.64408875]
[89.95482635 139.54139709]
[88.20266724 154.43872070]
[86.45050812 169.33602905]
[84.69834900 184.23333740]
[96.67859650 193.95327759]
] def
/pairs [
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[24 65]
[25 64]
[26 63]
[27 62]
[28 61]
[29 60]
[30 58]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[46 50]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[82 103]
[83 102]
[84 101]
[86 98]
[87 97]
[88 96]
[89 95]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
[135 154]
[136 153]
[137 152]
[138 151]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 158 1 gmark
12 155 1 gmark
15 68 1 gmark
46 50 1 gmark
71 cmark
80 cmark
107 cmark
83 cmark
102 cmark
101 cmark
89 cmark
95 cmark
122 130 1 gmark
123 129 1 gmark
136 153 1 gmark
152 cmark

% End Annotations
% show it
showpage
end
%%EOF
