%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:18:16 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGGAAGAAGGUGAUUGUGAAGAAGAAGAAUUUGAACCAACAACUCAAUAUGAGUAUGGUACUGAAGAUGAUUACCAAGGUAAACCUUUGGAAUUUGGUGCCACUUCUGAAACUCUUCAACCUGAAGAAGAGCAAGAAGAAGAUUGGUUAGAUGAUGAUAG\
) def
/coor [
[59.22979736 369.09289551]
[52.33668900 382.61508179]
[41.02167130 392.73114014]
[26.81501198 398.07296753]
[11.63803959 397.91815186]
[-2.45668149 392.28756714]
[-13.56295776 381.94277954]
[-20.17875481 368.28277588]
[-21.40934372 353.15496826]
[-17.08829308 338.60528564]
[-7.79999256 326.60147095]
[5.19939232 318.76690674]
[20.15180206 316.16116333]
[23.06021309 301.44583130]
[25.96862221 286.73049927]
[28.87703323 272.01513672]
[31.78544426 257.29980469]
[26.66272163 243.31385803]
[36.92895889 231.27578735]
[25.86015701 241.39910889]
[11.38583946 245.33537292]
[-3.28537440 242.21200562]
[-14.90122128 232.72137451]
[-20.88673782 218.96733093]
[-19.91507721 203.99884033]
[-12.20163155 191.13404846]
[0.54370683 183.22479248]
[15.49559498 182.02436829]
[29.33955002 187.79887390]
[39.00668716 199.26823425]
[42.35404587 213.88905334]
[48.33006287 200.13087463]
[46.30388260 185.37474060]
[58.89862442 175.79960632]
[64.87464142 162.04144287]
[70.85065460 148.28326416]
[76.82667542 134.52510071]
[82.80268860 120.76692963]
[78.60405731 116.40812683]
[75.48337555 111.22265625]
[73.59786987 105.47177887]
[73.04253387 99.44522858]
[58.72339249 94.97731018]
[44.40425491 90.50939178]
[30.08511925 86.04147339]
[15.76598167 81.57355499]
[-1.15516973 82.62757874]
[-6.85224581 66.65950012]
[6.91469049 56.76465988]
[20.23390198 67.25441742]
[34.55303955 71.72233582]
[48.87217712 76.19025421]
[63.19131470 80.65817261]
[77.51045227 85.12609100]
[88.73117828 72.67232513]
[106.52207184 68.51171875]
[105.64448547 53.53741455]
[104.76690674 38.56311035]
[103.88932037 23.58880234]
[103.01174164 8.61449623]
[102.13415527 -6.35980988]
[101.25656891 -21.33411598]
[100.37899017 -36.30842209]
[88.43411255 -27.23538780]
[73.84517670 -30.72293091]
[67.29511261 -44.21725464]
[73.58029938 -57.83696365]
[88.09831238 -61.60885620]
[100.21836853 -52.77053452]
[100.80361176 -67.75910950]
[101.38885498 -82.74768829]
[101.97409821 -97.73626709]
[99.17115784 -106.48436737]
[102.71981049 -113.01076508]
[103.59739685 -127.98507690]
[104.47498322 -142.95938110]
[105.35256195 -157.93368530]
[106.23014832 -172.90798950]
[107.10773468 -187.88229370]
[97.56408691 -200.77796936]
[101.83501434 -216.24208069]
[116.64424133 -222.41188049]
[130.63137817 -214.55444336]
[133.06671143 -198.69731140]
[122.08203888 -187.00471497]
[121.20445251 -172.03041077]
[120.32687378 -157.05610657]
[119.44928741 -142.08180237]
[118.57170105 -127.10749054]
[117.69412231 -112.13318634]
[116.96267700 -97.15103149]
[116.37743378 -82.16245270]
[115.79219055 -67.17387390]
[115.20694733 -52.18529129]
[115.35329437 -37.18600464]
[116.23088074 -22.21170044]
[117.10845947 -7.23739338]
[117.98604584 7.73691273]
[118.86362457 22.71121979]
[119.74121094 37.68552399]
[120.61879730 52.65983200]
[121.49637604 67.63414001]
[132.15460205 78.18887329]
[147.13674927 78.92031860]
[162.11891174 79.65176392]
[177.10105896 80.38321686]
[192.08322144 81.11466217]
[200.87556458 67.13986969]
[215.42549133 59.53631973]
[231.73130798 60.28873825]
[245.36174011 69.09818268]
[252.66015625 83.48897552]
[267.65374756 83.92795563]
[282.64730835 84.36693573]
[297.64089966 84.80591583]
[312.63446045 85.24489594]
[327.62805176 85.68387604]
[337.00527954 73.32074738]
[351.86819458 68.86280823]
[366.50170898 74.02423096]
[375.27890015 86.82034302]
[374.82479858 102.33077240]
[365.31399536 114.59144592]
[350.40356445 118.88788605]
[335.82693481 113.56801605]
[327.18905640 100.67745209]
[312.19549561 100.23847198]
[297.20190430 99.79949188]
[282.20834351 99.36051178]
[267.21475220 98.92153168]
[252.22117615 98.48255157]
[245.81419373 110.57403564]
[234.76306152 118.75598145]
[221.19795227 121.38012695]
[207.76449585 117.87641907]
[197.10783386 108.87566376]
[191.35177612 96.09681702]
[176.36961365 95.36537170]
[161.38746643 94.63391876]
[146.40530396 93.90247345]
[131.42314148 93.17102814]
[127.73673248 112.50534821]
[113.99953461 125.04750824]
[96.56085968 126.74294281]
[90.58483887 140.50111389]
[84.60882568 154.25929260]
[78.63281250 168.01745605]
[72.65679169 181.77561951]
[74.25553131 197.51585388]
[62.08823013 206.10690308]
[56.11221313 219.86506653]
[51.64429474 234.18420410]
[56.55899048 249.22270203]
[46.50078201 260.20822144]
[43.59236908 274.92355347]
[40.68395996 289.63888550]
[37.77555084 304.35424805]
[34.86713791 319.06958008]
[47.70397949 327.16772461]
[56.74544907 339.35855103]
] def
/pairs [
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[19 152]
[31 151]
[32 150]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[42 54]
[43 53]
[44 52]
[45 51]
[46 50]
[56 102]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[69 94]
[70 93]
[71 92]
[72 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[103 141]
[104 140]
[105 139]
[106 138]
[107 137]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
14 cmark
157 cmark
156 cmark
35 147 1 gmark
35 cmark
36 146 1 gmark
37 145 1 gmark
42 54 1 gmark
43 53 1 gmark
45 51 1 gmark
56 102 1 gmark
62 96 1 gmark
74 cmark
77 87 1 gmark
104 140 1 gmark
105 139 1 gmark
137 cmark
112 131 1 gmark
113 130 1 gmark
114 129 1 gmark
115 128 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
