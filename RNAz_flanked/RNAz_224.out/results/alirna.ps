%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:43:56 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUUUACAUAGAAGAUAUUUGACUCCUGGUGAUUCUUCUUCAGGUUGGACAGCUGGUGCUGCAGCUUAUUAUGUGGGUUAUCUUCAACCAAGGACUUUUCUACUAAAAUAUAAUGAAAAUGGAACCAUUACAGAUGCUGUAGACUGUGCACUUGACCCUCU\
) def
/coor [
[-84.45763397 454.48220825]
[-96.67961121 463.17837524]
[-111.19398499 466.96429443]
[-126.10641479 465.34582520]
[-139.47061157 458.53421021]
[-149.54237366 447.41845703]
[-155.00718689 433.44937134]
[-155.15179443 418.45004272]
[-149.95680237 404.37725830]
[-161.86451721 413.49899292]
[-173.77224731 422.62075806]
[-185.67996216 431.74249268]
[-197.58767700 440.86422729]
[-204.40997314 459.79785156]
[-223.63308716 461.59295654]
[-235.17584229 471.17233276]
[-246.71861267 480.75173950]
[-258.26135254 490.33111572]
[-257.12850952 505.80679321]
[-265.33697510 518.97497559]
[-279.73043823 524.77221680]
[-294.77432251 520.96936035]
[-304.68392944 509.02871704]
[-305.64880371 493.54165649]
[-297.29797363 480.46331787]
[-282.84249878 474.82254028]
[-267.84075928 478.78836060]
[-256.29800415 469.20898438]
[-244.75523376 459.62957764]
[-233.21247864 450.05020142]
[-233.17697144 439.77029419]
[-227.34423828 431.03918457]
[-217.45504761 426.90032959]
[-206.70942688 428.95651245]
[-194.80171204 419.83477783]
[-182.89398193 410.71301270]
[-170.98626709 401.59127808]
[-159.07855225 392.46954346]
[-148.62829590 381.70886230]
[-139.85894775 369.53927612]
[-131.08959961 357.36972046]
[-122.32024384 345.20013428]
[-113.55088806 333.03057861]
[-104.78153229 320.86099243]
[-103.41553497 313.55889893]
[-95.72044373 308.54177856]
[-94.26758575 293.71820068]
[-79.79490662 287.32662964]
[-70.78977203 275.33050537]
[-61.78463745 263.33435059]
[-52.77950287 251.33819580]
[-55.55803680 244.65971375]
[-55.82287598 237.36270142]
[-53.49258041 230.37060547]
[-48.81715012 224.58502197]
[-42.35209274 220.76956177]
[-34.89268112 219.44917297]
[-27.37622833 220.83842468]
[-17.24537277 209.77651978]
[-7.11451674 198.71461487]
[3.01633859 187.65270996]
[13.14719391 176.59080505]
[23.27804947 165.52890015]
[33.40890503 154.46699524]
[34.09194565 149.69371033]
[37.81324768 145.31452942]
[44.15736008 143.18098450]
[54.71209335 132.52276611]
[65.26683044 121.86455536]
[67.75148010 114.86360168]
[76.13301086 111.10386658]
[86.89369965 100.65361786]
[93.00366211 86.95440674]
[93.58890533 71.96582794]
[94.17414093 56.97725296]
[94.75938416 41.98867416]
[95.34462738 27.00009537]
[95.92987061 12.01151657]
[85.01641846 0.58032250]
[85.46604156 -15.21756935]
[97.01197815 -26.00955009]
[112.80423737 -25.39292908]
[123.47354126 -13.73353577]
[122.68998718 2.05131793]
[110.91844940 12.59675789]
[110.33320618 27.58533669]
[109.74796295 42.57391739]
[109.16271973 57.56249619]
[108.57748413 72.55107117]
[107.99224091 87.53964996]
[122.26710510 92.14706421]
[130.55497742 79.64460754]
[138.84283447 67.14215851]
[139.31491089 50.74980927]
[153.87365723 43.20164871]
[167.54229736 52.26257706]
[166.25970459 68.61148834]
[151.34529114 75.43002319]
[143.05741882 87.93247986]
[134.76956177 100.43492889]
[138.47723389 106.95436859]
[151.51611328 99.53902435]
[164.55500793 92.12367249]
[174.66427612 81.04203796]
[188.32746887 87.23213196]
[186.66247559 102.13944244]
[171.97035217 105.16256714]
[158.93147278 112.57791138]
[145.89257812 119.99326324]
[149.60025024 126.51270294]
[164.58241272 125.78125763]
[179.56455994 125.04981232]
[194.54672241 124.31835938]
[209.52886963 123.58691406]
[216.47912598 109.89057922]
[229.35513306 101.51777649]
[244.69332886 100.72074127]
[258.36782837 107.71388245]
[266.70022583 120.61608124]
[267.44915771 135.95669556]
[260.41320801 149.60919189]
[247.48493958 157.90112305]
[232.14205933 158.60197449]
[218.51167297 151.52325439]
[210.26031494 138.56907654]
[195.27816772 139.30052185]
[180.29600525 140.03196716]
[165.31385803 140.76341248]
[150.33169556 141.49485779]
[97.34394836 111.41430664]
[86.58325958 121.86455536]
[75.92504120 132.41928101]
[65.37030792 143.07749939]
[54.81557465 153.73571777]
[44.47080994 164.59785461]
[34.33995438 175.65975952]
[24.20910072 186.72166443]
[14.07824421 197.78356934]
[3.94738913 208.84547424]
[-6.18346643 219.90737915]
[-16.31432152 230.96928406]
[-19.25953293 253.96475220]
[-40.78335571 260.34332275]
[-49.78848648 272.33947754]
[-58.79362106 284.33563232]
[-67.79875183 296.33178711]
[-69.89572906 312.01339722]
[-83.72429657 317.54690552]
[-92.61196136 329.63034058]
[-101.38131714 341.79992676]
[-110.15067291 353.96948242]
[-118.92002106 366.13906860]
[-127.68937683 378.30862427]
[-136.45872498 390.47821045]
[-122.54504395 384.87380981]
[-107.54793549 384.57901001]
[-93.42475891 389.63229370]
[-82.01877594 399.37414551]
[-74.81863403 412.53311157]
[-72.76406097 427.39172363]
] def
/pairs [
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[15 30]
[16 29]
[17 28]
[18 27]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[46 148]
[48 146]
[49 145]
[50 144]
[51 143]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[67 134]
[68 133]
[69 132]
[71 131]
[72 130]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[91 100]
[92 99]
[93 98]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 38 1 gmark
10 cmark
37 cmark
11 cmark
36 cmark
12 cmark
35 cmark
13 cmark
34 cmark
15 cmark
17 cmark
28 cmark
18 27 1 gmark
39 154 1 gmark
40 cmark
153 cmark
41 cmark
152 cmark
42 cmark
151 cmark
44 cmark
149 cmark
50 cmark
51 143 1 gmark
59 140 1 gmark
74 89 1 gmark
74 cmark
89 cmark
77 cmark
86 cmark
91 100 1 gmark
92 cmark
99 cmark
111 cmark
128 cmark
114 125 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
