%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:24:29 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CAACAGCAGACUACCCUUAAGGGUGUAGAAGCUGUUAUGUACAUGGGCACACUUUCUUAUGAACAACUUAAGAAAGGUGUUCAGAUACCUUGUACGUGUGGUAAACAAGCUACACAAUAUCUAGUACAACAAGAGUCACCUUUUGUUAUGAUGUCAGCAC\
) def
/coor [
[90.45606995 211.50109863]
[88.81505585 220.64939880]
[85.17464447 229.18826294]
[79.72402954 236.68736267]
[72.74352264 242.77003479]
[64.59006500 247.13227844]
[55.67904663 249.55781555]
[46.46310043 249.92892456]
[37.40913391 248.23210144]
[28.97465515 244.55847168]
[19.28310585 256.00723267]
[16.10411453 264.62579346]
[9.28904152 267.58242798]
[-0.62404794 278.83987427]
[-10.53713799 290.09735107]
[-20.45022774 301.35482788]
[-23.14999580 317.53021240]
[-38.60095596 323.02566528]
[-50.90848541 312.18792725]
[-47.41165161 296.16592407]
[-31.70769882 291.44174194]
[-21.79460907 280.18426514]
[-11.88151932 268.92678833]
[-1.96842921 257.66931152]
[7.83435678 246.31567383]
[17.52590561 234.86692810]
[8.72879219 215.58366394]
[10.76471615 194.41551208]
[23.15798950 177.04728699]
[42.64187622 168.17887878]
[64.01941681 170.25347900]
[71.81317139 157.43719482]
[79.60693359 144.62089539]
[87.40068817 131.80461121]
[74.49629974 114.56717682]
[75.76454163 96.19575500]
[86.71441650 85.46266937]
[79.17221069 72.49674225]
[71.62999725 59.53082275]
[64.08779144 46.56490326]
[56.54558563 33.59897995]
[49.00337982 20.63306046]
[41.46117020 7.66713953]
[27.83417320 -0.37123561]
[28.12280655 -15.26304436]
[20.58059883 -28.22896576]
[12.17114925 -40.64995956]
[2.93366456 -52.46812057]
[-6.30382013 -64.28627777]
[-15.54130459 -76.10443878]
[-23.33282280 -80.97043610]
[-24.84103775 -88.24450684]
[-33.84617233 -100.24066162]
[-42.85130310 -112.23680878]
[-51.85643768 -124.23295593]
[-60.86156845 -136.22911072]
[-69.86669922 -148.22525024]
[-78.87183380 -160.22140503]
[-87.87696838 -172.21754456]
[-103.25572968 -170.99397278]
[-116.84388733 -178.29914856]
[-124.30549622 -191.80203247]
[-123.25958252 -207.19390869]
[-114.03990936 -219.56326294]
[-99.58842468 -224.96310425]
[-84.51655579 -221.67034912]
[-73.63367462 -210.73570251]
[-70.41246796 -195.64837646]
[-75.88082123 -181.22268677]
[-66.87568665 -169.22653198]
[-57.87055588 -157.23039246]
[-48.86542130 -145.23423767]
[-39.86028671 -133.23808289]
[-30.85515594 -121.24194336]
[-21.85002136 -109.24578857]
[-12.84488869 -97.24964142]
[-3.72314596 -85.34191895]
[5.51433849 -73.52376556]
[14.75182343 -61.70560455]
[23.98930740 -49.88744736]
[26.10200691 -64.73791504]
[37.15571213 -74.87771606]
[52.13292694 -75.70418549]
[64.23519135 -66.84217834]
[67.96903992 -52.31432724]
[61.63960266 -38.71512985]
[48.11994171 -32.21752548]
[33.54652023 -35.77117157]
[41.08872604 -22.80525208]
[54.17625809 -15.69428539]
[54.42709351 0.12493221]
[61.96929932 13.09085369]
[69.51150513 26.05677414]
[77.05371094 39.02269745]
[84.59592438 51.98861694]
[92.13813019 64.95453644]
[99.68033600 77.92045593]
[114.30425262 81.25827026]
[126.72525024 72.84882355]
[139.14624023 64.43936920]
[151.56724548 56.02992249]
[163.98823547 47.62047195]
[166.73043823 32.05590057]
[179.72303772 23.05767441]
[195.25773621 25.96427917]
[204.11810303 39.05128098]
[201.04740906 54.55438995]
[187.86746216 63.27589035]
[172.39768982 60.04146957]
[159.97669983 68.45092010]
[147.55569458 76.86036682]
[135.13470459 85.26982117]
[122.71370697 93.67926788]
[122.78688049 101.17890930]
[135.84996033 108.55154419]
[122.93321991 116.17819977]
[123.00639343 123.67784119]
[135.58911133 131.84333801]
[148.17182922 140.00883484]
[160.75453186 148.17431641]
[173.33724976 156.33981323]
[181.93620300 151.60636902]
[191.61463928 150.36628723]
[201.01651001 152.75033569]
[208.84028625 158.38446045]
[214.01904297 166.44781494]
[215.86599731 175.79208374]
[214.16523743 185.10498047]
[226.07296753 194.22671509]
[237.98068237 203.34846497]
[249.88839722 212.47019958]
[261.79611206 221.59194946]
[273.70385742 230.71368408]
[285.61157227 239.83543396]
[297.51928711 248.95716858]
[313.84121704 250.54679871]
[320.37823486 265.58673096]
[310.40567017 278.60516357]
[294.18237305 276.20983887]
[288.39755249 260.86489868]
[276.48980713 251.74314880]
[264.58209229 242.62141418]
[252.67437744 233.49966431]
[240.76666260 224.37792969]
[228.85893250 215.25617981]
[216.95121765 206.13442993]
[205.04350281 197.01269531]
[185.13710022 201.45970154]
[168.12092590 189.69332886]
[165.17175293 168.92253113]
[152.58905029 160.75703430]
[140.00633240 152.59153748]
[127.42361450 144.42605591]
[114.84090424 136.26055908]
[100.21697998 139.59837341]
[92.42322540 152.41465759]
[84.62946320 165.23095703]
[76.83570862 178.04724121]
[83.02727509 185.04222107]
[87.49231720 193.23416138]
] def
/pairs [
[10 26]
[11 25]
[13 24]
[14 23]
[15 22]
[16 21]
[31 158]
[32 157]
[33 156]
[34 155]
[37 97]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[45 89]
[46 88]
[47 80]
[48 79]
[49 78]
[50 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[128 147]
[129 146]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 cmark
16 cmark
33 156 1 gmark
156 cmark
38 96 1 gmark
95 cmark
94 cmark
42 cmark
48 cmark
75 cmark
54 74 1 gmark
132 cmark

% End Annotations
% show it
showpage
end
%%EOF
