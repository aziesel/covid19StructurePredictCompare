%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:47:53 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGGUUUUUAUGAGAUUCAAAUACCUACAAAUUUUACUAUAGGUGAUAAAG_AGGAGUUCAUUCAAACUAGAUCUCCUAAAGUUACUAUUGAUUGUGCUGCAUUUGUCUGUGGUGAUUAUGCAGCAUGCAAAAAACAGUUGGUUGAAUAUGGCACUUUCUG\
) def
/coor [
[1.01571071 343.41629028]
[7.14400864 357.16900635]
[10.27864838 371.89544678]
[10.28259754 386.95178223]
[7.15568256 401.67987061]
[1.03459942 415.43579102]
[-7.81306505 427.61828613]
[-19.00052834 437.69470215]
[-32.03872299 445.22457886]
[-46.35767365 449.87875366]
[-61.33142090 451.45373535]
[-76.30537415 449.88070679]
[-90.62493896 445.22842407]
[-103.66411591 437.70025635]
[-114.85290527 427.62530518]
[-123.70216370 415.44396973]
[-129.82505798 401.68884277]
[-132.95390320 386.96118164]
[-132.95191956 371.90481567]
[-129.81921387 357.17797852]
[-123.69271851 343.42443848]
[-114.84026337 331.24545288]
[-103.64883423 321.17343140]
[-90.60768127 313.64868164]
[-76.28689575 309.00015259]
[-61.31253433 307.43106079]
[-46.33920288 309.00997925]
[-32.02146912 313.66790771]
[-24.52147102 300.67752075]
[-17.02147102 287.68713379]
[-9.52147102 274.69674683]
[-13.61253738 260.42092896]
[-6.19152355 247.14001465]
[8.80999851 242.94570923]
[16.30999947 229.95533752]
[23.80999947 216.96495056]
[31.30999947 203.97457886]
[38.80999756 190.98419189]
[46.30999756 177.99380493]
[53.80999756 165.00343323]
[61.30999756 152.01304626]
[54.02914047 145.70506287]
[47.76348495 138.38775635]
[42.65140152 130.22270203]
[38.80578232 121.39021301]
[36.31155777 112.08535767]
[35.22380829 102.51361084]
[35.56655121 92.88635254]
[37.33221817 83.41619110]
[40.48181915 74.31226349]
[44.94580078 65.77561188]
[50.62557983 57.99476242]
[57.39572525 51.14154053]
[48.91162109 38.77141571]
[40.42751694 26.40129089]
[31.94341469 14.03116512]
[23.45931244 1.66103995]
[8.78632450 5.46619892]
[-6.30291891 4.02033186]
[-19.98631859 -2.50196624]
[-30.61153793 -13.31309605]
[-36.89553070 -27.10756111]
[-38.07947159 -42.21961212]
[-34.02039719 -56.82439423]
[-25.20845604 -69.15830994]
[-12.70773697 -77.73198700]
[1.97223806 -81.51009369]
[17.05879211 -80.03642273]
[30.73014832 -73.48892212]
[41.33542633 -62.65822983]
[47.59398651 -48.85220718]
[48.75007629 -33.73799896]
[44.66409302 -19.14072037]
[35.82943726 -6.82306337]
[44.31354141 5.54706192]
[52.79764175 17.91718674]
[61.28174591 30.28731155]
[69.76584625 42.65743637]
[92.04967499 35.66442871]
[115.36547852 37.02241898]
[136.68678284 46.55513763]
[146.54960632 35.25359726]
[156.41242981 23.95206070]
[166.27523804 12.65052223]
[176.13806152 1.34898376]
[186.00088501 -9.95255470]
[195.86370850 -21.25409317]
[205.72653198 -32.55562973]
[215.58934021 -43.85717010]
[218.83369446 -59.34215546]
[233.03170776 -63.84389877]
[242.89453125 -75.14543915]
[252.75735474 -86.44697571]
[246.70346069 -100.45815277]
[247.33689880 -115.70812225]
[254.53189087 -129.16899109]
[266.85986328 -138.16807556]
[281.87310791 -140.91862488]
[296.59069824 -136.87451172]
[308.09048462 -126.83868408]
[314.08914185 -112.80377197]
[313.39566040 -97.55641937]
[306.14773560 -84.12399292]
[293.78439331 -75.17351532]
[278.76043701 -72.48210907]
[264.05889893 -76.58415222]
[254.19606018 -65.28261566]
[244.33325195 -53.98107910]
[241.79435730 -39.30445480]
[226.89088440 -33.99435043]
[217.02806091 -22.69281197]
[207.16523743 -11.39127254]
[197.30242920 -0.08973414]
[187.43960571 11.21180439]
[177.57678223 22.51334190]
[167.71395874 33.81488037]
[157.85113525 45.11642075]
[147.98832703 56.41795731]
[159.18287659 73.54889679]
[164.47941589 93.31588745]
[163.35012817 113.74899292]
[177.54234314 118.60500336]
[191.73457336 123.46101379]
[205.92678833 128.31701660]
[220.11901855 133.17303467]
[232.14791870 123.51338196]
[247.49208069 121.91320801]
[261.25521851 128.88311768]
[269.04556274 142.19905090]
[268.37725830 157.61193848]
[259.46353149 170.20356750]
[245.14875793 175.95602417]
[230.00070190 173.03369141]
[218.85305786 162.36909485]
[215.26300049 147.36524963]
[201.07078552 142.50924683]
[186.87855530 137.65322876]
[172.68634033 132.79722595]
[158.49411011 127.94121552]
[152.91206360 137.45112610]
[145.79891968 145.87734985]
[137.36054993 152.97605896]
[127.84109497 158.54183960]
[117.51602936 162.41363525]
[106.68411255 164.47941589]
[95.65878296 164.67941284]
[84.75907135 163.00784302]
[74.30037689 159.51304626]
[66.80037689 172.50343323]
[59.30038071 185.49380493]
[51.80038071 198.48419189]
[44.30038071 211.47457886]
[36.80038071 224.46495056]
[29.30038071 237.45533752]
[21.80038071 250.44570923]
[25.66877747 265.53454590]
[17.87765694 278.60180664]
[3.46890998 282.19674683]
[-4.03108978 295.18713379]
[-11.53108978 308.17752075]
[-19.03108978 321.16790771]
] def
/pairs [
[28 161]
[29 160]
[30 159]
[31 158]
[34 155]
[35 154]
[36 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[91 108]
[92 107]
[93 106]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
29 160 2 gmark
30 159 1 gmark
30 cmark
159 cmark
34 155 3 gmark
35 154 1 gmark
36 153 3 gmark
39 150 1 gmark
41 148 3 gmark
53 78 3 gmark
55 76 1 gmark
56 75 2 gmark
57 74 2 gmark
81 118 1 gmark
81 cmark
82 cmark
83 116 1 gmark
84 115 2 gmark
115 cmark
85 114 1 gmark
86 113 1 gmark
87 112 2 gmark
88 111 1 gmark
88 cmark
91 108 1 gmark
108 cmark
93 106 1 gmark
106 cmark
121 139 1 gmark
121 cmark
122 138 2 gmark
123 137 3 gmark
123 cmark
137 cmark
124 cmark
136 cmark
125 135 3 gmark
125 cmark
135 cmark

% End Annotations
% show it
showpage
end
%%EOF
