%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:34:05 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AACAAUGAUUGAAUUUAUGUUAUGGUGUAAGGAUGGUAAGGUUCAAACCUUUUACCCUAAACUGCAGGCUACUAAAGAUUGGAAACCUGGUCAUGCUAUGCCAUCUCUGUAUAAAGUUCAAAAUGUAAACCUAGAACCAUGUUUGCUACCUAAUUACAAG\
) def
/coor [
[87.45798492 345.03646851]
[75.10510254 335.64572144]
[70.66339874 320.77792358]
[75.84078979 306.15008545]
[88.64647675 297.38687134]
[88.93914795 282.38970947]
[89.23182678 267.39257812]
[89.52450562 252.39541626]
[89.81717682 237.39828491]
[90.10985565 222.40113831]
[90.40253448 207.40399170]
[69.79366302 203.51475525]
[50.32743073 195.70979309]
[32.74020386 184.28433228]
[17.69726944 169.67057800]
[5.76766872 152.42134094]
[-2.59732771 133.18910217]
[-7.08129025 112.70140839]
[-7.51460028 91.73324585]
[-22.35425568 89.54586029]
[-37.19390869 87.35847473]
[-46.19191742 89.20822906]
[-52.30064774 84.98091125]
[-67.09479523 82.50439453]
[-81.88894653 80.02787781]
[-96.77717590 85.38057709]
[-108.05234528 75.64817047]
[-122.84649658 73.17165375]
[-139.91085815 80.02941132]
[-153.02764893 68.40351868]
[-167.86729431 66.21613312]
[-182.70695496 64.02874756]
[-197.54660034 61.84136200]
[-212.38626099 59.65397644]
[-227.22592163 57.46659088]
[-242.06556702 55.27920532]
[-251.06358337 57.12895966]
[-257.17230225 52.90164185]
[-271.96646118 50.42512512]
[-286.76062012 47.94860840]
[-301.55474854 45.47209167]
[-316.34890747 42.99557877]
[-331.51202393 49.24155045]
[-344.33584595 39.01992035]
[-341.62832642 22.84582329]
[-326.17474365 17.35778427]
[-313.87240601 28.20142746]
[-299.07824707 30.67794418]
[-284.28408813 33.15446091]
[-269.48992920 35.63097382]
[-254.69580078 38.10749054]
[-239.87818909 40.43955231]
[-225.03852844 42.62693787]
[-210.19888306 44.81432343]
[-195.35922241 47.00170517]
[-180.51956177 49.18909073]
[-165.67991638 51.37647629]
[-150.84025574 53.56386185]
[-140.91606140 46.59225082]
[-128.50714111 48.32752228]
[-120.36997986 58.37750244]
[-105.57582855 60.85401917]
[-91.74578094 55.32418823]
[-79.41242981 65.23372650]
[-64.61827850 67.71024323]
[-49.82413101 70.18675995]
[-35.00652313 72.51882172]
[-20.16687012 74.70620728]
[-5.32721567 76.89359283]
[-1.76043570 63.76540375]
[3.43868446 51.16847229]
[10.19300747 39.30524445]
[18.40035248 28.36718178]
[27.93503761 18.53167343]
[38.64980316 9.95915222]
[50.37807846 2.79048443]
[62.93657684 -2.85534501]
[76.12816620 -6.88320160]
[89.74492645 -9.22340012]
[103.57148743 -9.83290195]
[117.38838196 -8.69609261]
[119.43087769 -23.55638123]
[115.59761810 -40.07129669]
[130.40597534 -48.32653809]
[142.43795776 -36.38217926]
[134.29116821 -21.51388168]
[132.24867249 -6.65359306]
[146.28187561 -1.35557771]
[154.56974792 -13.85802841]
[162.85760498 -26.36047935]
[171.14547729 -38.86293030]
[165.59556580 -53.35354996]
[169.65545654 -68.33009338]
[181.76405334 -78.03377533]
[197.26535034 -78.73332977]
[210.19879150 -70.15976715]
[215.59118652 -55.60979462]
[211.36906433 -40.67817307]
[199.15589905 -31.10641861]
[183.64793396 -30.57506180]
[175.36006165 -18.07261276]
[167.07218933 -5.57016182]
[158.78433228 6.93228865]
[166.75402832 12.68971634]
[174.16603088 19.12579727]
[180.96289062 26.18700790]
[187.09225464 33.81499863]
[192.50732422 41.94707870]
[197.16706848 50.51672363]
[201.03669739 59.45412445]
[204.08781433 68.68675232]
[206.29862976 78.13994598]
[207.65415955 87.73752594]
[208.14631653 97.40239716]
[207.77392578 107.05717468]
[206.54269409 116.62479401]
[221.16661072 119.96260834]
[235.79052734 123.30042267]
[250.41444397 126.63823700]
[265.03836060 129.97605896]
[279.66229248 133.31387329]
[290.05001831 122.00057983]
[304.70751953 117.41217041]
[319.69195557 120.78289032]
[330.97262573 131.20603943]
[335.51507568 145.87783813]
[332.09741211 160.85165405]
[321.63894653 172.09959412]
[306.95297241 176.59603882]
[291.98995972 173.13143921]
[280.77484131 162.63777161]
[276.32446289 147.93778992]
[261.70056152 144.59997559]
[247.07662964 141.26216125]
[232.45271301 137.92434692]
[217.82879639 134.58653259]
[203.20487976 131.24871826]
[200.07441711 140.16017151]
[196.17613220 148.76350403]
[191.53994751 156.99269104]
[186.20141602 164.78459167]
[180.20150757 172.07945251]
[173.58624268 178.82127380]
[166.40640259 184.95834351]
[158.71704102 190.44355774]
[150.57717896 195.23484802]
[142.04927063 199.29545593]
[133.19873047 202.59420776]
[124.09347534 205.10581970]
[114.80336761 206.81098938]
[105.39967346 207.69667053]
[105.10700226 222.69381714]
[104.81432343 237.69094849]
[104.52164459 252.68809509]
[104.22897339 267.68524170]
[103.93629456 282.68240356]
[103.64361572 297.67953491]
[116.09764099 306.93569946]
[120.70037842 321.75442505]
[115.68196869 336.43759155]
] def
/pairs [
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[19 69]
[20 68]
[21 67]
[23 66]
[24 65]
[25 64]
[27 62]
[28 61]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[81 87]
[82 86]
[88 103]
[89 102]
[90 101]
[91 100]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[121 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 157 2 gmark
5 cmark
157 cmark
6 156 2 gmark
7 155 1 gmark
7 cmark
8 154 2 gmark
11 151 1 gmark
11 cmark
151 cmark
20 68 1 gmark
20 cmark
67 cmark
25 64 3 gmark
64 cmark
27 62 1 gmark
62 cmark
30 58 2 gmark
30 cmark
31 57 3 gmark
33 55 3 gmark
33 cmark
35 cmark
36 cmark
52 cmark
38 51 3 gmark
40 cmark
49 cmark
41 48 2 gmark
88 103 1 gmark
88 cmark
103 cmark
91 cmark
116 137 1 gmark
116 cmark
137 cmark
117 136 1 gmark
118 135 2 gmark
119 cmark
120 133 2 gmark
120 cmark
133 cmark
121 cmark

% End Annotations
% show it
showpage
end
%%EOF
