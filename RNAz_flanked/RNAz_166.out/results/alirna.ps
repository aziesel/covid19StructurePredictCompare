%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:59:17 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGUAGUUUUCCACUGUGUGCGAAUGGUCUAGUGUUUGGUUUAUACAAAAAUAUGUGCACUGGUAGUCCGUAUAUAACGGAAUUUAAUAGAAUAGCUACUUGUGACUGGACUGAUAGUGGUGAUUACACCCUAGCUAAUACAACUACAGAACCACUAAAAC\
) def
/coor [
[91.60909271 241.31503296]
[88.86349487 226.33566284]
[92.45423126 211.53611755]
[101.75919342 199.48051453]
[115.16623688 192.25755310]
[113.99664307 177.30322266]
[112.82705688 162.34889221]
[111.65746307 147.39456177]
[93.21084595 146.16712952]
[77.37087250 138.34011841]
[67.67932129 149.78887939]
[57.98777390 161.23762512]
[48.29622269 172.68637085]
[38.60467529 184.13511658]
[41.43144989 199.51509094]
[33.66592026 213.08824158]
[18.97472954 218.44575500]
[4.29461241 213.05798340]
[-3.44293141 199.46885681]
[-0.58446932 184.09474182]
[11.52031994 174.19483948]
[27.15592575 174.44357300]
[36.84747314 162.99482727]
[46.53902435 151.54608154]
[56.23057175 140.09732056]
[65.92211914 128.64857483]
[62.74694824 124.37729645]
[60.10415649 119.75764465]
[58.03152466 114.85562897]
[56.55866623 109.74131012]
[55.70663071 104.48777771]
[40.74160004 103.46414185]
[25.77656937 102.44050598]
[10.81153679 101.41687012]
[-4.15349483 100.39323425]
[-19.11852646 99.36959839]
[-35.43371201 107.85697937]
[-49.62060547 97.56408691]
[-64.60276031 96.83264160]
[-78.93247223 104.80706787]
[-92.86249542 96.15337372]
[-92.06282043 79.77373505]
[-77.35608673 72.51811981]
[-63.87131500 81.85048676]
[-48.88916016 82.58193207]
[-39.69126892 74.67675781]
[-27.17231750 75.19501495]
[-18.09489059 84.40456390]
[-3.12985849 85.42819977]
[11.83517265 86.45183563]
[26.80020523 87.47547150]
[41.76523590 88.49910736]
[56.73026657 89.52274323]
[61.44618607 77.73689270]
[69.29664612 67.76110077]
[79.64338684 60.40642929]
[91.64517975 56.27083969]
[91.35250092 41.27369308]
[91.05982208 26.27655029]
[83.05473328 12.62997341]
[90.54222870 -0.24584426]
[90.24954987 -15.24298859]
[89.95687103 -30.24013329]
[89.66419983 -45.23727798]
[89.37152100 -60.23442078]
[89.07884216 -75.23156738]
[77.96913910 -86.15000153]
[77.88596344 -101.36340332]
[88.36348724 -111.88752747]
[88.07080841 -126.88467407]
[87.77813721 -141.88182068]
[87.48545837 -156.87895203]
[87.19277954 -171.87609863]
[86.90010071 -186.87324524]
[86.60742950 -201.87039185]
[86.31475067 -216.86753845]
[74.02906036 -226.54203796]
[70.88695526 -241.86068726]
[78.37202454 -255.59049988]
[92.95005798 -261.24865723]
[107.73775482 -256.16357422]
[115.75281525 -242.73626709]
[113.21076965 -227.30668640]
[101.31189728 -217.16021729]
[101.60457611 -202.16307068]
[101.89724731 -187.16592407]
[102.18992615 -172.16877747]
[102.48260498 -157.17163086]
[102.77527618 -142.17448425]
[103.06795502 -127.17734528]
[103.36063385 -112.18020630]
[114.24078369 -102.07289124]
[114.75124359 -86.86782074]
[104.07598877 -75.52424622]
[104.36866760 -60.52709961]
[104.66133881 -45.52995300]
[104.95401764 -30.53281021]
[105.24669647 -15.53566551]
[105.53936768 -0.53852063]
[113.52352905 12.03536034]
[106.05696869 25.98387337]
[106.34964752 40.98101807]
[106.64231873 55.97816086]
[118.48819733 58.82797623]
[129.27215576 64.84680939]
[138.15211487 73.66697693]
[144.40768433 84.69881439]
[147.49806213 97.16969299]
[147.10777283 110.17799377]
[143.17642212 122.75824738]
[157.40565491 127.50470734]
[171.63488770 132.25117493]
[180.81767273 132.00195312]
[186.09387207 137.23155212]
[200.22778320 142.25474548]
[214.36169434 147.27793884]
[228.49560547 152.30113220]
[242.62951660 157.32432556]
[256.76342773 162.34751892]
[270.89733887 167.37071228]
[280.08325195 167.30072021]
[285.25640869 172.63226318]
[299.28961182 177.93028259]
[313.32281494 183.22830200]
[327.35604858 188.52630615]
[341.44027710 193.68716431]
[355.60330200 186.67399597]
[370.55017090 191.80879211]
[377.41320801 206.04516602]
[372.12066650 220.93692017]
[357.81253052 227.64906311]
[342.97756958 222.19938660]
[336.41708374 207.82107544]
[329.02395630 208.54798889]
[322.05801392 202.55952454]
[308.02481079 197.26150513]
[293.99160767 191.96350098]
[279.95837402 186.66548157]
[265.87414551 181.50462341]
[251.74023438 176.48143005]
[237.60632324 171.45823669]
[223.47241211 166.43504333]
[209.33850098 161.41184998]
[195.20458984 156.38865662]
[181.07067871 151.36546326]
[166.88842773 146.48040771]
[152.65919495 141.73394775]
[138.42994690 136.98748779]
[126.61179352 146.22496033]
[127.78138733 161.17930603]
[128.95097351 176.13363647]
[130.12057495 191.08796692]
[144.48754883 196.13868713]
[155.55366516 206.60105896]
[161.40164185 220.66238403]
[161.01828003 235.88647461]
[154.47000122 249.63566589]
[142.89134216 259.52780151]
[128.28837585 263.84902954]
[113.19113922 261.85067749]
] def
/pairs [
[5 152]
[6 151]
[7 150]
[8 149]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[38 45]
[39 44]
[57 103]
[58 102]
[59 101]
[61 99]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[110 148]
[111 147]
[112 146]
[114 145]
[115 144]
[116 143]
[117 142]
[118 141]
[119 140]
[120 139]
[122 138]
[123 137]
[124 136]
[125 135]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 152 1 gmark
5 cmark
152 cmark
6 151 3 gmark
6 cmark
151 cmark
150 cmark
10 26 1 gmark
11 25 1 gmark
12 24 2 gmark
12 cmark
24 cmark
13 23 3 gmark
53 cmark
32 52 1 gmark
33 51 2 gmark
33 cmark
51 cmark
35 49 1 gmark
36 cmark
48 cmark
45 cmark
39 44 1 gmark
57 cmark
103 cmark
58 cmark
59 cmark
61 99 1 gmark
99 cmark
62 98 1 gmark
63 97 1 gmark
64 96 2 gmark
65 95 1 gmark
66 cmark
69 91 2 gmark
69 cmark
91 cmark
70 90 2 gmark
70 cmark
90 cmark
71 89 3 gmark
72 88 1 gmark
88 cmark
73 cmark
87 cmark
75 85 3 gmark
76 cmark
84 cmark
110 148 2 gmark
111 cmark
147 cmark
112 146 2 gmark
114 145 3 gmark
115 144 1 gmark
115 cmark
116 cmark
143 cmark
117 142 3 gmark
142 cmark
118 141 3 gmark
141 cmark
119 140 2 gmark
120 139 1 gmark
139 cmark
122 138 1 gmark
123 137 2 gmark
125 135 1 gmark
126 cmark

% End Annotations
% show it
showpage
end
%%EOF
