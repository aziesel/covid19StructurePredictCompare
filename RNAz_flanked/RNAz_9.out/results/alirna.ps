%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:43:39 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAGCACGUGCUGGUAAAGCUUCAUGCACUUUGUCCGAACAACUGGACUUUAUUGACACUAAGAGAGGUGUAUACUGCUGCCGUGAACAUGAGCAUGAAAUUGCUUGGUACACGGAACGUUCUGAAAAGAGCUAUGAAUUGCAGACACCUUUUGAAAUUAA\
) def
/coor [
[169.30337524 80.35662842]
[155.37620544 85.92744446]
[141.44903564 91.49826050]
[139.49191284 115.18849945]
[125.07030487 134.08491516]
[102.73596954 142.22341919]
[79.53810120 137.03529358]
[70.07178497 148.67095947]
[60.60546112 160.30662537]
[51.13914490 171.94230652]
[52.56418991 187.45381165]
[42.79824066 199.11918640]
[28.00160408 200.38215637]
[32.11359406 215.34448242]
[26.61413383 229.85432434]
[13.61788082 238.33235168]
[-1.87784243 237.51860046]
[-13.91461277 227.72596741]
[-17.86404800 212.71990967]
[-12.20750713 198.27058411]
[0.87995189 189.93403625]
[16.36593437 190.91583252]
[14.59202671 176.17172241]
[24.02646637 164.23664856]
[39.50347519 162.47598267]
[48.96979523 150.84031677]
[58.43611145 139.20463562]
[67.90243530 127.56896973]
[64.70299530 123.33288574]
[62.05916595 118.72953033]
[60.01255417 113.83134460]
[58.59537506 108.71545410]
[43.60179901 109.15443420]
[28.60822487 109.59341431]
[13.61464882 110.03239441]
[-1.37892616 110.47137451]
[-12.03871155 122.13947296]
[-27.83045769 122.76898193]
[-39.38520432 111.98642731]
[-39.84772110 96.18891144]
[-28.94360733 84.74880981]
[-13.14208031 84.45333862]
[-1.81790590 95.47779846]
[13.17566967 95.03881836]
[28.16924477 94.59983826]
[43.16281891 94.16085815]
[58.15639496 93.72187805]
[60.55440903 84.69158936]
[64.87582397 76.40775299]
[70.90991974 69.27429199]
[78.36247253 63.63903809]
[86.87008667 59.77677917]
[96.01792908 57.87583542]
[105.35993958 58.02890015]
[114.44059753 60.22851181]
[122.81711578 64.36740875]
[130.08105469 70.24378204]
[135.87821960 77.57109833]
[149.80538940 72.00027466]
[163.73254395 66.42945862]
[171.34013367 57.43902206]
[181.81060791 57.50520706]
[194.70233154 49.83685684]
[207.59405518 42.16851044]
[220.48576355 34.50016403]
[233.37748718 26.83181381]
[246.26921082 19.16346550]
[259.16091919 11.49511814]
[272.05264282 3.82676959]
[284.94436646 -3.84157848]
[287.53854370 -8.48756027]
[291.29479980 -11.35485840]
[295.32684326 -12.29949093]
[298.82235718 -11.55592060]
[312.14062500 -18.45689583]
[325.45892334 -25.35787201]
[338.77719116 -32.25884628]
[341.93771362 -57.51003265]
[361.32849121 -73.68032837]
[386.33761597 -72.27539825]
[395.34277344 -84.27154541]
[404.34790039 -96.26769257]
[413.35302734 -108.26383972]
[422.35815430 -120.25998688]
[424.45513916 -135.94160461]
[438.28369141 -141.47512817]
[447.28884888 -153.47128296]
[449.95816040 -162.26107788]
[456.58856201 -165.61135864]
[465.82604980 -177.42951965]
[475.06353760 -189.24766541]
[484.30102539 -201.06582642]
[493.53851318 -212.88398743]
[502.77600098 -224.70214844]
[500.60479736 -240.35658264]
[510.20541382 -252.91062927]
[525.88189697 -254.91618347]
[538.33374023 -245.18339539]
[540.17346191 -229.48655701]
[530.30957031 -217.13830566]
[514.59417725 -215.46466064]
[505.35665894 -203.64649963]
[496.11917114 -191.82833862]
[486.88168335 -180.01019287]
[477.64419556 -168.19203186]
[468.40673828 -156.37387085]
[459.28497314 -144.46615601]
[450.27984619 -132.47000122]
[448.82699585 -117.64642334]
[434.35430908 -111.25485229]
[425.34918213 -99.25870514]
[416.34402466 -87.26255798]
[407.33889771 -75.26641083]
[398.33377075 -63.27025986]
[401.46093750 -58.94449615]
[403.87268066 -54.18269730]
[405.50964355 -49.10217667]
[406.33148193 -43.82809830]
[421.17114258 -41.64071274]
[436.01080322 -39.45332718]
[450.85043335 -37.26594543]
[465.69009399 -35.07855988]
[480.72845459 -41.61920166]
[493.74926758 -31.64973259]
[491.35784912 -15.42588711]
[476.01428223 -9.63736629]
[463.50271606 -20.23890495]
[448.66305542 -22.42628860]
[433.82339478 -24.61367416]
[418.98376465 -26.80105782]
[404.14410400 -28.98844337]
[400.57290649 -22.00396156]
[395.48461914 -16.00612450]
[389.14196777 -11.31945324]
[381.87588501 -8.20038605]
[374.06823730 -6.82325983]
[366.13174438 -7.27058935]
[358.48818970 -9.52818966]
[351.54592896 -13.48541927]
[345.67816162 -18.94056892]
[332.35989380 -12.03959370]
[319.04159546 -5.13861752]
[305.72332764 1.76235783]
[292.61270142 9.05014133]
[279.72100830 16.71848869]
[266.82928467 24.38683701]
[253.93756104 32.05518723]
[241.04583740 39.72353363]
[228.15411377 47.39188385]
[215.26240540 55.06023026]
[202.37068176 62.72857666]
[189.47895813 70.39692688]
[204.08480835 73.81295013]
[214.80180359 84.30799866]
[218.52268982 98.83917236]
[214.16865540 113.19335175]
[203.00209045 123.20872498]
[188.26058960 125.98147583]
[174.21824646 120.70767975]
[164.94647217 108.91640472]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[7 28]
[8 27]
[9 26]
[10 25]
[13 22]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[74 143]
[75 142]
[76 141]
[77 140]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[86 108]
[87 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 cmark
59 cmark
8 27 1 gmark
22 cmark
32 47 1 gmark
35 44 1 gmark
62 cmark
152 cmark
65 149 1 gmark
65 cmark
77 140 1 gmark
80 cmark
81 113 1 gmark
86 108 1 gmark
91 104 1 gmark
119 cmark

% End Annotations
% show it
showpage
end
%%EOF
