%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:18:22 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGUUGUUAGAAUUAGAAUAGUACAAAUGUUAACAGAUCAUCUAAUAGAUCUGUCUGACAGUGUUGUACUUGUUACAUGGGCAGCCAGCUUUGAGCUCACAUGUAUGAGGUAUUUUGCAAAAGUAGGACGUGAGCUCACUUGUAAUGUAUGCACUAAACGU\
) def
/coor [
[166.70057678 127.59420013]
[180.91406250 122.80426025]
[166.17105103 120.03955841]
[151.42803955 117.27484894]
[136.68502808 114.51014709]
[122.74971771 119.76908112]
[110.61206818 109.62078094]
[97.35990143 114.07853699]
[86.62322235 105.12223816]
[71.88021088 102.35752869]
[62.36461258 115.52619934]
[48.11565399 123.21018982]
[32.00061798 123.92074585]
[17.23736382 117.56660461]
[6.75179338 105.46214294]
[2.59799790 90.05584717]
[-12.19615173 87.57933044]
[-26.99030113 85.10281372]
[-41.80791092 82.77075195]
[-56.64756393 80.58336639]
[-71.48722076 78.39598083]
[-86.32687378 76.20860291]
[-101.16652679 74.02121735]
[-116.00617981 71.83383179]
[-130.84584045 69.64644623]
[-149.18138123 77.94301605]
[-163.86157227 65.40336609]
[-178.77528381 63.79663467]
[-193.68898010 62.18989944]
[-208.60267639 60.58316803]
[-225.23658752 68.42753601]
[-239.01109314 57.58896255]
[-253.95329285 56.27352524]
[-268.89550781 54.95809174]
[-283.83770752 53.64265442]
[-298.77993774 52.32722092]
[-313.72213745 51.01178360]
[-328.66433716 49.69635010]
[-338.74884033 61.48967743]
[-353.84710693 65.07041168]
[-368.15356445 59.06169128]
[-376.16711426 45.77398682]
[-374.80633545 30.31669426]
[-364.59448242 18.63345718]
[-349.45825195 15.21671963]
[-335.21780396 21.38028526]
[-327.34890747 34.75413895]
[-312.40670776 36.06957245]
[-297.46447754 37.38500977]
[-282.52227783 38.70044327]
[-267.58007812 40.01588058]
[-252.63786316 41.33131790]
[-237.69564819 42.64675140]
[-228.19633484 35.10646057]
[-215.70713806 36.11277008]
[-206.99594116 45.66946793]
[-192.08224487 47.27620316]
[-177.16854858 48.88293457]
[-162.25485229 50.48966980]
[-154.85552979 43.35331726]
[-144.52844238 41.45478439]
[-134.66967773 45.66559219]
[-128.65844727 54.80678940]
[-113.81879425 56.99417496]
[-98.97914124 59.18156052]
[-84.13948822 61.36894608]
[-69.29983521 63.55632782]
[-54.46017838 65.74371338]
[-39.62052536 67.93109894]
[-32.50863647 65.78450012]
[-24.51378632 70.30866241]
[-9.71963596 72.78517914]
[5.07451391 75.26169586]
[12.52551842 63.52799606]
[23.92728424 55.50274277]
[37.57159805 52.42877960]
[51.39873505 54.80410385]
[63.30838776 62.30150986]
[71.47869110 73.81323242]
[74.64492035 87.61451721]
[89.38793182 90.37921906]
[102.64009857 85.92146301]
[113.37677765 94.87776184]
[128.36660767 89.81658173]
[139.44973755 99.76713562]
[154.19274902 102.53183746]
[168.93576050 105.29654694]
[183.67877197 108.06124878]
[189.20649719 105.37805939]
[194.83749390 105.30712891]
[199.49110413 107.44384003]
[213.97364807 103.53800201]
[228.45620728 99.63216400]
[239.76560974 88.56835175]
[254.06855774 92.72469330]
[268.55111694 88.81885529]
[283.03366089 84.91301727]
[297.51620483 81.00717163]
[311.99877930 77.10133362]
[312.66790771 66.90922546]
[315.93884277 57.25112534]
[321.58169556 48.77836227]
[329.20693970 42.05991745]
[338.29223633 37.54421997]
[348.21835327 35.52921295]
[358.31121826 36.14273834]
[367.88772583 39.33443069]
[376.30206299 44.87974548]
[382.98916626 52.39572144]
[387.50271606 61.36742783]
[402.34234619 59.18004608]
[417.18200684 56.99266052]
[432.02166748 54.80527496]
[446.86132812 52.61788940]
[461.70098877 50.43050766]
[476.48907471 42.13904953]
[488.55026245 54.05392456]
[480.43988037 68.94211578]
[463.88836670 65.27016449]
[449.04870605 67.45754242]
[434.20904541 69.64492798]
[419.36938477 71.83231354]
[404.52975464 74.01969910]
[389.69009399 76.20708466]
[383.62133789 95.40676880]
[368.65911865 108.99458313]
[348.81790161 113.22237396]
[329.47308350 106.86721802]
[315.90460205 91.58389282]
[301.42205811 95.48973083]
[286.93951416 99.39556885]
[272.45693970 103.30141449]
[257.97439575 107.20725250]
[247.70088196 117.99169159]
[232.36204529 114.11471558]
[217.87948608 118.02055359]
[203.39694214 121.92639923]
[217.94168091 125.59387970]
[231.27799988 132.45994568]
[242.71290588 142.16781616]
[251.65225220 154.21305847]
[257.63153076 167.96981812]
[260.34005737 182.72325134]
[259.63711548 197.70677185]
[255.55917358 212.14181519]
[248.31817627 225.27833557]
[238.29035950 236.43373108]
[225.99678040 245.02836609]
[212.07620239 250.61564636]
[197.25198364 252.90527344]
[182.29438782 251.77824402]
[167.98062134 247.29315186]
[155.05444336 239.68302917]
[144.18751526 229.34330750]
[135.94448853 216.81124878]
[130.75367737 202.73803711]
[128.88479614 187.85491943]
[130.43496704 172.93522644]
[135.32362366 158.75422668]
[143.29676819 146.04875183]
] def
/pairs [
[2 88]
[3 87]
[4 86]
[5 85]
[7 83]
[9 81]
[10 80]
[16 73]
[17 72]
[18 71]
[19 69]
[20 68]
[21 67]
[22 66]
[23 65]
[24 64]
[25 63]
[27 59]
[28 58]
[29 57]
[30 56]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[91 137]
[92 136]
[93 135]
[95 133]
[96 132]
[97 131]
[98 130]
[99 129]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 cmark
88 cmark
87 cmark
4 86 3 gmark
85 cmark
7 cmark
83 cmark
10 80 2 gmark
10 cmark
80 cmark
16 73 1 gmark
16 cmark
73 cmark
71 cmark
19 69 3 gmark
68 cmark
67 cmark
22 66 1 gmark
24 64 3 gmark
27 59 2 gmark
58 cmark
32 53 1 gmark
32 cmark
53 cmark
33 52 1 gmark
33 cmark
52 cmark
34 51 3 gmark
50 cmark
36 49 1 gmark
37 48 2 gmark
38 47 2 gmark
38 cmark
91 137 2 gmark
137 cmark
136 cmark
93 135 2 gmark
95 133 1 gmark
95 cmark
97 131 2 gmark
97 cmark
98 130 2 gmark
99 129 2 gmark
110 124 1 gmark
112 122 1 gmark
112 cmark
122 cmark
115 119 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
