%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:33:14 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCUAUAGAUCUAUCUAAAGAAUUGAAACGGCCUAUAAAUCCUACAGAUGAUGCUUAUUAUACGGUUACUGAUGUUAAGCAAGUUGGUUGUUCUAUGCGUUUGUUCUAUGAGAGAGAUGGACAGCGUACUUAUGAU_GAUGUU_AAUGCUAGUUUG\
) def
/coor [
[96.15976715 121.40148926]
[87.14862823 133.39312744]
[78.13749695 145.38476562]
[76.67355347 165.45216370]
[58.65392685 172.37232971]
[50.13295364 184.71708679]
[41.61198425 197.06184387]
[33.09101105 209.40660095]
[24.57004166 221.75135803]
[16.04907036 234.09611511]
[7.52809906 246.44087219]
[11.85087681 261.46908569]
[5.45515013 275.73895264]
[-8.63921547 282.51263428]
[-23.77729034 278.59182739]
[-32.81134033 265.82781982]
[-31.47576141 250.24739075]
[-20.40117264 239.20712280]
[-4.81665897 237.91990662]
[3.70431256 225.57514954]
[12.22528362 213.23037720]
[20.74625397 200.88562012]
[29.26722527 188.54086304]
[37.78819656 176.19610596]
[46.30916977 163.85134888]
[43.56133652 153.93679810]
[46.82198334 143.94688416]
[55.23498535 137.28880310]
[66.14585114 136.37364197]
[75.15699005 124.38199615]
[84.16812134 112.39035034]
[73.95758057 123.37874603]
[59.52892685 127.47923279]
[45.06555939 123.50292969]
[34.76094055 112.60270691]
[31.60275650 97.93894196]
[36.50667953 83.76320648]
[48.05088425 74.18556213]
[62.88828278 71.98291779]
[76.71696472 77.79389954]
[85.52664185 89.93140411]
[78.02664185 76.94102478]
[70.52664185 63.95064163]
[63.02663803 50.96025848]
[55.52663803 37.96987915]
[48.02663803 24.97949791]
[40.52663803 11.98911667]
[33.02663803 -1.00126433]
[25.98454094 -6.91085911]
[25.50942612 -14.32961369]
[18.27253532 -27.46838760]
[11.03564358 -40.60716248]
[3.79875207 -53.74593735]
[-3.43813896 -66.88471222]
[-10.67503071 -80.02349091]
[-17.91192245 -93.16226196]
[-31.34718704 -101.51715088]
[-30.71033669 -116.39813995]
[-37.94722748 -129.53691101]
[-45.18412018 -142.67568970]
[-52.10578537 -148.72589111]
[-52.43141556 -156.15270996]
[-59.40226364 -169.43455505]
[-66.37310791 -182.71638489]
[-79.08769226 -193.93136597]
[-71.83074188 -209.25367737]
[-55.09831238 -206.52197266]
[-53.09127045 -189.68724060]
[-46.12042236 -176.40539551]
[-39.14957428 -163.12355042]
[-32.04534531 -149.91258240]
[-24.80845261 -136.77380371]
[-17.57156181 -123.63502502]
[-4.65392637 -116.21990967]
[-4.77314663 -100.39915466]
[2.46374464 -87.26037598]
[9.70063591 -74.12160492]
[16.93752670 -60.98283005]
[24.17441750 -47.84405518]
[31.41131020 -34.70528030]
[38.64820099 -21.56650543]
[46.01702118 -8.50126457]
[53.51702118 4.48911667]
[61.01702118 17.47949791]
[68.51702118 30.46987915]
[76.01702118 43.46025848]
[83.51702118 56.45064163]
[91.01702118 69.44102478]
[98.51702118 82.43140411]
[96.97790527 67.51057434]
[106.95585632 56.31055450]
[121.95468903 56.12316895]
[132.20933533 67.07041168]
[131.04347229 82.02503967]
[119.21656036 91.25064850]
[133.78068542 87.66091919]
[148.34481812 84.07118225]
[162.90893555 80.48144531]
[177.47306824 76.89170837]
[192.03720093 73.30197906]
[197.15582275 63.62291336]
[206.57873535 58.49287415]
[217.04731750 59.40885925]
[225.09144592 65.82298279]
[239.78829956 62.82259369]
[254.48516846 59.82220840]
[269.18203735 56.82182312]
[283.87887573 53.82143784]
[291.17169189 39.98855209]
[305.66940308 34.12757492]
[320.52658081 39.00588226]
[328.72817993 52.32008743]
[326.40161133 67.78363037]
[314.64541626 78.09510040]
[299.01055908 78.38572693]
[286.87927246 68.51829529]
[272.18240356 71.51868439]
[257.48556519 74.51907349]
[242.78869629 77.51945496]
[228.09182739 80.51984406]
[214.66232300 94.38504791]
[195.62692261 87.86610413]
[181.06280518 91.45584106]
[166.49867249 95.04557037]
[151.93453979 98.63530731]
[137.37042236 102.22504425]
[122.80628967 105.81478119]
[137.30853271 109.64690399]
[152.22398376 108.05659485]
[167.15838623 109.45789337]
[181.51766968 113.79505920]
[194.73063660 120.89557648]
[206.27171326 130.47698975]
[215.68180847 142.15818787]
[222.58660889 155.47447205]
[226.71145630 169.89619446]
[227.89225769 184.84963989]
[226.08204651 199.74000549]
[221.35282898 213.97499084]
[213.89274597 226.98832703]
[203.99851990 238.26239014]
[192.06375122 247.34870911]
[178.56315613 253.88583374]
[164.03378296 257.61373901]
[149.05358887 258.38415527]
[134.21842957 256.16638184]
[120.11846161 251.04870605]
[107.31453705 243.23464966]
[96.31596375 233.03506470]
[87.56026459 220.85566711]
[81.39572144 207.18093872]
[78.06754303 192.55482483]
[77.70812225 177.55912781]
[80.33174896 162.79035950]
[85.83407593 148.83598328]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[58 73]
[59 72]
[60 71]
[62 70]
[63 69]
[64 68]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 30 3 gmark
3 29 2 gmark
3 cmark
5 25 2 gmark
6 24 1 gmark
6 cmark
24 cmark
8 22 1 gmark
9 21 1 gmark
9 cmark
21 cmark
10 20 3 gmark
11 19 2 gmark
41 89 1 gmark
42 88 2 gmark
42 cmark
88 cmark
44 86 2 gmark
45 85 3 gmark
85 cmark
46 84 1 gmark
84 cmark
47 83 2 gmark
48 82 2 gmark
50 81 2 gmark
50 cmark
81 cmark
51 cmark
80 cmark
52 79 2 gmark
52 cmark
79 cmark
53 78 1 gmark
54 77 2 gmark
55 76 1 gmark
76 cmark
56 75 1 gmark
58 cmark
73 cmark
59 72 1 gmark
60 71 2 gmark
60 cmark
71 cmark
62 cmark
70 cmark
63 69 3 gmark
63 cmark
64 68 1 gmark
127 cmark
96 126 1 gmark
96 cmark
126 cmark
97 125 1 gmark
97 cmark
98 124 2 gmark
99 cmark
123 cmark
100 122 1 gmark
104 cmark
120 cmark
107 117 2 gmark
108 116 2 gmark

% End Annotations
% show it
showpage
end
%%EOF
