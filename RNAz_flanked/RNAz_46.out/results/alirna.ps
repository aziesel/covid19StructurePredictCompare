%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:22:29 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCUGUAUGGAAACUAAAGCCAUAGUUUCAACUAUACAGCGUAAAUAUAAGGGUAUUAAAAUACAAGAGGGUGUGGUUGAUUAUGGUGCCAGAUUUUACUUUUAUACCAGUAAAACAACUGUAGCAUCACUUAUCAACACACUCAACGAUCUAAAUGAGAC\
) def
/coor [
[104.13408661 115.59112549]
[96.83875275 113.85095978]
[86.28401947 124.50917816]
[75.72928619 135.16740417]
[65.17455292 145.82560730]
[54.61981964 156.48382568]
[44.06508636 167.14204407]
[33.51034927 177.80026245]
[22.95561600 188.45848083]
[12.71731949 199.42102051]
[2.80422974 210.67849731]
[-7.10886002 221.93595886]
[-17.02194977 233.19343567]
[-26.93503952 244.45091248]
[-36.84812927 255.70837402]
[-35.59653473 271.46304321]
[-45.91516876 283.43386841]
[-61.68217468 284.51882935]
[-73.54325867 274.07421875]
[-74.46146393 258.29663086]
[-63.89202118 246.54663086]
[-48.10559845 245.79528809]
[-38.19250870 234.53781128]
[-28.27942085 223.28034973]
[-18.36633110 212.02287292]
[-8.45324135 200.76539612]
[1.45984840 189.50793457]
[1.58245385 185.93632507]
[3.47286844 182.25175476]
[7.16243744 179.29913330]
[12.29739952 177.90374756]
[22.85213280 167.24552917]
[33.40686798 156.58731079]
[43.96160126 145.92909241]
[54.51633453 135.27087402]
[65.07106781 124.61266327]
[75.62580109 113.95444489]
[86.18053436 103.29622650]
[95.06820679 91.21279144]
[102.09878540 77.96247864]
[109.12937164 64.71216583]
[96.60691833 72.96976471]
[86.63044739 84.17111206]
[72.26064301 88.47328949]
[57.77012253 84.59712219]
[47.46738815 73.69511414]
[44.41578674 59.00880432]
[49.52266693 44.90491104]
[61.26957321 35.57698822]
[76.16377258 33.79853821]
[89.77603149 40.09776306]
[104.55161285 42.68276978]
[92.82414246 33.33042145]
[81.09667206 23.97807693]
[69.36919403 14.62572956]
[53.08139801 12.71793556]
[46.83905792 -2.44666862]
[57.06375885 -15.26803875]
[73.23720551 -12.55664730]
[78.72154236 2.89825702]
[90.44901276 12.25060368]
[102.17649078 21.60295105]
[113.90396118 30.95529747]
[121.46558380 24.82916260]
[130.12625122 21.73779106]
[138.78715515 21.70702553]
[146.45671082 24.39606285]
[152.36355591 29.17050552]
[164.78454590 20.76105499]
[177.20555115 12.35160446]
[189.62654114 3.94215465]
[202.04753113 -4.46729565]
[214.46853638 -12.87674618]
[226.88952637 -21.28619576]
[232.27589417 -28.72748184]
[239.63594055 -29.73578072]
[252.21865845 -37.90127563]
[264.80136108 -46.06676865]
[277.38409424 -54.23226166]
[289.96679688 -62.39775848]
[293.27700806 -79.55049896]
[307.67144775 -88.84081268]
[324.00915527 -84.94835663]
[336.43014526 -93.35780334]
[348.85116577 -101.76725769]
[361.27215576 -110.17670441]
[373.69314575 -118.58615875]
[386.11413574 -126.99560547]
[398.36868286 -135.64581299]
[410.45211792 -144.53347778]
[422.53555298 -153.42114258]
[429.72598267 -172.21804810]
[448.98046875 -173.63772583]
[460.70794678 -182.99006653]
[472.43539429 -192.34242249]
[484.16287231 -201.69476318]
[495.89035034 -211.04711914]
[507.61782837 -220.39945984]
[519.34527588 -229.75180054]
[518.51464844 -245.24662781]
[526.97845459 -258.25213623]
[541.48229980 -263.76742554]
[556.44909668 -259.67178345]
[566.12384033 -247.54003906]
[566.78637695 -232.03712463]
[558.18194580 -219.12420654]
[543.61914062 -213.76657104]
[528.69763184 -218.02433777]
[516.97015381 -208.67198181]
[505.24270630 -199.31964111]
[493.51522827 -189.96730042]
[481.78775024 -180.61494446]
[470.06027222 -171.26260376]
[458.33282471 -161.91024780]
[458.09674072 -151.63301086]
[452.09475708 -143.01737976]
[442.12667847 -139.07223511]
[431.42321777 -141.33770752]
[419.33978271 -132.45004272]
[407.25634766 -123.56237793]
[405.66076660 -119.01211548]
[401.16098022 -115.43756866]
[394.52359009 -114.57460785]
[382.10260010 -106.16516113]
[369.68161011 -97.75570679]
[357.26062012 -89.34626007]
[344.83959961 -80.93680573]
[332.41860962 -72.52735901]
[331.76776123 -59.62922668]
[323.67376709 -49.31686401]
[310.92614746 -45.50843811]
[298.13229370 -49.81504059]
[285.54956055 -41.64954758]
[272.96685791 -33.48405457]
[260.38415527 -25.31855965]
[247.80143738 -17.15306664]
[235.29898071 -8.86520004]
[222.87799072 -0.45574972]
[210.45698547 7.95370054]
[198.03599548 16.36315155]
[185.61499023 24.77260017]
[173.19400024 33.18205261]
[160.77301025 41.59150314]
[154.37536621 68.30718231]
[122.37969208 71.74274445]
[115.34910583 84.99306488]
[108.31851959 98.24337769]
[125.86804962 102.25931549]
[140.29493713 116.20421600]
[144.90234375 130.47908020]
[158.46981812 139.04080200]
[160.09188843 155.00164795]
[148.52424622 166.11781311]
[132.64059448 163.86193848]
[124.62551117 149.96452332]
[130.62748718 135.08648682]
[126.02007294 120.81162262]
[118.72473907 119.07145691]
[119.92332458 134.02349854]
[106.07340240 139.78367615]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[8 32]
[9 31]
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[39 147]
[40 146]
[41 145]
[52 63]
[53 62]
[54 61]
[55 60]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 120]
[90 119]
[91 118]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 38 1 gmark
5 35 1 gmark
6 cmark
32 cmark
10 27 1 gmark
11 cmark
26 cmark
12 cmark
13 cmark
24 cmark
39 147 1 gmark
53 cmark
62 cmark
68 143 1 gmark
143 cmark
71 cmark
140 cmark
72 139 1 gmark
74 cmark
137 cmark
76 136 1 gmark
134 cmark
80 132 1 gmark
83 128 1 gmark
86 125 1 gmark
125 cmark
88 cmark
89 cmark
90 119 1 gmark
114 cmark
95 112 1 gmark
97 110 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
