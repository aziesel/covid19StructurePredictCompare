%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:48:04 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCACUAGUAGUGGUGAUGCAACUACUGCUUUUGCUAAUUCUGUUUUUAACAUAUGUCAAGCUGUUACAGCCAAUGUAUGUGCACUUAUGUCAUGCAAUGGUAAUAAGAUUGAAGAUUUGAGUAUACGCAAUCUACAAAAGCGCCUAUACUCAAAU\
) def
/coor [
[80.81612396 134.12882996]
[71.09739685 145.55451965]
[61.37866211 156.98019409]
[62.46385574 172.51918030]
[52.44491577 183.96800232]
[37.62417984 184.90681458]
[27.90544891 196.33248901]
[18.18671799 207.75817871]
[8.46798706 219.18386841]
[-1.25074375 230.60954285]
[-10.96947479 242.03523254]
[-20.68820572 253.46092224]
[-30.40693665 264.88659668]
[-40.12566757 276.31228638]
[-38.60429001 292.04318237]
[-48.71628189 304.18908691]
[-64.46237946 305.54406738]
[-76.50070190 295.30422974]
[-77.68912506 279.54467773]
[-67.32257843 267.61529541]
[-51.55135345 266.59356689]
[-41.83262253 255.16787720]
[-32.11389160 243.74218750]
[-22.39515877 232.31649780]
[-12.67642879 220.89082336]
[-2.95769739 209.46513367]
[6.76103354 198.03944397]
[16.47976494 186.61376953]
[26.19849586 175.18807983]
[24.74772835 160.40867615]
[34.44113922 148.68295288]
[49.95298004 147.26147461]
[59.67171097 135.83578491]
[69.39044189 124.41009521]
[63.56123352 114.31832123]
[60.96092224 102.95777130]
[61.81992340 91.33513641]
[66.06212616 80.48030090]
[73.31160736 71.35514069]
[82.92599487 64.76824951]
[94.05333710 61.30329132]
[94.65732574 46.31545639]
[95.26131439 31.32762146]
[95.86530304 16.33978653]
[96.46929169 1.35195160]
[97.07328033 -13.63588333]
[97.67726898 -28.62371826]
[98.28125763 -43.61155319]
[98.88524628 -58.59938812]
[90.71144867 -68.62534332]
[91.55681610 -81.13084412]
[100.41960144 -89.41623688]
[101.32527924 -104.38887024]
[102.23095703 -119.36150360]
[103.13663483 -134.33413696]
[104.04230499 -149.30677795]
[96.32431030 -157.07318115]
[94.22990417 -167.59564209]
[98.21884918 -177.31771851]
[106.73569489 -183.08938599]
[108.24352264 -198.01341248]
[109.75135803 -212.93742371]
[111.25918579 -227.86145020]
[112.76701355 -242.78547668]
[114.27484894 -257.70950317]
[115.78267670 -272.63351440]
[117.29050446 -287.55752563]
[104.03965759 -280.52795410]
[90.20091248 -286.31494141]
[85.89867401 -300.68472290]
[94.28046417 -313.12438965]
[109.21417236 -314.53311157]
[119.77463531 -303.87933350]
[122.77502441 -318.57617188]
[125.77540588 -333.27304077]
[128.62765503 -347.99935913]
[131.33148193 -362.75366211]
[134.03530884 -377.50796509]
[136.73913574 -392.26226807]
[127.55613708 -405.12493896]
[130.24043274 -420.69958496]
[143.19946289 -429.74609375]
[158.74487305 -426.89727783]
[167.65385437 -413.84332275]
[164.64085388 -398.32891846]
[151.49343872 -389.55844116]
[148.78961182 -374.80413818]
[146.08578491 -360.04983521]
[143.38195801 -345.29553223]
[145.28057861 -338.10812378]
[140.47227478 -330.27267456]
[137.47187805 -315.57580566]
[134.47149658 -300.87893677]
[132.21452332 -286.04971313]
[130.70669556 -271.12570190]
[129.19886780 -256.20166016]
[127.69104004 -241.27764893]
[126.18321228 -226.35362244]
[124.67537689 -211.42959595]
[123.16754913 -196.50556946]
[121.65972137 -181.58155823]
[130.90180969 -164.63517761]
[119.01493835 -148.40109253]
[118.10926819 -133.42846680]
[117.20359039 -118.45582581]
[116.29791260 -103.48320007]
[115.39223480 -88.51056671]
[124.07906342 -73.29057312]
[113.87308502 -57.99539948]
[113.26909637 -43.00756454]
[112.66510773 -28.01972961]
[112.06111908 -13.03189468]
[111.45713043 1.95594072]
[110.85314178 16.94377518]
[110.24915314 31.93161011]
[109.64515686 46.91944504]
[109.04116821 61.90727997]
[129.57717896 74.34871674]
[138.98860168 96.43813324]
[133.73559570 119.86724091]
[144.96325684 129.81407166]
[156.19091797 139.76092529]
[167.41857910 149.70776367]
[178.64624023 159.65460205]
[189.87390137 169.60144043]
[205.33425903 172.96119690]
[209.72998047 187.19238281]
[220.95764160 197.13922119]
[232.18530273 207.08607483]
[246.47346497 201.59907532]
[261.67358398 203.39213562]
[274.29278564 212.05322266]
[281.43127441 225.59207153]
[281.44866943 240.89756775]
[274.34097290 254.45262146]
[261.74148560 263.14236450]
[246.54548645 264.96997070]
[232.24488831 259.51547241]
[222.12588501 248.03225708]
[218.51371765 233.15908813]
[222.23846436 218.31373596]
[211.01080322 208.36688232]
[199.78314209 198.42004395]
[185.12586975 195.77175903]
[179.92706299 180.82910156]
[168.69940186 170.88226318]
[157.47174072 160.93542480]
[146.24407959 150.98858643]
[135.01641846 141.04174805]
[123.78876495 131.09489441]
[118.30813599 134.60650635]
[112.32144928 137.16154480]
[105.99418640 138.68937683]
[99.50122833 139.14778137]
[93.02206421 138.52410889]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[41 117]
[42 116]
[43 115]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[52 107]
[53 106]
[54 105]
[55 104]
[56 103]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[65 96]
[66 95]
[67 94]
[73 93]
[74 92]
[75 91]
[76 89]
[77 88]
[78 87]
[79 86]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[127 143]
[128 142]
[129 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 33 2 gmark
2 cmark
6 29 2 gmark
7 28 2 gmark
8 27 2 gmark
8 cmark
9 26 2 gmark
10 25 2 gmark
11 24 2 gmark
12 23 2 gmark
23 cmark
14 21 2 gmark
41 117 3 gmark
41 cmark
117 cmark
116 cmark
44 114 1 gmark
44 cmark
45 113 2 gmark
46 112 2 gmark
48 110 1 gmark
107 cmark
53 106 3 gmark
104 cmark
60 101 1 gmark
101 cmark
65 cmark
96 cmark
66 95 3 gmark
67 94 2 gmark
73 93 2 gmark
74 92 2 gmark
76 89 1 gmark
89 cmark
77 88 2 gmark
78 87 1 gmark
78 cmark
87 cmark
79 86 2 gmark
79 cmark
120 cmark
150 cmark
121 cmark
149 cmark
123 cmark
124 146 2 gmark
125 145 2 gmark
127 143 2 gmark
128 cmark
129 141 3 gmark

% End Annotations
% show it
showpage
end
%%EOF
