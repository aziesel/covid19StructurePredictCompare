%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:29:25 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGAAAA____AU___UGAAUGUACUUUUUGAUGGUCGUGAUAAUGGUGCUCUUGAAGCUUUU_AGAAGUGCAAGUAAUGGCGUUUACAUUACCACGACAAAAGUUAAGAGUCUUUCGAUGAU_UAAAGGUCCACAACGUGCUGAUUUAA\
) def
/coor [
[140.24984741 433.37686157]
[132.01144409 426.42385864]
[124.74329376 418.45971680]
[118.56854248 409.61868286]
[113.59189606 400.04983521]
[109.89783478 389.91467285]
[107.54920197 379.38427734]
[106.58612823 368.63641357]
[107.02534485 357.85269165]
[108.85987091 347.21530151]
[112.05918121 336.90402222]
[116.56964874 327.09326172]
[122.31548309 317.94888306]
[129.19999695 309.62570190]
[137.10720825 302.26458740]
[145.90386963 295.99029541]
[155.44158936 290.90911865]
[150.54003906 276.73257446]
[145.63848877 262.55603027]
[140.73693848 248.37945557]
[129.26548767 238.87918091]
[132.06855774 223.30827332]
[126.87682343 217.97990417]
[127.21584320 208.78550720]
[122.61027527 194.51004028]
[118.00470734 180.23458862]
[113.39914703 165.95912170]
[108.79357910 151.68365479]
[104.18801880 137.40820312]
[87.50688171 135.50823975]
[73.31103516 126.54452515]
[64.42449188 112.30024719]
[62.61507797 95.60904694]
[68.24274445 79.79135132]
[80.18796539 67.99381256]
[74.99254608 53.92229080]
[69.79713440 39.85077286]
[64.60171509 25.77925301]
[59.40629959 11.70773315]
[54.21088409 -2.36378598]
[40.13460922 -9.03433609]
[35.06617355 -23.37886810]
[41.51227188 -36.75733566]
[36.31685638 -50.82885742]
[31.12144089 -64.90037537]
[25.92602539 -78.97189331]
[20.73060989 -93.04341125]
[15.09865284 -106.94596863]
[9.03563976 -120.66602325]
[2.97262692 -134.38607788]
[-3.09038615 -148.10612488]
[-9.57855129 -161.63032532]
[-16.48554993 -174.94548035]
[-23.39254761 -188.26063538]
[-30.29954720 -201.57579041]
[-43.52228928 -210.26312256]
[-42.51454926 -225.12359619]
[-49.42154694 -238.43875122]
[-56.32854462 -251.75390625]
[-63.23554230 -265.06906128]
[-70.14253998 -278.38421631]
[-77.04953766 -291.69937134]
[-89.71012878 -302.97528076]
[-82.37969971 -318.26254272]
[-65.66057587 -315.45053101]
[-63.73438644 -298.60635376]
[-56.82738495 -285.29119873]
[-49.92038727 -271.97604370]
[-43.01338959 -258.66088867]
[-36.10639191 -245.34574890]
[-29.19939232 -232.03059387]
[-16.47068596 -224.29565430]
[-16.98439217 -208.48278809]
[-10.07739258 -195.16763306]
[-3.17039418 -181.85247803]
[3.73660445 -168.53732300]
[7.03654003 -167.13093567]
[9.79834843 -164.02061462]
[11.21227264 -159.48706055]
[10.62966728 -154.16914368]
[16.69268036 -140.44909668]
[22.75569344 -126.72903442]
[28.81870651 -113.00897980]
[32.02449417 -111.39950562]
[34.58691788 -108.12297058]
[35.71530533 -103.51004028]
[34.80212784 -98.23883057]
[39.99754333 -84.16731262]
[45.19295883 -70.09579468]
[50.38837433 -56.02427292]
[55.58378983 -41.95275116]
[69.17717743 -35.97315979]
[74.64652252 -21.77664948]
[68.28240204 -7.55920172]
[73.47782135 6.51231766]
[78.67323303 20.58383751]
[83.86865234 34.65535736]
[89.06406403 48.72687531]
[94.25948334 62.79839706]
[107.28090668 63.06896591]
[119.43067169 67.76086426]
[129.25422668 76.31238556]
[135.57551575 87.69975281]
[137.63774109 100.55968475]
[135.19404602 113.35261536]
[128.53695679 124.54698944]
[118.46347809 132.80264282]
[123.06904602 147.07809448]
[127.67460632 161.35356140]
[132.28016663 175.62901306]
[136.88574219 189.90447998]
[141.49130249 204.17993164]
[146.24511719 218.40672302]
[158.06715393 228.92098999]
[154.91348267 243.47790527]
[159.81503296 257.65447998]
[164.71659851 271.83102417]
[169.61814880 286.00756836]
[189.59771729 283.60437012]
[209.56199646 286.07156372]
[228.34152222 293.26098633]
[244.83717346 304.74804688]
[258.08438110 319.85665894]
[267.30960083 337.69915771]
[271.97543335 357.22836304]
[271.81195068 377.29910278]
[266.83233643 396.73526001]
[257.33181763 414.39883423]
[243.87031555 429.25650024]
[252.63652039 441.42834473]
[261.40274048 453.60018921]
[275.74621582 460.27661133]
[276.90573120 475.12603760]
[292.44610596 479.11047363]
[298.88851929 493.80316162]
[291.29089355 507.93310547]
[275.48144531 510.66104126]
[263.58789062 499.89428711]
[264.73388672 483.89224243]
[251.01742554 478.08639526]
[249.23089600 462.36639404]
[240.46467590 450.19454956]
[231.69847107 438.02270508]
[222.09967041 442.89474487]
[211.94834900 446.48117065]
[201.41586304 448.72094727]
[190.68008423 449.57580566]
[179.92236328 449.03085327]
[169.32446289 447.09481812]
[159.06553650 443.79998779]
] def
/pairs [
[17 118]
[18 117]
[19 116]
[20 115]
[22 113]
[24 112]
[25 111]
[26 110]
[27 109]
[28 108]
[29 107]
[35 99]
[36 98]
[37 97]
[38 96]
[39 95]
[40 94]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[48 83]
[49 82]
[50 81]
[51 80]
[52 76]
[53 75]
[54 74]
[55 73]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[129 143]
[130 142]
[131 141]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 118 1 gmark
118 cmark
18 117 1 gmark
19 116 2 gmark
20 115 3 gmark
22 cmark
113 cmark
24 112 3 gmark
24 cmark
112 cmark
25 cmark
111 cmark
26 110 1 gmark
27 109 1 gmark
109 cmark
108 cmark
29 107 1 gmark
35 99 2 gmark
35 cmark
99 cmark
36 98 1 gmark
98 cmark
37 97 3 gmark
38 96 2 gmark
39 95 1 gmark
95 cmark
40 94 1 gmark
94 cmark
43 91 1 gmark
43 cmark
44 90 1 gmark
88 cmark
47 87 3 gmark
48 83 1 gmark
48 cmark
49 82 2 gmark
82 cmark
50 81 1 gmark
51 80 2 gmark
52 76 2 gmark
52 cmark
76 cmark
53 75 1 gmark
75 cmark
54 74 3 gmark
54 cmark
74 cmark
55 73 2 gmark
73 cmark
57 71 2 gmark
57 cmark
71 cmark
58 70 2 gmark
58 cmark
70 cmark
59 69 1 gmark
59 cmark
69 cmark
60 68 3 gmark
60 cmark
68 cmark
67 cmark
62 66 1 gmark
66 cmark
129 cmark
143 cmark
131 cmark
133 139 2 gmark

% End Annotations
% show it
showpage
end
%%EOF
