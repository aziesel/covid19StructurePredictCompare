%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:58:45 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUCAAAGAAAUUGGAAAUUAUAAUUAUUAUAAAAAAUGGCCUUGGUACAUAUGGCUUGGUUUUAUUGCUGGCCUUGUUGCCAUAGUUCUU_UGACUAUUCUU_CAUAUUAUGCUGUACUGGUUGUGGUACUAGCUGUUUGAAGAAAUGUAAUUGU\
) def
/coor [
[80.33312988 139.43075562]
[73.19802094 126.23643494]
[77.30374908 111.80927277]
[90.31660461 104.34882355]
[76.23851013 99.17124176]
[62.10900116 94.13567352]
[47.97949219 89.10010529]
[33.84998322 84.06453705]
[19.72047043 79.02896881]
[5.59096098 73.99340057]
[-8.53854942 68.95783234]
[-22.71804619 64.06478882]
[-36.94609451 59.31477356]
[-51.17414093 54.56475067]
[-65.40218353 49.81473160]
[-79.63023376 45.06471252]
[-93.85827637 40.31469345]
[-108.08632660 35.56467438]
[-118.70385742 44.40512085]
[-132.19877625 46.81100845]
[-145.01286316 42.25701523]
[-153.82127380 32.03868103]
[-156.39505005 18.90612030]
[-170.52456665 13.87055302]
[-184.65406799 8.83498573]
[-198.78358459 3.79941821]
[-207.32571411 16.80953026]
[-218.71693420 27.40199089]
[-232.29743958 34.96895218]
[-247.28199768 39.07763672]
[-262.80532837 39.49509811]
[-277.97201538 36.20140839]
[-291.90826416 29.39058113]
[-303.81219482 19.45914650]
[-312.99990845 6.98306274]
[-318.94485474 -7.31568336]
[-321.30804443 -22.61085510]
[-319.95730591 -38.01971054]
[-334.18533325 -42.76973343]
[-348.41339111 -47.51975250]
[-362.64144897 -52.26977158]
[-376.86947632 -57.01979065]
[-391.09753418 -61.76980972]
[-405.32556152 -66.51982880]
[-420.26290894 -60.66703796]
[-434.07943726 -68.82078552]
[-436.17626953 -84.72621918]
[-424.94488525 -96.18205261]
[-409.00109863 -94.40034485]
[-400.57556152 -80.74787903]
[-386.34750366 -75.99785614]
[-372.11947632 -71.24784088]
[-357.89141846 -66.49781799]
[-343.66336060 -61.74779892]
[-329.43533325 -56.99777985]
[-315.20727539 -52.24775696]
[-307.64663696 -64.59854126]
[-297.51251221 -74.95340729]
[-285.31484985 -82.78655243]
[-271.66836548 -87.69916534]
[-257.26181030 -89.43975830]
[-242.82304382 -87.91699219]
[-229.08230591 -83.20450592]
[-216.73529053 -75.53733063]
[-206.40792847 -65.30019379]
[-198.62464905 -53.00821304]
[-193.78175354 -39.28094864]
[-192.12721252 -24.81121635]
[-193.74801636 -10.33009243]
[-179.61849976 -5.29452419]
[-165.48899841 -0.25895673]
[-151.35948181 4.77661085]
[-138.14451599 -4.91769934]
[-121.58936310 -4.84498405]
[-108.19434357 5.16351652]
[-103.33630371 21.33662605]
[-89.10826111 26.08664513]
[-74.88021088 30.83666611]
[-60.65216827 35.58668518]
[-46.42411804 40.33670425]
[-32.19607162 45.08672714]
[-17.96802711 49.83674622]
[-10.58514977 48.96681213]
[-3.50298166 54.82832336]
[10.62652874 59.86389160]
[24.75603867 64.89945984]
[38.88554764 69.93502808]
[53.01506042 74.97059631]
[67.14456940 80.00616455]
[81.27407837 85.04173279]
[88.67297363 84.32064056]
[95.63567352 90.32357788]
[109.95648956 94.78612518]
[124.52061462 98.37586212]
[139.08474731 101.96559143]
[153.64886475 105.55532837]
[168.21299744 109.14506531]
[182.87890625 112.29328156]
[197.63319397 114.99710846]
[212.38749695 117.70093536]
[227.14179993 120.40475464]
[241.89610291 123.10858154]
[250.96018982 121.57344818]
[256.91897583 126.01827240]
[271.61584473 129.01866150]
[278.49566650 116.33863068]
[288.66461182 106.12847137]
[301.28875732 99.21275330]
[315.33633423 96.14641571]
[329.66220093 97.17020416]
[343.10113525 102.19181824]
[354.56253052 110.79415131]
[363.11904907 122.26990509]
[368.08154297 135.67976379]
[369.05459595 149.92926025]
[383.68804932 153.22499084]
[398.32153320 156.52072144]
[412.95498657 159.81645203]
[427.58843994 163.11218262]
[442.22189331 166.40791321]
[457.70901489 161.01518250]
[469.94430542 171.93441772]
[466.34115601 187.93283081]
[450.60620117 192.55264282]
[438.92617798 181.04136658]
[424.29272461 177.74563599]
[409.65924072 174.44990540]
[395.02578735 171.15417480]
[380.39233398 167.85845947]
[365.75888062 164.56272888]
[357.92373657 178.09471130]
[346.28204346 188.56285095]
[331.96121216 194.93724060]
[316.35317993 196.58526611]
[300.97891235 193.33428955]
[287.34045410 185.48965454]
[276.77389526 173.80612183]
[270.31872559 159.41517639]
[268.61544800 143.71551514]
[253.91859436 140.71513367]
[239.19227600 137.86288452]
[224.43797302 135.15905762]
[209.68367004 132.45523071]
[194.92936707 129.75140381]
[180.17507935 127.04757690]
[177.04570007 128.78678894]
[172.90480042 129.06266785]
[168.46539307 127.41055298]
[164.62326050 123.70919037]
[150.05914307 120.11945343]
[135.49501038 116.52972412]
[120.93087769 112.93998718]
[106.36675262 109.35025024]
[112.83811951 122.88248444]
[108.02131653 137.08805847]
] def
/pairs [
[4 92]
[5 90]
[6 89]
[7 88]
[8 87]
[9 86]
[10 85]
[11 84]
[12 82]
[13 81]
[14 80]
[15 79]
[16 78]
[17 77]
[18 76]
[23 72]
[24 71]
[25 70]
[26 69]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[93 153]
[94 152]
[95 151]
[96 150]
[97 149]
[98 145]
[99 144]
[100 143]
[101 142]
[102 141]
[104 140]
[105 139]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 92 1 gmark
5 90 3 gmark
6 cmark
7 88 3 gmark
88 cmark
8 87 2 gmark
9 86 2 gmark
9 cmark
86 cmark
10 85 3 gmark
10 cmark
11 84 1 gmark
84 cmark
12 82 1 gmark
12 cmark
82 cmark
81 cmark
15 79 3 gmark
15 cmark
16 78 2 gmark
17 77 2 gmark
18 76 3 gmark
23 72 2 gmark
23 cmark
72 cmark
24 71 2 gmark
24 cmark
71 cmark
25 cmark
26 69 1 gmark
26 cmark
69 cmark
42 52 3 gmark
42 cmark
43 51 2 gmark
93 cmark
153 cmark
94 cmark
152 cmark
95 151 3 gmark
96 cmark
150 cmark
97 149 2 gmark
97 cmark
149 cmark
145 cmark
144 cmark
100 143 2 gmark
100 cmark
143 cmark
101 142 1 gmark
142 cmark
141 cmark
104 140 3 gmark
105 139 2 gmark
115 130 1 gmark
116 129 2 gmark
117 128 3 gmark
119 126 3 gmark
120 125 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
