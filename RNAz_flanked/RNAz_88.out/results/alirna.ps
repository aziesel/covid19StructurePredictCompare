%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:42:35 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
_AGUGUUAAGA__UAUGGAU_AUCAUGUGUUGCAUUUUAUAACUCAUGCAUUUUCUGCUGAUGGAGUG______CAGUGUUACACACCACAUAAUCAAAUAUCGUAUACUAAUUUUUAUGCUAGUGGUUGUGUGCUUUCAUCUGAGUGUACUAUG\
) def
/coor [
[88.12480927 138.15193176]
[94.49501038 124.57346344]
[84.10414886 135.39151001]
[73.71327972 146.20953369]
[63.32241440 157.02757263]
[52.93154907 167.84561157]
[49.21451187 176.25382996]
[42.22084808 178.77421570]
[31.61424828 189.38081360]
[21.00764656 199.98741150]
[10.40104389 210.59400940]
[8.29503059 216.95901489]
[3.92452908 220.70382690]
[-0.85267937 221.40336609]
[-11.87776375 231.57427979]
[-22.90284920 241.74519348]
[-33.92793274 251.91610718]
[-44.95301819 262.08703613]
[-49.31257248 277.89608765]
[-65.24935913 281.76269531]
[-76.36898804 269.70922852]
[-71.23252869 254.13525391]
[-55.12393188 251.06193542]
[-44.09884644 240.89102173]
[-33.07376480 230.72010803]
[-22.04867935 220.54919434]
[-11.02359390 210.37828064]
[-0.20555763 199.98741150]
[10.40104389 189.38081360]
[21.00764656 178.77421570]
[31.61424828 168.16760254]
[42.11351395 157.45474243]
[52.50437927 146.63670349]
[62.89524460 135.81867981]
[73.28610992 125.00064087]
[83.67697144 114.18260193]
[69.37168884 118.69467163]
[57.04510117 127.24190521]
[42.12020493 128.74105835]
[28.33993721 122.81617737]
[19.16018295 110.95312500]
[16.88308334 96.12696838]
[22.07970047 82.05589294]
[33.44680405 72.26870728]
[48.13368988 69.21988678]
[62.45711899 73.67403412]
[72.82506561 84.51425171]
[85.93872070 91.79656982]
[77.92173004 79.11871338]
[69.90474701 66.44086456]
[61.88775635 53.76301193]
[53.87076950 41.08516312]
[44.73934937 29.18486214]
[34.56843185 18.15977669]
[24.39751816 7.13469267]
[14.22660351 -3.89039207]
[4.05568886 -14.91547680]
[-11.75336933 -19.27503204]
[-15.61998844 -35.21182251]
[-3.56652284 -46.33144379]
[12.00745583 -41.19498444]
[15.08077335 -25.08639145]
[25.25168800 -14.06130695]
[35.42260361 -3.03622246]
[45.59351730 7.98886204]
[55.76443481 19.01394653]
[55.16109467 4.02608538]
[62.63252258 -8.98074818]
[75.88328552 -16.01048660]
[90.84237671 -14.90339470]
[102.91393280 -5.99960279]
[108.38923645 7.96539259]
[105.58610535 22.70114899]
[95.36576080 33.68041992]
[80.86816406 37.53006744]
[66.54862213 33.06817245]
[74.56560516 45.74602509]
[82.58259583 58.42387772]
[90.59958649 71.10173035]
[98.61656952 83.77957916]
[112.89172363 88.38609314]
[126.80701447 82.78567505]
[140.72230530 77.18524933]
[154.63758850 71.58483124]
[168.55288696 65.98440552]
[182.41107178 60.24415588]
[196.21076965 54.36465836]
[210.01045227 48.48515701]
[223.81015015 42.60565948]
[237.60984802 36.72616196]
[234.27630615 22.05894089]
[233.61549377 7.03219509]
[235.64862061 -7.87102985]
[240.31036377 -22.17165756]
[247.45085144 -35.40998077]
[256.84054565 -47.16044235]
[268.17761230 -57.04531479]
[281.09762573 -64.74684143]
[295.18521118 -70.01744080]
[309.98757935 -72.68769836]
[325.02883911 -72.67176819]
[339.82550049 -69.97016907]
[353.90188599 -64.66973877]
[366.80554199 -56.94086456]
[378.12164307 -47.03200150]
[387.48645020 -35.26167679]
[394.59887695 -22.00825882]
[399.23031616 -7.69779062]
[401.23187256 7.20970774]
[400.53924561 22.23501968]
[397.17465210 36.89514542]
[391.24624634 50.71882248]
[382.94467163 63.26167679]
[372.53671265 74.12050629]
[360.35696411 82.94624329]
[346.79696655 89.45517731]
[332.29260254 93.43807983]
[317.31015015 94.76690674]
[302.33120728 93.39894867]
[287.83731079 89.37817383]
[274.29437256 82.83384705]
[262.13772583 73.97632599]
[251.75814819 63.09034729]
[243.48933411 50.52585220]
[229.68965149 56.40534973]
[215.88995361 62.28485107]
[202.09027100 68.16435242]
[188.29057312 74.04384613]
[183.34127808 79.59075928]
[174.15330505 79.89969635]
[160.23800659 85.50012207]
[146.32272339 91.10054016]
[132.40744019 96.70096588]
[118.49214935 102.30138397]
[132.50874329 96.95957947]
[147.39297485 95.09954071]
[162.29309082 96.82770538]
[176.35644531 102.04517365]
[188.77827454 110.45339203]
[198.84774780 121.57120514]
[205.98864746 134.76239014]
[209.79234314 149.27210999]
[210.04116821 164.27005005]
[206.72087097 178.89796448]
[200.02148438 192.31877136]
[190.32633972 203.76448059]
[178.19026184 212.58012390]
[164.30772400 218.26123047]
[149.47312927 220.48271179]
[134.53540039 219.11743164]
[120.34931183 214.24351501]
[107.72666931 206.13987732]
[97.38979340 195.27024841]
[89.93019104 182.25662231]
[85.77474976 167.84370422]
] def
/pairs [
[2 36]
[3 35]
[4 34]
[5 33]
[6 32]
[8 31]
[9 30]
[10 29]
[11 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[48 80]
[49 79]
[50 78]
[51 77]
[52 76]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 36 2 gmark
35 cmark
4 cmark
34 cmark
5 33 3 gmark
6 cmark
32 cmark
8 31 1 gmark
8 cmark
9 30 3 gmark
10 29 3 gmark
10 cmark
29 cmark
11 cmark
14 cmark
27 cmark
15 26 2 gmark
16 cmark
25 cmark
17 cmark
24 cmark
18 23 1 gmark
18 cmark
23 cmark
48 80 1 gmark
80 cmark
49 cmark
50 78 1 gmark
51 77 1 gmark
51 cmark
77 cmark
52 76 1 gmark
52 cmark
76 cmark
53 66 1 gmark
66 cmark
54 65 1 gmark
54 cmark
65 cmark
55 64 2 gmark
63 cmark
57 62 1 gmark
57 cmark
81 134 3 gmark
83 cmark
84 131 2 gmark
86 cmark
128 cmark
87 127 2 gmark
89 125 2 gmark
90 124 2 gmark

% End Annotations
% show it
showpage
end
%%EOF
