%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:03:19 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCGUAGUAUGUUUGUUUAUGUUAUCAAGAUG_AUUAUUCUGUGGCUUAUGUGGCCACUGACUAUAACCUUAACUAUUUUCAAUUGCGUAUACGCAUUGAAUAAUGUGUAUCUUGGAUUUUCUAUAGUUUUUACUAUAGUGGCCAUUAUUAUGUG\
) def
/coor [
[239.54240417 201.79020691]
[239.33642578 184.61958313]
[242.59873962 167.75553894]
[228.68344116 162.15510559]
[214.76815796 156.55468750]
[200.85285950 150.95426941]
[193.43093872 151.37684631]
[186.71559143 145.09841919]
[172.91590881 139.21891785]
[159.11621094 133.33941650]
[145.31651306 127.45992279]
[131.51683044 121.58042145]
[120.87101746 131.99102783]
[107.05364990 137.54025269]
[92.16439819 137.38487244]
[78.46585083 131.54846191]
[68.03964233 120.91794586]
[62.47013092 107.10872650]
[62.60367203 92.21926880]
[48.80398178 86.33976746]
[35.00428772 80.46027374]
[21.20459747 74.58077240]
[6.69205093 80.23972321]
[-7.21904325 74.08049774]
[-12.52455235 60.21012497]
[-26.32424355 54.33062363]
[-40.12393570 48.45112610]
[-53.92362595 42.57162857]
[-67.72332001 36.69212723]
[-81.52301025 30.81262970]
[-95.32270050 24.93313026]
[-109.12239075 19.05363083]
[-118.30229187 18.55973244]
[-123.13887787 12.91428566]
[-136.81738281 6.75809383]
[-147.30554199 16.27652931]
[-160.59281921 21.05394363]
[-174.65412903 20.39744568]
[-187.35990906 14.43963528]
[-196.79849243 4.11348629]
[-201.56381226 -8.99360180]
[-200.96478271 -22.88377571]
[-214.51654053 -29.31416512]
[-228.06829834 -35.74455261]
[-241.62005615 -42.17494202]
[-255.17181396 -48.60533142]
[-268.72357178 -55.03571701]
[-284.25747681 -51.02609634]
[-296.99041748 -60.78578949]
[-297.15478516 -76.82800293]
[-284.62445068 -86.84651947]
[-269.01165771 -83.15599060]
[-262.29318237 -68.58747101]
[-248.74142456 -62.15708542]
[-235.18966675 -55.72669601]
[-221.63790894 -49.29631042]
[-208.08615112 -42.86592102]
[-194.53440857 -36.43553162]
[-182.31822205 -46.69576645]
[-166.79748535 -50.62902832]
[-151.05545044 -47.40180969]
[-138.24206543 -37.60826492]
[-130.94371033 -23.16158295]
[-130.66117859 -6.92040396]
[-116.98268890 -0.76421183]
[-103.24289703 5.25393867]
[-89.44320679 11.13343811]
[-75.64350891 17.01293755]
[-61.84381866 22.89243698]
[-48.04412842 28.77193451]
[-34.24443817 34.65143585]
[-20.44474602 40.53093338]
[-6.64505386 46.41043472]
[7.03354692 40.62843704]
[21.11215210 46.39450455]
[27.08409691 60.78108215]
[40.88378906 66.66058350]
[54.68347931 72.54007721]
[68.48316956 78.41957855]
[79.12898254 68.00897980]
[92.94635010 62.45973969]
[107.83560181 62.61513138]
[121.53414917 68.45153809]
[131.96035767 79.08205414]
[137.52986145 92.89127350]
[137.39633179 107.78073120]
[151.19601440 113.66023254]
[164.99571228 119.53972626]
[178.79539490 125.41922760]
[192.59509277 131.29872131]
[206.45329285 137.03897095]
[220.36857605 142.63940430]
[234.28385925 148.23982239]
[248.19915771 153.84024048]
[255.01925659 142.70751953]
[263.46707153 132.75668335]
[273.34140015 124.22349548]
[284.40728760 117.30997467]
[296.40158081 112.17958832]
[309.03918457 108.95343018]
[322.01983643 107.70734406]
[335.03527832 108.47012329]
[347.77651978 111.22287750]
[359.94119263 115.89946747]
[371.24075317 122.38813019]
[381.40731812 130.53411865]
[390.19998169 140.14341736]
[397.41058350 150.98731995]
[402.86853027 162.80792236]
[406.44500732 175.32424927]
[408.05578613 188.23889160]
[407.66345215 201.24511719]
[405.27807617 214.03414917]
[400.95709229 226.30247498]
[414.09585571 233.53936768]
[427.23464966 240.77626038]
[440.37341309 248.01315308]
[453.51220703 255.25004578]
[463.83740234 251.60661316]
[474.24179077 254.22532654]
[481.31515503 261.99691772]
[482.87847900 272.16574097]
[495.71517944 279.92581177]
[508.55191040 287.68588257]
[521.38861084 295.44592285]
[534.22534180 303.20599365]
[547.06207275 310.96606445]
[559.89880371 318.72613525]
[576.29656982 318.51519775]
[584.44445801 332.74703979]
[575.96051025 346.78109741]
[559.57238770 346.18038940]
[552.13873291 331.56286621]
[539.30200195 323.80279541]
[526.46527100 316.04272461]
[513.62854004 308.28265381]
[500.79183960 300.52258301]
[487.95510864 292.76251221]
[475.11840820 285.00244141]
[455.84619141 286.08743286]
[446.27529907 268.38882446]
[433.13653564 261.15191650]
[419.99774170 253.91502380]
[406.85897827 246.67814636]
[393.72021484 239.44125366]
[382.79223633 252.61209106]
[369.42861938 263.31118774]
[354.17745972 271.09732056]
[337.66470337 275.64871216]
[320.56851196 276.77639771]
[303.59143066 274.43212891]
[287.43151855 268.71032715]
[272.75363159 259.84429932]
[260.16201782 248.19683838]
[250.17556763 234.24520874]
] def
/pairs [
[3 94]
[4 93]
[5 92]
[6 91]
[8 90]
[9 89]
[10 88]
[11 87]
[12 86]
[19 79]
[20 78]
[21 77]
[22 76]
[25 73]
[26 72]
[27 71]
[28 70]
[29 69]
[30 68]
[31 67]
[32 66]
[34 65]
[35 64]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[114 145]
[115 144]
[116 143]
[117 142]
[118 141]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 94 2 gmark
93 cmark
5 92 3 gmark
6 91 1 gmark
8 90 2 gmark
8 cmark
90 cmark
10 88 3 gmark
11 cmark
87 cmark
12 86 2 gmark
19 79 1 gmark
19 cmark
20 78 3 gmark
20 cmark
78 cmark
21 77 1 gmark
21 cmark
76 cmark
25 73 2 gmark
73 cmark
26 72 3 gmark
26 cmark
72 cmark
27 71 1 gmark
27 cmark
71 cmark
28 70 1 gmark
29 69 1 gmark
29 cmark
69 cmark
30 68 2 gmark
30 cmark
68 cmark
67 cmark
32 66 2 gmark
32 cmark
66 cmark
34 65 1 gmark
34 cmark
35 64 1 gmark
42 58 2 gmark
42 cmark
58 cmark
43 57 2 gmark
57 cmark
46 cmark
145 cmark
115 144 2 gmark
144 cmark
116 143 1 gmark
143 cmark
117 142 2 gmark
117 cmark
142 cmark
118 141 2 gmark
118 cmark
141 cmark
122 139 3 gmark
123 138 3 gmark
124 137 2 gmark
125 136 2 gmark
126 135 3 gmark
128 cmark
133 cmark

% End Annotations
% show it
showpage
end
%%EOF
