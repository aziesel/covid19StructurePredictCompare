%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:47:53 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UACUUAAUAAAGCUUAAACGUGCUUUUGGUGAUUACACCAGUGUUGUUGUUGUUAAUGUAAUUGUGUGGUGUAUAAAUUUUAUGAUGCUUUUUGUGUUUCAAGUUUACCCCAUACUUUCUUGUGUAUAUGCUAUUUUUUAU\
) def
/coor [
[86.24058533 380.41152954]
[71.84505463 375.83493042]
[59.32280350 367.38687134]
[49.68894577 355.75219727]
[43.72446060 341.87408447]
[41.91285706 326.87759399]
[44.40100098 311.97842407]
[50.98718262 298.38433838]
[61.13749313 287.19738770]
[74.02909088 279.32443237]
[88.61692047 275.40371704]
[88.94874573 260.40737915]
[89.28057861 245.41105652]
[81.82672882 232.51573181]
[89.86742401 218.89010620]
[90.19925690 203.89376831]
[90.53108215 188.89744568]
[90.86291504 173.90112305]
[91.19474792 158.90478516]
[79.86894226 156.62524414]
[69.09753418 152.16957092]
[59.29822159 145.66749573]
[50.85913467 137.32876587]
[44.12353134 127.43662262]
[39.37594223 116.33818054]
[36.83030701 104.43236542]
[21.88900375 105.75806427]
[6.94770098 107.08377075]
[-7.99360132 108.40946960]
[-22.93490410 109.73516846]
[-37.87620544 111.06087494]
[-50.97982407 120.92126465]
[-65.96302795 114.25526428]
[-67.41239166 97.92028809]
[-53.83692169 88.72035980]
[-39.20190811 96.11956787]
[-24.26060486 94.79386902]
[-9.31930256 93.46817017]
[5.62199974 92.14246368]
[20.56330109 90.81676483]
[35.50460434 89.49106598]
[39.60015869 75.06101227]
[27.58300781 66.08392334]
[15.56585598 57.10684204]
[3.54870343 48.12975693]
[-8.46844864 39.15267181]
[-23.64795303 42.90988922]
[-37.66840363 35.98449707]
[-43.90976715 21.64645958]
[-39.42507172 6.66575575]
[-26.33184624 -1.88418341]
[-10.81231308 0.03366202]
[-0.19432271 11.51374435]
[0.50863576 27.13551903]
[12.52578831 36.11260605]
[24.54294014 45.08968735]
[36.56009293 54.06677246]
[48.57724380 63.04385757]
[60.85390854 51.02505875]
[75.77227783 42.85393906]
[92.17745972 39.05786514]
[108.82734680 39.82955170]
[124.48660278 45.01938629]
[138.01832581 54.15337753]
[148.97102356 43.90453720]
[159.92370605 33.65570068]
[170.87638855 23.40686417]
[181.82907104 13.15802670]
[192.78175354 2.90918922]
[192.51948547 -8.06415176]
[198.26051331 -17.15974998]
[207.87677002 -21.46332169]
[218.04940796 -19.75696182]
[229.44470215 -29.51129341]
[240.84001160 -39.26562500]
[252.23532104 -49.01995850]
[263.63061523 -58.77429199]
[275.02593994 -68.52862549]
[286.42123413 -78.28295135]
[297.81655884 -88.03728485]
[297.31307983 -101.54420471]
[304.59609985 -112.69823456]
[316.80218506 -117.52597809]
[329.36541748 -114.46372223]
[340.97372437 -123.96357727]
[352.58203125 -133.46343994]
[364.19033813 -142.96328735]
[375.79864502 -152.46315002]
[378.81753540 -168.21960449]
[393.08514404 -175.55546570]
[407.65655518 -168.84330750]
[411.35385132 -153.23210144]
[401.34075928 -140.69744873]
[385.29849243 -140.85484314]
[373.69018555 -131.35499573]
[362.08187866 -121.85513306]
[350.47357178 -112.35527802]
[338.86526489 -102.85541534]
[337.93579102 -86.09908295]
[324.94433594 -74.95118713]
[307.57086182 -76.64198303]
[296.17556763 -66.88764954]
[284.78027344 -57.13331604]
[273.38494873 -47.37898254]
[261.98965454 -37.62465286]
[250.59434509 -27.87031937]
[239.19903564 -18.11598778]
[227.80372620 -8.36165619]
[222.81372070 10.27164841]
[203.03059387 13.86187553]
[192.07791138 24.11071205]
[181.12522888 34.35955048]
[170.17254639 44.60838699]
[159.21984863 54.85722351]
[148.26716614 65.10606384]
[155.00869751 77.16690826]
[158.78970337 90.45661163]
[159.40672302 104.25992584]
[156.82653809 117.83397675]
[151.18800354 130.44822693]
[142.79458618 141.42376709]
[132.09802246 150.16995239]
[119.67396545 156.21601868]
[106.19107819 159.23661804]
[105.85924530 174.23294067]
[105.52741241 189.22927856]
[105.19558716 204.22560120]
[104.86375427 219.22193909]
[112.29386902 233.18989563]
[104.27690887 245.74288940]
[103.94507599 260.73922729]
[103.61325073 275.73553467]
[118.01336670 280.29769897]
[130.54409790 288.73318481]
[140.18963623 300.35815430]
[146.16806030 314.23025513]
[147.99473572 329.22491455]
[145.52156067 344.12661743]
[138.94903564 357.72729492]
[128.80996704 368.92443848]
[115.92628479 376.81033325]
] def
/pairs [
[11 132]
[12 131]
[13 130]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 132 1 gmark
11 cmark
12 131 2 gmark
13 130 2 gmark
15 128 1 gmark
17 126 3 gmark
17 cmark
126 cmark
18 cmark
19 124 2 gmark
41 cmark
27 40 2 gmark
39 cmark
29 38 2 gmark
30 37 1 gmark
36 cmark
58 cmark
43 cmark
57 cmark
45 55 1 gmark
46 54 1 gmark
54 cmark
64 115 2 gmark
115 cmark
65 114 3 gmark
66 113 1 gmark
66 cmark
113 cmark
67 112 2 gmark
68 111 1 gmark
68 cmark
111 cmark
69 110 1 gmark
69 cmark
110 cmark
73 108 2 gmark
73 cmark
108 cmark
75 106 1 gmark
75 cmark
76 105 2 gmark
77 104 2 gmark
78 103 1 gmark
102 cmark
80 101 2 gmark
84 98 3 gmark
85 97 2 gmark
86 96 1 gmark
96 cmark
87 cmark
88 94 2 gmark

% End Annotations
% show it
showpage
end
%%EOF
