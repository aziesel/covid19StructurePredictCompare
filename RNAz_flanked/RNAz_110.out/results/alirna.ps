%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:04:37 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGUUACAAUCAAAACGCAAAAGAAUAAUUAAAGGCACACAUCAUUGGA_______UACUGGCUUCAACUCACUUGUUGUGUUGGAUCAUAG_AACACAUGGGAAAUGGACUAUGUUUAUGUAUGAAAAUACCUAUA\
) def
/coor [
[143.92437744 528.76660156]
[141.52691650 513.95941162]
[139.12945557 499.15228271]
[136.73199463 484.34509277]
[134.33453369 469.53793335]
[131.93707275 454.73077393]
[129.53961182 439.92361450]
[126.82138824 437.54913330]
[125.16065979 433.70254517]
[125.25372314 428.91589355]
[127.52300262 424.01922607]
[126.14905548 409.08230591]
[124.77510071 394.14535522]
[123.40115356 379.20840454]
[110.52690125 371.76586914]
[104.43167877 358.00677490]
[107.64461517 343.12286377]
[119.13844299 332.86627197]
[117.76448822 317.92932129]
[116.39054108 302.99237061]
[115.01658630 288.05541992]
[113.64263153 273.11849976]
[112.26868439 258.18154907]
[110.89472961 243.24459839]
[109.52078247 228.30766296]
[108.14682770 213.37071228]
[106.77288055 198.43377686]
[105.39892578 183.49682617]
[103.51210022 168.61598206]
[101.11463928 153.80880737]
[98.71717834 139.00164795]
[96.31970978 124.19447327]
[93.92224884 109.38731384]
[91.35517120 94.60860443]
[88.61882019 79.86030579]
[85.88246918 65.11199951]
[78.06408691 61.66742706]
[72.34786987 55.44575500]
[69.63796234 47.54319000]
[70.31771088 39.31155396]
[74.19734192 32.12711716]
[80.55849457 27.16052437]
[79.18454742 12.22358227]
[77.81059265 -2.71336007]
[76.43664551 -17.65030289]
[75.06269073 -32.58724594]
[73.68874359 -47.52418900]
[65.78672791 -34.77435684]
[53.50017929 -26.16966438]
[38.81713104 -23.10239983]
[24.11338806 -26.06886673]
[11.76810074 -34.58906937]
[3.77881050 -47.28439331]
[1.43823063 -62.10065842]
[5.12508154 -76.64050293]
[14.24280834 -88.55130005]
[27.31611061 -95.90580750]
[42.22964859 -97.51402283]
[56.57032776 -93.11573029]
[68.01773834 -83.42259979]
[74.72029114 -70.00052643]
[77.45664215 -84.74883270]
[68.77584076 -97.68256378]
[71.76098633 -112.60045624]
[84.14482117 -120.79656982]
[86.88117218 -135.54487610]
[89.61752319 -150.29316711]
[77.88847351 -160.20906067]
[72.70386505 -174.66642761]
[75.45834351 -189.77630615]
[85.41094971 -201.47422791]
[99.88449860 -206.61347961]
[114.98567200 -203.81166077]
[126.65232849 -193.82243347]
[131.74620056 -179.33283997]
[128.89704895 -164.24053955]
[118.87129974 -152.60523987]
[104.36582184 -147.55682373]
[101.62947083 -132.80851746]
[98.89311981 -118.06021881]
[107.51258087 -105.96722412]
[104.94762421 -90.97136688]
[92.20494080 -82.01248169]
[89.46858978 -67.26417542]
[92.88891602 -58.54814148]
[88.62568665 -48.89813995]
[89.99963379 -33.96119690]
[91.37358856 -19.02425385]
[92.74753571 -4.08731174]
[94.12149048 10.84963131]
[95.49543762 25.78657341]
[109.80596161 41.98141861]
[100.63076782 62.37565231]
[103.36712646 77.12395477]
[106.10347748 91.87225342]
[110.58937836 98.66127014]
[108.72941589 106.98984528]
[111.12687683 121.79701233]
[113.52434540 136.60417175]
[115.92180634 151.41134644]
[118.31926727 166.21850586]
[121.73883820 170.39382935]
[123.02359772 175.00579834]
[122.37545013 179.14514160]
[120.33586884 182.12287903]
[121.70981598 197.05982971]
[123.08377075 211.99676514]
[124.45772552 226.93370056]
[125.83167267 241.87065125]
[127.20562744 256.80758667]
[128.57957458 271.74453735]
[129.95352173 286.68148804]
[131.32748413 301.61840820]
[132.70143127 316.55535889]
[134.07537842 331.49230957]
[147.24739075 339.48007202]
[153.12158203 353.52810669]
[149.63862610 368.16821289]
[138.33808899 377.83447266]
[139.71205139 392.77139282]
[141.08599854 407.70834351]
[142.45994568 422.64529419]
[144.34677124 437.52615356]
[146.74423218 452.33331299]
[149.14169312 467.14047241]
[151.53915405 481.94763184]
[153.93663025 496.75482178]
[156.33409119 511.56198120]
[158.73155212 526.36914062]
[172.64172363 533.24566650]
[179.82351685 547.00073242]
[177.51541138 562.34521484]
[166.60490417 573.37878418]
[151.28730774 575.85888672]
[137.45256042 568.83184814]
[130.42039490 554.99969482]
] def
/pairs [
[1 129]
[2 128]
[3 127]
[4 126]
[5 125]
[6 124]
[7 123]
[11 122]
[12 121]
[13 120]
[14 119]
[18 115]
[19 114]
[20 113]
[21 112]
[22 111]
[23 110]
[24 109]
[25 108]
[26 107]
[27 106]
[28 105]
[29 101]
[30 100]
[31 99]
[32 98]
[33 97]
[34 95]
[35 94]
[36 93]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[47 86]
[61 84]
[62 83]
[65 80]
[66 79]
[67 78]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 129 3 gmark
2 128 1 gmark
2 cmark
128 cmark
3 127 1 gmark
4 126 1 gmark
126 cmark
5 125 3 gmark
7 123 1 gmark
11 122 3 gmark
12 cmark
13 120 3 gmark
13 cmark
120 cmark
14 cmark
19 114 1 gmark
19 cmark
114 cmark
20 113 2 gmark
20 cmark
21 112 3 gmark
22 cmark
111 cmark
23 110 3 gmark
24 109 1 gmark
24 cmark
109 cmark
25 cmark
26 107 3 gmark
26 cmark
107 cmark
27 106 1 gmark
27 cmark
106 cmark
28 105 2 gmark
29 101 2 gmark
29 cmark
101 cmark
30 100 3 gmark
31 99 3 gmark
32 98 3 gmark
97 cmark
35 94 2 gmark
35 cmark
94 cmark
36 93 3 gmark
42 91 1 gmark
42 cmark
91 cmark
43 90 3 gmark
90 cmark
44 89 3 gmark
44 cmark
89 cmark
46 87 2 gmark
87 cmark
86 cmark
61 cmark
84 cmark
62 83 1 gmark
62 cmark
83 cmark
65 cmark
80 cmark
66 cmark
79 cmark
67 78 2 gmark
67 cmark
78 cmark

% End Annotations
% show it
showpage
end
%%EOF
