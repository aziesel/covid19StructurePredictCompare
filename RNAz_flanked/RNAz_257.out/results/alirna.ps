%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:00:01 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
A__CUGGUGUUGAACAUG_UUACCUUCUUCAUCUACAAUAA_AAUUGUUGAUGAGCCUGAAGAACAUGUCCAAAUUCACACAAUCGACGGUUCAUCCGGAGUUGUUAAUCCAGCAAUGGAACCAAUUUAUGAUGAACCGACGACGACUACUAG\
) def
/coor [
[81.37993622 237.03799438]
[65.01148987 236.03498840]
[57.93905258 221.23928833]
[67.43814087 207.87144470]
[68.35556030 192.89952087]
[69.27298737 177.92761230]
[70.19041443 162.95568848]
[71.10784149 147.98376465]
[72.02526093 133.01185608]
[62.43563843 121.47759247]
[47.54786301 119.64617920]
[32.66008377 117.81476593]
[18.01847649 123.80925751]
[6.33110476 114.57591248]
[-8.55667305 112.74449921]
[-23.44445038 110.91308594]
[-38.33222961 109.08167267]
[-53.22000504 107.25025940]
[-62.18104935 109.31617737]
[-68.39163971 105.22663116]
[-83.23896027 103.09190369]
[-91.33407593 116.95090485]
[-104.08962250 126.62902832]
[-119.54219055 130.67355347]
[-135.32734680 128.49604797]
[-149.04142761 120.45784760]
[-158.60752869 107.81042480]
[-162.59004211 92.50065613]
[-177.47781372 90.66924286]
[-192.36558533 88.83782959]
[-207.25337219 87.00640869]
[-222.14114380 85.17499542]
[-237.02893066 83.34358215]
[-251.67053223 89.33807373]
[-263.35791016 80.10472870]
[-278.24569702 78.27331543]
[-293.13345337 76.44190216]
[-308.02124023 74.61048889]
[-322.90902710 72.77907562]
[-337.78643799 79.67794037]
[-351.04223633 70.02311707]
[-349.04000854 53.74666214]
[-333.83944702 47.59239197]
[-321.07760620 57.89129639]
[-306.18981934 59.72270966]
[-291.30203247 61.55412674]
[-276.41427612 63.38554001]
[-261.52648926 65.21695709]
[-247.94975281 59.09146881]
[-235.19750977 68.45580292]
[-220.30973816 70.28721619]
[-205.42195129 72.11863708]
[-190.53417969 73.95005035]
[-175.64640808 75.78146362]
[-160.75862122 77.61287689]
[-154.29725647 65.12082672]
[-143.93125916 55.57152939]
[-130.89686584 50.13166046]
[-116.75814056 49.47614670]
[-103.21920776 53.70447922]
[-91.91895294 62.32626724]
[-84.23255920 74.31801605]
[-81.10423279 88.24458313]
[-66.25691223 90.37930298]
[-51.38859177 92.36248016]
[-36.50081253 94.19389343]
[-21.61303520 96.02530670]
[-6.72525835 97.85671997]
[8.16251945 99.68814087]
[21.73925209 93.56265259]
[34.49149704 102.92698669]
[49.37927628 104.75839996]
[64.26705170 106.58981323]
[64.23434448 96.74823761]
[66.83083344 87.37442017]
[71.80372620 79.14887238]
[78.73020172 72.65129089]
[87.05271912 68.31975555]
[96.12362671 66.42152405]
[105.25546265 67.03718567]
[113.77299500 70.05912781]
[121.06317902 75.20415497]
[126.61923981 82.03878784]
[130.07572937 90.01532745]
[145.02581787 88.79268646]
[159.97590637 87.57004547]
[173.09948730 78.73365021]
[186.41508484 85.40781403]
[201.36517334 84.18517303]
[216.31526184 82.96253967]
[231.26535034 81.73989868]
[246.21543884 80.51725769]
[261.16552734 79.29461670]
[276.11560059 78.07197571]
[291.06570435 76.84934235]
[306.01577759 75.62670135]
[320.96588135 74.40406036]
[334.08947754 65.56766510]
[347.40505981 72.24182892]
[362.35513306 71.01918793]
[377.30523682 69.79654694]
[392.25531006 68.57391357]
[407.20541382 67.35127258]
[422.15548706 66.12863159]
[427.97860718 55.68170547]
[438.03414917 49.43101120]
[449.73916626 48.84487152]
[460.15289307 53.95385742]
[466.71539307 63.37224197]
[481.70291138 62.76041412]
[496.69042969 62.14858246]
[511.67794800 61.53675461]
[525.23675537 52.31233215]
[539.88513184 59.68510818]
[540.55401611 76.07061005]
[526.55535889 84.61283112]
[512.28979492 76.52426910]
[497.30224609 77.13610077]
[482.31472778 77.74793243]
[467.32720947 78.35975647]
[455.81359863 92.53553772]
[437.28198242 93.87772369]
[423.37814331 81.07872009]
[408.42803955 82.30136108]
[393.47796631 83.52400208]
[378.52786255 84.74663544]
[363.57778931 85.96927643]
[348.62768555 87.19191742]
[336.57342529 95.94086456]
[322.18850708 89.35414886]
[307.23843384 90.57678986]
[292.28833008 91.79943085]
[277.33825684 93.02206421]
[262.38815308 94.24470520]
[247.43807983 95.46734619]
[232.48799133 96.68998718]
[217.53790283 97.91262817]
[202.58781433 99.13526154]
[187.63771057 100.35790253]
[175.58345032 109.10684967]
[161.19854736 102.52013397]
[146.24845886 103.74277496]
[131.29837036 104.96541595]
[128.41653442 116.01547241]
[121.65555573 125.62245941]
[111.68611908 132.43629456]
[99.64299774 135.40457153]
[86.99718475 133.92927551]
[86.07975769 148.90119934]
[85.16233063 163.87310791]
[84.24490356 178.84503174]
[83.32748413 193.81695557]
[82.41005707 208.78886414]
] def
/pairs [
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 73]
[11 72]
[12 71]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[20 64]
[21 63]
[28 55]
[29 54]
[30 53]
[31 52]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[84 143]
[85 142]
[86 141]
[88 139]
[89 138]
[90 137]
[91 136]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[99 128]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[109 120]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 153 1 gmark
6 cmark
8 149 1 gmark
9 cmark
148 cmark
71 cmark
14 69 1 gmark
15 68 2 gmark
16 67 1 gmark
18 65 2 gmark
20 64 1 gmark
21 63 1 gmark
28 55 1 gmark
28 cmark
55 cmark
29 cmark
54 cmark
30 cmark
53 cmark
31 52 1 gmark
31 cmark
52 cmark
33 50 1 gmark
33 cmark
50 cmark
35 48 2 gmark
36 47 1 gmark
36 cmark
37 46 1 gmark
38 cmark
45 cmark
39 44 1 gmark
39 cmark
44 cmark
84 cmark
143 cmark
85 142 1 gmark
86 141 1 gmark
88 cmark
139 cmark
89 138 1 gmark
90 137 1 gmark
91 136 1 gmark
91 cmark
136 cmark
93 134 1 gmark
94 133 1 gmark
96 cmark
131 cmark
97 130 2 gmark
97 cmark
130 cmark
99 128 1 gmark
100 127 1 gmark
103 124 1 gmark
104 123 1 gmark
120 cmark
110 119 1 gmark
111 cmark
118 cmark
112 cmark
117 cmark

% End Annotations
% show it
showpage
end
%%EOF
