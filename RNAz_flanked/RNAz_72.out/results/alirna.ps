%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:28:53 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGUUUUGU_AACUAUUUGUGAUCU__CUAUUCCA_UCUAGGAUGUGGGUUUUAAAAAUCAGUA_UUGUAAUGGAAGUAUU__GUAUGUCAAUUCUGCUUACCAGGAUUUGAUAUGUUAGAUAA_UAU_AAGC_AU_GAUGUUGUACAGUACGAAGUUGAUAGGAGU\
) def
/coor [
[111.39721680 133.56373596]
[106.97588348 147.89732361]
[102.55455780 162.23091125]
[98.13323212 176.56451416]
[106.76876068 189.60144043]
[104.95262909 205.13320923]
[93.54235077 215.82617188]
[77.92552185 216.63145447]
[65.47591400 207.16882324]
[62.07186890 191.90625000]
[69.32066345 178.05023193]
[83.79963684 172.14318848]
[88.22097015 157.80958557]
[92.64229584 143.47599792]
[97.06362152 129.14241028]
[93.55910492 122.51154327]
[85.57870483 135.21244812]
[70.58918762 134.65176392]
[63.57991409 121.39016724]
[71.56008148 108.68910980]
[86.55007935 109.24980927]
[83.04556274 102.61894226]
[68.71196747 98.19761658]
[54.37837982 93.77629089]
[40.04478836 89.35496521]
[33.45847702 90.46284485]
[28.12012100 88.36562347]
[25.26351547 84.49104309]
[11.10526657 79.53685760]
[-3.05298352 74.58267212]
[-17.21123314 69.62848663]
[-31.36948395 64.67430115]
[-45.52773285 59.72011185]
[-59.68598175 54.76592636]
[-73.84423065 49.81174088]
[-80.24740601 59.06600571]
[-88.56072235 66.63620758]
[-98.35513306 72.13768005]
[-109.12648773 75.29235077]
[-120.32152557 75.94282532]
[-131.36624146 74.06021881]
[-141.69534302 69.74540710]
[-150.78118896 63.22362518]
[-158.16075134 54.83273697]
[-163.45916748 45.00570679]
[-166.40881348 34.24828339]
[-166.86280823 23.11294937]
[-164.80236816 12.17057133]
[-178.31690979 5.66231489]
[-191.83143616 -0.84594119]
[-205.34596252 -7.35419750]
[-218.86050415 -13.86245346]
[-235.75447083 -15.28723145]
[-239.06208801 -31.91539955]
[-223.99940491 -39.69689178]
[-212.35224915 -27.37698555]
[-198.83770752 -20.86873055]
[-185.32318115 -14.36047459]
[-171.80863953 -7.85221815]
[-158.29411316 -1.34396207]
[-144.74195862 -14.70783520]
[-127.10283661 -21.94057083]
[-108.00700378 -21.93787003]
[-90.31177521 -14.67628098]
[-76.67391205 -1.22027755]
[-69.15079498 16.43371201]
[-68.89004517 35.65349197]
[-54.73179626 40.60767746]
[-40.57354736 45.56186295]
[-26.41529846 50.51604843]
[-12.25704765 55.47023392]
[1.90120232 60.42441940]
[16.05945206 65.37860870]
[30.21770287 70.33279419]
[44.46611404 75.02136993]
[58.79970551 79.44269562]
[73.13330078 83.86402130]
[87.46688843 88.28535461]
[76.36956024 78.19331360]
[76.33565521 63.19335556]
[87.38726044 53.05126190]
[102.32917023 54.37009430]
[111.43338776 66.29122162]
[108.77281952 81.05296326]
[117.45288849 68.81954956]
[126.13295746 56.58613968]
[134.81303406 44.35272598]
[143.49310303 32.11931229]
[152.17317200 19.88589859]
[145.12673950 4.94978523]
[146.55374146 -11.40917110]
[155.97167969 -24.74648857]
[170.73997498 -31.48638344]
[186.79968262 -29.88024330]
[195.24949646 -42.27382660]
[203.69929504 -54.66740799]
[212.14909363 -67.06098938]
[210.59130859 -83.02823639]
[222.20362854 -94.09772491]
[238.07806396 -91.77789307]
[246.03712463 -77.84832001]
[239.97528076 -62.99457932]
[224.54267883 -58.61118698]
[216.09286499 -46.21760559]
[207.64306641 -33.82402420]
[199.19326782 -21.43044281]
[205.92449951 -9.52184486]
[206.86373901 4.19160700]
[201.77015686 17.02990913]
[191.58749390 26.45935440]
[178.26980591 30.59254265]
[164.40658569 28.56596947]
[155.72651672 40.79938126]
[147.04643250 53.03279495]
[138.36636353 65.26620483]
[129.68629456 77.49961853]
[121.00623322 89.73303223]
[134.48872375 83.15865326]
[143.22023010 70.96189117]
[153.29458618 59.84851837]
[164.57852173 49.96556473]
[176.92272949 41.44379807]
[190.16387939 34.39596558]
[204.12678528 28.91532135]
[218.62669373 25.07437897]
[233.47174072 22.92395973]
[248.46553040 22.49251556]
[263.40969849 23.78575325]
[278.10644531 26.78656578]
[292.36138916 31.45524406]
[305.98590088 37.73001862]
[318.79971313 45.52787018]
[330.63327026 54.74562073]
[341.33001709 65.26130676]
[350.74841309 76.93580627]
[358.76382446 89.61463928]
[365.27026367 103.13005829]
[370.18157959 117.30323029]
[373.43280029 131.94664001]
[374.98095703 146.86654663]
[374.80548096 161.86550903]
[372.90878296 176.74511719]
[369.31588745 191.30845642]
[364.07437134 205.36288452]
[357.25360107 218.72239685]
[348.94375610 231.21026611]
[339.25485229 242.66125488]
[328.31506348 252.92384338]
[316.26913452 261.86227417]
[303.27642822 269.35824585]
[289.50885010 275.31259155]
[275.14862061 279.64654541]
[260.38565063 282.30276489]
[245.41535950 283.24606323]
[230.43576050 282.46401978]
[215.64506531 279.96691895]
[201.23898315 275.78784180]
[187.40809631 269.98208618]
[174.33543396 262.62643433]
[162.19395447 253.81825256]
[151.14428711 243.67405701]
[141.33262634 232.32806396]
[132.88882446 219.93038940]
[125.92457581 206.64509583]
[120.53203583 192.64793396]
[116.78253937 178.12411499]
[114.72571564 163.26579285]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[22 78]
[23 77]
[24 76]
[25 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
[94 106]
[95 105]
[96 104]
[97 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 15 2 gmark
2 14 1 gmark
2 cmark
14 cmark
4 12 2 gmark
23 77 2 gmark
24 76 2 gmark
24 cmark
76 cmark
25 75 3 gmark
28 74 2 gmark
28 cmark
29 73 2 gmark
31 71 3 gmark
32 70 3 gmark
33 69 3 gmark
33 cmark
34 68 1 gmark
34 cmark
35 67 2 gmark
35 cmark
48 60 2 gmark
60 cmark
59 cmark
50 cmark
58 cmark
52 56 3 gmark
56 cmark
84 cmark
117 cmark
85 cmark
86 cmark
115 cmark
87 cmark
114 cmark
89 cmark
112 cmark
94 106 2 gmark
95 105 2 gmark
95 cmark
105 cmark
96 104 1 gmark
96 cmark
104 cmark

% End Annotations
% show it
showpage
end
%%EOF
