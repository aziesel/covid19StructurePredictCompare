%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:26:00 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUUACAUUCUUCCCUGACUUAAAUGGUGAUGUGGUGGCUAUUGAUUAUAAACACUACACACCCUCUUUUAAGAAAGGAGCUAAAUUGUUACAUAAACCUAUUGUUUGGCAUGUUAACAAUGCAACUAACAAAGCAACGUAUAAACCAAACACUUGGUGUA\
) def
/coor [
[202.05015564 130.98515320]
[187.42622375 127.64734650]
[173.29634094 132.35856628]
[161.56388855 121.74443054]
[146.93997192 118.40661621]
[132.31605530 115.06880188]
[122.55260468 127.61839294]
[108.30458069 134.67607117]
[92.40518951 134.83840942]
[78.01602173 128.07312012]
[67.99837494 115.72550964]
[64.34424591 100.25086975]
[49.62890625 97.34246063]
[34.88589478 94.57775116]
[20.14288330 91.81304932]
[7.19248247 100.46896362]
[-7.71964407 97.45513916]
[-15.89192772 85.05557251]
[-30.63493919 82.29086304]
[-45.37795258 79.52616119]
[-60.12096405 76.76145935]
[-74.86397552 73.99674988]
[-89.60698700 71.23204803]
[-109.28902435 79.62367249]
[-124.48364258 65.69641113]
[-139.36315918 63.79899216]
[-154.24266052 61.90157318]
[-169.12217712 60.00415039]
[-178.08236694 62.02912140]
[-184.27243042 57.92179871]
[-199.11207581 55.73441315]
[-213.95173645 53.54702759]
[-228.79139709 51.35964584]
[-243.63104248 49.17226028]
[-258.47070312 46.98487473]
[-273.31036377 44.79748917]
[-285.91317749 53.95208740]
[-300.93154907 51.52237320]
[-309.58139038 39.45109177]
[-324.42102051 37.26371002]
[-339.26068115 35.07632446]
[-352.94360352 43.45230865]
[-367.97360229 37.84169388]
[-372.82092285 22.54846191]
[-363.76715088 9.30427170]
[-347.75753784 8.26893425]
[-337.07330322 20.23666954]
[-322.23364258 22.42405510]
[-307.39398193 24.61143875]
[-295.62905884 15.54932404]
[-280.54837036 17.55624771]
[-271.12295532 29.95783615]
[-256.28332520 32.14522171]
[-241.44366455 34.33260345]
[-226.60400391 36.51998901]
[-211.76435852 38.70737457]
[-196.92469788 40.89476013]
[-182.08503723 43.08214188]
[-167.22474670 45.12464142]
[-152.34524536 47.02206421]
[-137.46572876 48.91948318]
[-122.58622742 50.81690598]
[-116.47895813 44.25170898]
[-107.89572144 41.21464157]
[-98.74508667 42.51654434]
[-91.12509155 47.98796844]
[-86.84228516 56.48903656]
[-72.09927368 59.25374222]
[-57.35625839 62.01844406]
[-42.61324692 64.78314972]
[-27.87023544 67.54785156]
[-13.12722301 70.31256104]
[-1.01767886 61.71636581]
[13.97321606 64.31015015]
[22.90758896 77.07003784]
[37.65060043 79.83473969]
[52.39361191 82.59944916]
[59.58383942 80.73196411]
[67.39608765 85.56460571]
[75.35923004 74.22737122]
[87.04244232 66.78106689]
[100.68186951 64.34988403]
[114.21835327 67.30084991]
[125.60826874 75.18846893]
[133.13206482 86.82191467]
[135.65385437 100.44488525]
[150.27778625 103.78269958]
[164.90170288 107.12051392]
[180.07759094 102.64803314]
[190.76403809 113.02342224]
[205.38796997 116.36123657]
[215.86647034 105.21905518]
[230.41909790 100.84664917]
[245.10873413 104.32238770]
[256.01336670 114.61535645]
[260.27310181 128.88841248]
[274.89700317 132.22622681]
[289.52093506 135.56404114]
[301.20788574 125.52803040]
[316.38598633 124.31224823]
[329.21786499 132.17402649]
[334.89193726 145.91967773]
[349.51583862 149.25749207]
[364.13977051 152.59530640]
[378.76367188 155.93312073]
[393.38760376 159.27093506]
[408.01150513 162.60874939]
[422.63543701 165.94656372]
[430.14819336 155.01054382]
[440.91339111 147.30990601]
[453.62823486 143.74969482]
[466.76315308 144.73553467]
[478.74572754 150.12750244]
[488.14895630 159.25955200]
[493.86117554 171.02163696]
[495.21755981 183.99470520]
[509.70010376 187.90054321]
[521.76971436 178.32815552]
[536.98370361 177.70549011]
[549.49908447 186.06192017]
[554.63250732 200.01849365]
[569.11505127 203.92433167]
[579.93627930 193.02494812]
[594.76165771 189.01190186]
[609.60314941 192.96470642]
[620.46856689 203.82003784]
[624.43511963 218.65789795]
[620.43585205 233.48696899]
[609.54650879 244.31829834]
[594.69628906 248.23831177]
[579.87982178 244.19256592]
[569.08270264 233.26931763]
[565.20922852 218.40689087]
[550.72668457 214.50105286]
[539.27178955 223.98385620]
[524.25183105 224.91423035]
[511.41403198 216.72619629]
[505.79425049 202.38310242]
[491.31170654 198.47726440]
[480.68386841 211.55661011]
[465.36865234 218.72084045]
[448.40695190 218.49440002]
[433.18984985 210.87448120]
[422.78048706 197.34124756]
[419.29760742 180.57048035]
[404.67370605 177.23266602]
[390.04977417 173.89485168]
[375.42587280 170.55703735]
[360.80194092 167.21922302]
[346.17803955 163.88140869]
[331.55410767 160.54359436]
[320.47793579 170.46611023]
[305.50573730 171.98179626]
[292.35824585 164.30087280]
[286.18313599 150.18795776]
[271.55920410 146.85014343]
[256.93527222 143.51232910]
[246.90454102 154.52368164]
[232.61386108 159.06599426]
[217.87089539 155.82391357]
] def
/pairs [
[1 91]
[2 90]
[4 88]
[5 87]
[6 86]
[12 79]
[13 77]
[14 76]
[15 75]
[18 72]
[19 71]
[20 70]
[21 69]
[22 68]
[23 67]
[25 62]
[26 61]
[27 60]
[28 59]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[39 49]
[40 48]
[41 47]
[96 157]
[97 156]
[98 155]
[102 151]
[103 150]
[104 149]
[105 148]
[106 147]
[107 146]
[108 145]
[116 139]
[117 138]
[121 134]
[122 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
90 cmark
4 88 1 gmark
5 87 1 gmark
15 75 1 gmark
21 cmark
69 cmark
26 61 1 gmark
27 60 1 gmark
30 58 1 gmark
57 cmark
33 cmark
96 cmark
150 cmark
105 148 1 gmark
122 133 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
