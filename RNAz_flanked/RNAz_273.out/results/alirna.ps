%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:06:42 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUAGCACUCAAUUUGCUUUUGCUUGUCCUGACGGCGUAAAACACGUCUAUCAGUUACGUGCCAGAUCAGUUUCACCAAAACUGUUCAUCAGACAAGAGGAAGUUCA___AGAACUUUACUCACCAAUUUUUCUUAUUGUUGCAGCAAUAGUGUUUAUAAC\
) def
/coor [
[133.56951904 307.67770386]
[138.93960571 293.21514893]
[151.28996277 283.97003174]
[150.12037659 269.01571655]
[148.95079041 254.06137085]
[147.78118896 239.10704041]
[146.61160278 224.15270996]
[145.44201660 209.19837952]
[131.94270325 202.90280151]
[123.34993744 190.61376953]
[122.05348969 175.57429504]
[128.50129700 161.81484985]
[141.05241394 153.07316589]
[139.88281250 138.11883545]
[138.71322632 123.16450500]
[137.54364014 108.21017456]
[126.68527985 125.10822296]
[109.50279236 133.52954102]
[91.38947296 131.91879272]
[77.50002289 121.71473694]
[71.28364563 106.66246033]
[56.29006958 106.22348022]
[42.26937485 113.55360413]
[29.77398872 105.44714355]
[14.78041267 105.00816345]
[-0.21316233 104.56918335]
[-16.18478012 113.68666840]
[-30.76246262 103.95512390]
[-45.76174927 103.80877686]
[-60.76103210 103.66243744]
[-75.76032257 103.51609039]
[-91.55100250 112.94346619]
[-106.31578827 103.49821472]
[-121.31507111 103.64456177]
[-136.31436157 103.79090881]
[-151.31364441 103.93724823]
[-166.31292725 104.08359528]
[-178.52725220 114.48503113]
[-194.24678040 111.27935791]
[-201.41281128 96.92570496]
[-194.52819824 82.43495941]
[-178.87422180 78.92317963]
[-166.45927429 89.08431244]
[-151.45999146 88.93796539]
[-136.46070862 88.79161835]
[-121.46141815 88.64527130]
[-106.46212769 88.49893188]
[-97.74249268 80.06916809]
[-85.21466064 79.85411072]
[-75.61397552 88.51680756]
[-60.61468887 88.66314697]
[-45.61540222 88.80949402]
[-30.61611748 88.95584106]
[-21.73365784 80.69782257]
[-9.20401859 80.72724152]
[0.22581744 89.57561493]
[15.21939278 90.01459503]
[30.21296692 90.45357513]
[43.16122437 83.09205627]
[56.72904968 91.22990417]
[71.72262573 91.66888428]
[78.46818542 75.70536804]
[94.13988495 65.04080963]
[114.71810913 64.49916840]
[111.52312469 49.84338379]
[101.02396393 38.00792694]
[105.87281799 23.92467880]
[102.67784119 9.26889038]
[99.48285675 -5.38689709]
[96.28787994 -20.04268456]
[93.09290314 -34.69847107]
[89.89792633 -49.35425949]
[77.22896576 -59.19688034]
[77.16935730 -75.23982239]
[89.76482391 -85.17631531]
[105.35319519 -81.38393402]
[111.97640991 -66.77186584]
[104.55371094 -52.54924011]
[107.74868774 -37.89345169]
[110.94367218 -23.23766327]
[114.13864899 -8.58187580]
[117.33362579 6.07391167]
[120.52860260 20.72969818]
[130.79924011 31.51687813]
[126.17891693 46.64840317]
[129.37390137 61.30419159]
[136.16258240 64.49224091]
[140.38508606 50.09881973]
[138.43183899 35.22653961]
[148.38537598 24.00481415]
[163.38447571 24.16907310]
[173.08987427 35.60608292]
[170.81140137 50.43202591]
[158.11935425 58.42703629]
[149.73997498 70.86833191]
[156.52867126 74.05638123]
[169.84693909 67.15540314]
[183.16522217 60.25442886]
[196.41554260 53.22384262]
[209.59663391 46.06431961]
[222.77772522 38.90479279]
[235.95881653 31.74526978]
[249.13990784 24.58574486]
[262.32101440 17.42621994]
[275.50210571 10.26669502]
[281.41647339 -4.64637947]
[296.80490112 -9.18246365]
[309.86267090 0.13813812]
[310.57302856 16.16545677]
[298.39099121 26.60470772]
[282.66162109 23.44778824]
[269.48052979 30.60731316]
[256.29943848 37.76683807]
[243.11834717 44.92636108]
[229.93725586 52.08588791]
[216.75616455 59.24541092]
[203.57505798 66.40493774]
[199.17607117 72.39122772]
[190.06619263 73.57270813]
[176.74792480 80.47368622]
[163.42964172 87.37465668]
[178.42604065 87.70360565]
[193.42242432 88.03255463]
[207.59570312 83.12151337]
[222.59461975 82.94157410]
[236.88163757 87.51118469]
[248.99214172 96.36191559]
[257.68472290 108.58645630]
[262.06823730 122.93165588]
[261.69332886 137.92697144]
[256.59848022 152.03520203]
[247.30593872 163.81011963]
[234.76828003 172.04463196]
[220.27078247 175.89463806]
[205.29959106 174.96543884]
[191.38941956 169.35231018]
[179.96623230 159.63064575]
[172.20101929 146.79704285]
[168.88977051 132.16644287]
[160.69386292 119.60350800]
[152.49797058 107.04058075]
[153.66755676 121.99491119]
[154.83715820 136.94924927]
[156.00674438 151.90357971]
[169.76431274 158.58763123]
[178.27291870 171.17732239]
[179.33042908 186.23548889]
[172.75273132 199.71101379]
[160.39634705 208.02879333]
[161.56593323 222.98312378]
[162.73553467 237.93745422]
[163.90512085 252.89178467]
[165.07470703 267.84613037]
[166.24430847 282.80044556]
[179.88183594 290.01303101]
[187.43513489 303.46484375]
[186.49395752 318.86346436]
[177.35864258 331.29525757]
[162.94422913 336.79327393]
[147.85029602 333.60314941]
] def
/pairs [
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[13 144]
[14 143]
[15 142]
[16 141]
[21 61]
[22 60]
[24 58]
[25 57]
[26 56]
[28 53]
[29 52]
[30 51]
[31 50]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[64 86]
[65 85]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[96 121]
[97 120]
[98 119]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 152 1 gmark
8 149 1 gmark
14 143 1 gmark
143 cmark
56 cmark
46 cmark
35 cmark
45 cmark
36 cmark
44 cmark
37 43 1 gmark
67 83 1 gmark
100 116 1 gmark
101 cmark
113 cmark

% End Annotations
% show it
showpage
end
%%EOF
