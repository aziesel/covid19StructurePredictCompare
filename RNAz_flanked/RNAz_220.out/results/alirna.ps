%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:43:08 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGAUUCGAAGACCCAGUCCCUACUUAUUGUUAAUAACGCUACUAAUGUUGUUAUUAAAGUCUGUGAAUUUCAAUUUUGUAAUGAUCCAUUUUUGGGUGUUUAUUACCACAAAAACAACAAAAGUUGGAUGGAAAGUGAGUUCAGAGUUUAUUCUAGUGCG\
) def
/coor [
[199.61996460 208.54669189]
[185.25425720 212.86251831]
[170.27990723 213.73945618]
[155.50863647 211.12997437]
[141.74111938 205.17550659]
[129.72366333 196.19883728]
[120.10767365 184.68655396]
[113.41558075 171.26594543]
[114.11078644 156.28205872]
[114.80599976 141.29818726]
[107.01223755 154.11447144]
[99.21848297 166.93077087]
[96.15483093 183.60560608]
[79.28354645 185.27774048]
[73.00631714 169.52868652]
[86.40219116 159.13700867]
[94.19594574 146.32070923]
[101.98970795 133.50442505]
[98.40994263 126.91387939]
[83.41501617 126.52397156]
[91.25041962 113.73278046]
[87.67065430 107.14223480]
[72.67708588 106.70325470]
[57.68350601 106.26427460]
[42.68993378 105.82529449]
[36.38615799 116.68691254]
[26.11041641 123.77979279]
[13.86210537 125.79885864]
[1.99267876 122.41907501]
[-7.24578238 114.34590912]
[-12.12785053 103.16915131]
[-27.09288216 102.14551544]
[-42.05791473 101.12187958]
[-57.02294540 100.09824371]
[-71.98797607 99.07460785]
[-86.95301056 98.05097198]
[-101.91803741 97.02733612]
[-116.88307190 96.00370026]
[-127.59769440 107.39363861]
[-143.13288879 109.18026733]
[-156.15338135 100.51998901]
[-160.51132202 85.50191498]
[-154.14901733 71.21713257]
[-140.07054138 64.41047668]
[-124.92333221 68.29583740]
[-115.85943604 81.03866577]
[-100.89440155 82.06230164]
[-85.92937469 83.08593750]
[-70.96434021 84.10957336]
[-55.99930954 85.13320923]
[-41.03427887 86.15684509]
[-26.06924629 87.18048096]
[-11.10421371 88.20411682]
[-0.45896649 74.16338348]
[16.62321091 69.24343872]
[33.39900589 75.58152008]
[43.12891388 90.83172607]
[58.12248611 91.27069855]
[73.11606598 91.70967865]
[88.10963440 92.14865875]
[102.33887482 87.40219879]
[114.06634521 78.04985809]
[120.03162384 63.39632416]
[134.80633545 61.51026535]
[146.53381348 52.15791702]
[158.26127625 42.80556870]
[169.98875427 33.45322418]
[181.71621704 24.10087585]
[193.44369507 14.74852848]
[205.17117310 5.39618158]
[207.97198486 -0.68289340]
[212.72459412 -3.91370749]
[217.54356384 -4.08152437]
[229.62699890 -12.96918964]
[241.71043396 -21.85685539]
[253.79386902 -30.74452209]
[265.87731934 -39.63218689]
[272.40975952 -54.04182053]
[287.24682617 -55.34999084]
[299.33026123 -64.23765564]
[300.96414185 -68.38490295]
[303.58822632 -71.46071625]
[306.73364258 -73.28331757]
[309.92123413 -73.84569550]
[312.72048950 -73.30331421]
[325.46014404 -81.22174072]
[338.19976807 -89.14017487]
[350.93942261 -97.05860138]
[362.84713745 -106.18034363]
[373.80966187 -116.41864014]
[384.77221680 -126.65693665]
[395.73474121 -136.89523315]
[406.69729614 -147.13352966]
[417.65982056 -157.37182617]
[428.52197266 -167.71659851]
[439.28265381 -178.16683960]
[450.04333496 -188.61708069]
[460.80401611 -199.06733704]
[462.47555542 -215.02307129]
[476.06951904 -223.54269409]
[491.15777588 -218.09066772]
[496.16589355 -202.84933472]
[487.25207520 -189.51052856]
[471.25427246 -188.30664062]
[460.49359131 -177.85639954]
[449.73287964 -167.40615845]
[438.97219849 -156.95590210]
[436.35144043 -150.00477600]
[427.89813232 -146.40928650]
[416.93557739 -136.17098999]
[405.97305298 -125.93269348]
[395.01049805 -115.69439697]
[384.04797363 -105.45610046]
[373.08541870 -95.21780396]
[388.02868652 -96.52142334]
[401.67581177 -90.29603577]
[410.48675537 -78.15653229]
[412.17587280 -63.25193787]
[406.30502319 -49.44856644]
[394.39712524 -40.32705688]
[379.54110718 -38.25356674]
[365.59072876 -43.76596832]
[356.16470337 -55.43431854]
[353.70825195 -70.23181152]
[358.85784912 -84.31896210]
[346.11819458 -76.40052795]
[333.37857056 -68.48210144]
[320.63891602 -60.56367493]
[308.21792603 -52.15422440]
[296.13449097 -43.26655579]
[290.46630859 -29.49263000]
[274.76498413 -27.54875374]
[262.68154907 -18.66108704]
[250.59809875 -9.77342129]
[238.51466370 -0.88575524]
[226.43124390 8.00191021]
[214.52351379 17.12365341]
[202.79605103 26.47599983]
[191.06857300 35.82834625]
[179.34109497 45.18069458]
[167.61363220 54.53304291]
[155.88615417 63.88538742]
[144.15867615 73.23773956]
[139.03222656 87.22232819]
[123.41869354 89.77732849]
[111.69122314 99.12967682]
[126.46679688 96.54467010]
[141.24237061 93.95966339]
[154.95593262 87.88195801]
[169.70320129 85.14009094]
[184.68481445 85.88269806]
[199.08865356 90.06951141]
[212.13394165 97.47358704]
[223.11355591 107.69357300]
[231.43231201 120.17549133]
[236.63931274 134.24273682]
[238.45227051 149.13276672]
[236.77291870 164.03846741]
[231.69230652 178.15184021]
[223.48582458 190.70785522]
] def
/pairs [
[10 18]
[11 17]
[12 16]
[22 60]
[23 59]
[24 58]
[25 57]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[61 146]
[62 145]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[79 130]
[80 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 107]
[96 106]
[97 105]
[98 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 17 1 gmark
22 cmark
60 cmark
23 59 1 gmark
57 cmark
34 cmark
37 cmark
38 46 1 gmark
61 146 1 gmark
62 145 1 gmark
65 142 1 gmark
66 141 1 gmark
67 140 1 gmark
69 138 1 gmark
137 cmark
74 135 1 gmark
76 cmark
133 cmark
130 cmark
80 cmark
129 cmark
85 128 1 gmark
87 126 1 gmark
88 125 1 gmark
114 cmark
113 cmark
91 cmark
112 cmark
92 111 1 gmark
94 109 1 gmark
96 106 1 gmark
98 104 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
