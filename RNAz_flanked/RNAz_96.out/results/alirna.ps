%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:49:57 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUUAUAAUGCAUUUACAAUGGCUUGUUAUGUAUGGUGCUAUAAUGCCUUUAUGGUUUUGUAUGACAUAUAUAGCUGUUGUUGUUUCAAAUCAUGCUUUUUGGGUAUUUUCUUACUGCAGAAAGAUUGGUACUGAUGUUCGUAGUGAUGGUACAUUUGAAG\
) def
/coor [
[132.25903320 278.59655762]
[129.92697144 263.77896118]
[125.75945282 257.62927246]
[127.69690704 248.64973450]
[125.65440369 233.78944397]
[123.61190796 218.92916870]
[121.56940460 204.06887817]
[119.52690887 189.20858765]
[115.48017120 182.97875977]
[117.59246063 174.03874207]
[115.84030151 159.14141846]
[114.08814240 144.24411011]
[112.33598328 129.34680176]
[83.90741730 123.32867432]
[75.16770172 99.13417816]
[61.03378677 94.11098480]
[46.89987183 89.08779144]
[32.76595688 84.06459808]
[18.63204384 79.04139709]
[4.49813080 74.01820374]
[-9.63578320 68.99501038]
[-23.76969719 63.97181702]
[-32.95560074 64.04180908]
[-38.12874985 58.71026611]
[-52.16196442 53.41225052]
[-66.19517517 48.11423492]
[-80.22838593 42.81621933]
[-94.26159668 37.51820374]
[-108.29480743 32.22018814]
[-122.32801819 26.92217255]
[-136.36123657 21.62415695]
[-150.39443970 16.32614136]
[-164.42765808 11.02812672]
[-178.46087646 5.73011112]
[-192.49407959 0.43209562]
[-206.52729797 -4.86591959]
[-220.56050110 -10.16393566]
[-230.01937866 0.51891375]
[-242.53433228 7.30984020]
[-256.58728027 9.40837193]
[-270.48159790 6.58182096]
[-282.54672241 -0.80911195]
[-291.33926392 -11.85622406]
[-295.81558228 -25.21536827]
[-295.45550537 -39.26998901]
[-309.38269043 -44.84080887]
[-323.30984497 -50.41162491]
[-338.56277466 -45.43895721]
[-351.88082886 -54.38375473]
[-353.04751587 -70.38433075]
[-341.16784668 -81.16641235]
[-325.35491943 -78.45891571]
[-317.73901367 -64.33879089]
[-303.81185913 -58.76797485]
[-289.88470459 -53.19715500]
[-279.01254272 -64.69440460]
[-264.52978516 -71.16432953]
[-248.63488770 -71.59252930]
[-233.75297546 -65.88419342]
[-222.16596985 -54.88303375]
[-215.66264343 -40.24671555]
[-215.26248169 -24.19714737]
[-201.22927856 -18.89913177]
[-187.19606018 -13.60111618]
[-173.16285706 -8.30310059]
[-159.12963867 -3.00508523]
[-145.09643555 2.29293013]
[-131.06321716 7.59094572]
[-117.03000641 12.88896084]
[-102.99679565 18.18697739]
[-88.96358490 23.48499107]
[-74.93037415 28.78300667]
[-60.89715958 34.08102417]
[-46.86394882 39.37903976]
[-32.83073425 44.67705536]
[-18.74650192 49.83790588]
[-4.61258888 54.86109924]
[9.52132511 59.88429260]
[23.65523911 64.90748596]
[37.78915405 69.93067932]
[51.92306519 74.95387268]
[66.05698395 79.97706604]
[80.19089508 85.00026703]
[86.69940186 77.64580536]
[95.91824341 73.13198090]
[106.60440063 72.43952179]
[117.17145538 76.00628662]
[125.92505646 83.61343384]
[131.33277893 94.37260437]
[144.78317261 87.73280334]
[158.23356628 81.09300995]
[171.68395996 74.45320892]
[180.63354492 61.40653610]
[195.47093201 62.71074677]
[208.92132568 56.07094955]
[222.37171936 49.43115234]
[235.82211304 42.79135132]
[249.27250671 36.15155411]
[262.72290039 29.51175499]
[276.17327881 22.87195587]
[289.62368774 16.23215675]
[299.45886230 0.69220257]
[316.89736938 2.45596170]
[330.21563721 -4.44501400]
[343.53390503 -11.34598923]
[348.07543945 -26.48369026]
[362.03018188 -33.90264511]
[377.11901855 -29.20131683]
[384.39001465 -15.16892147]
[379.52941895 -0.13063113]
[365.42095947 6.99160433]
[350.43487549 1.97228873]
[337.11660767 8.87326431]
[323.79833984 15.77423954]
[319.82254028 27.23225784]
[308.74066162 33.07897568]
[296.26348877 29.68255043]
[282.81307983 36.32234955]
[269.36270142 42.96214676]
[255.91230774 49.60194778]
[242.46191406 56.24174500]
[229.01152039 62.88154221]
[215.56112671 69.52133942]
[202.11073303 76.16114044]
[194.12321472 88.73289490]
[178.32376099 87.90360260]
[164.87336731 94.54339600]
[151.42297363 101.18319702]
[137.97257996 107.82299805]
[152.95970154 108.44448853]
[167.45909119 104.60158539]
[182.14065552 107.67591858]
[193.88009644 117.01323700]
[200.17918396 130.62652588]
[199.69743347 145.61878967]
[192.53738403 158.79959106]
[180.22270203 167.36398315]
[165.37405396 169.48942566]
[151.15129089 164.72360229]
[140.58111572 154.08070374]
[135.91311646 139.82823181]
[127.23329163 127.59463501]
[128.98545837 142.49194336]
[130.73760986 157.38926697]
[132.48977661 172.28657532]
[134.38719177 187.16607666]
[136.42970276 202.02636719]
[138.47219849 216.88665771]
[140.51469421 231.74694824]
[142.55718994 246.60723877]
[144.74458313 261.44689941]
[147.07664490 276.26449585]
[161.23504639 282.39175415]
[169.81420898 295.21368408]
[170.07658386 310.63879395]
[161.93841553 323.74505615]
[147.99658203 330.35028076]
[132.69987488 328.34674072]
[120.92939758 318.37380981]
[116.44108582 303.61376953]
] def
/pairs [
[1 152]
[2 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[10 145]
[11 144]
[12 143]
[13 142]
[15 83]
[16 82]
[17 81]
[18 80]
[19 79]
[20 78]
[21 77]
[22 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 63]
[37 62]
[45 55]
[46 54]
[47 53]
[89 129]
[90 128]
[91 127]
[92 126]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[103 114]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 152 1 gmark
1 cmark
152 cmark
2 151 1 gmark
4 150 1 gmark
4 cmark
150 cmark
5 149 1 gmark
6 148 3 gmark
6 cmark
148 cmark
7 147 1 gmark
7 cmark
8 cmark
146 cmark
12 143 1 gmark
12 cmark
143 cmark
13 142 2 gmark
15 83 2 gmark
15 cmark
16 82 2 gmark
16 cmark
82 cmark
17 81 1 gmark
18 80 1 gmark
18 cmark
79 cmark
20 78 1 gmark
78 cmark
21 77 2 gmark
22 76 1 gmark
22 cmark
76 cmark
24 75 2 gmark
24 cmark
75 cmark
74 cmark
26 73 1 gmark
73 cmark
27 72 2 gmark
27 cmark
72 cmark
28 71 1 gmark
70 cmark
69 cmark
32 67 2 gmark
33 66 3 gmark
34 65 1 gmark
65 cmark
35 64 2 gmark
35 cmark
64 cmark
36 63 2 gmark
36 cmark
63 cmark
37 62 1 gmark
37 cmark
62 cmark
45 55 1 gmark
45 cmark
55 cmark
89 129 1 gmark
89 cmark
90 128 1 gmark
90 cmark
128 cmark
91 127 1 gmark
92 126 2 gmark
94 124 3 gmark
94 cmark
124 cmark
95 123 1 gmark
95 cmark
123 cmark
96 122 3 gmark
122 cmark
97 121 1 gmark
98 120 3 gmark
120 cmark
99 119 3 gmark
100 118 2 gmark
117 cmark
103 114 3 gmark
114 cmark
105 112 1 gmark
105 cmark

% End Annotations
% show it
showpage
end
%%EOF
