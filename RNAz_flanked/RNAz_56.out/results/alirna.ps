%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:24:20 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGAGUUAGGUGAUGUUAGAGAAACAAUGAAUUAUUUGUUUCAACAUGCCAAU_UUAGAUUCUUGCAAAAGAGUCUUGAAUGUGGUGUGUAAAACUUGUGGACAACAGCAGACUACCCUUAAGGGUGUAGAAGCUGUUAUGUACAUGGGCACACUUUCUUAU\
) def
/coor [
[108.53535461 328.74374390]
[108.24448395 313.74658203]
[107.95361328 298.74938965]
[107.66274261 283.75222778]
[99.14976501 275.11495972]
[98.81324005 262.59063721]
[107.38141632 252.90666199]
[107.38141632 237.90666199]
[107.38141632 222.90666199]
[107.38141632 207.90666199]
[107.38141632 192.90666199]
[104.22111511 186.18470764]
[107.52967834 177.61650085]
[107.82054901 162.61932373]
[108.11141968 147.62213135]
[108.40229034 132.62495422]
[98.68587494 132.40879822]
[89.80402374 129.46720886]
[82.47253418 124.25745392]
[77.21728516 117.40953064]
[63.33142090 123.08252716]
[49.44556427 128.75552368]
[35.55970383 134.42852783]
[21.67384338 140.10151672]
[7.78798485 145.77452087]
[-6.09787512 151.44752502]
[-9.66244221 166.54962158]
[-21.44496536 176.64674377]
[-36.91482544 177.85632324]
[-50.12354279 169.71325684]
[-55.99209595 155.34873962]
[-52.26391220 140.28619385]
[-40.37254715 130.31748962]
[-24.89047623 129.27578735]
[-11.77087307 137.56166077]
[2.11498666 131.88865662]
[16.00084686 126.21566010]
[29.88670540 120.54266357]
[43.77256393 114.86966705]
[57.65842438 109.19667053]
[71.54428101 103.52367401]
[72.61254120 91.51052094]
[78.52629852 80.99936676]
[70.28366089 68.46704865]
[62.04102707 55.93473434]
[53.79839325 43.40241623]
[45.55575562 30.87009811]
[37.31312180 18.33778191]
[29.07048798 5.80546427]
[20.82785225 -6.72685289]
[12.46409130 -19.17865944]
[3.97998786 -31.54878426]
[-3.49258614 -36.88934326]
[-4.54596615 -44.24205780]
[-12.78860092 -56.77437592]
[-21.15236282 -69.22618103]
[-29.63646698 -81.59630585]
[-38.12057114 -93.96643066]
[-46.60467148 -106.33655548]
[-55.08877563 -118.70668030]
[-63.57287979 -131.07681274]
[-72.05698395 -143.44692993]
[-80.54108429 -155.81706238]
[-95.56122589 -162.39941406]
[-97.10162354 -178.72605896]
[-83.57765961 -188.00152588]
[-68.90161896 -180.68402100]
[-68.17095947 -164.30116272]
[-59.68685532 -151.93103027]
[-51.20275497 -139.56091309]
[-42.71865082 -127.19078827]
[-34.23454666 -114.82066345]
[-25.75044441 -102.45053864]
[-17.26634026 -90.08041382]
[-8.78223801 -77.71028900]
[-2.37403965 -73.95435333]
[-0.25628385 -65.01701355]
[7.98635101 -52.48469543]
[16.35011292 -40.03288651]
[24.83421516 -27.66276169]
[31.24241447 -23.90682602]
[33.36016846 -14.96948719]
[41.60280609 -2.43717027]
[49.84543991 10.09514713]
[58.08807373 22.62746429]
[66.33071136 35.15978241]
[74.57334137 47.69209671]
[82.81597900 60.22441483]
[91.05861664 72.75672913]
[103.05458069 70.48126984]
[115.33329773 73.42687225]
[125.65281677 81.40584564]
[131.98872375 93.28338623]
[132.92622375 107.13092041]
[146.25315857 98.60430145]
[159.40878296 105.58848572]
[174.38340759 104.71631622]
[189.35803223 103.84414673]
[204.33265686 102.97196960]
[217.65959167 94.44535065]
[230.81521606 101.42953491]
[244.14216614 92.90291595]
[257.29779053 99.88710785]
[272.27239990 99.01493073]
[287.24703979 98.14276123]
[302.22164917 97.27058411]
[317.19628906 96.39841461]
[332.17089844 95.52624512]
[339.92886353 84.47985840]
[352.45507812 79.99893188]
[365.08374023 83.51381683]
[373.24728394 93.51992035]
[388.23602295 92.93828583]
[403.22473145 92.35665894]
[418.21343994 91.77502441]
[433.19583130 91.04808807]
[448.17044067 90.17591858]
[463.14508057 89.30374146]
[478.60583496 82.34667206]
[489.57098389 95.27732086]
[480.18115234 109.39351654]
[464.01724243 104.27836609]
[449.04263306 105.15053558]
[434.06799316 106.02271271]
[427.54116821 109.56851196]
[418.79507446 106.76374054]
[403.80636597 107.34537506]
[388.81762695 107.92700195]
[373.82891846 108.50863647]
[362.97042847 121.32212830]
[345.86926270 122.36192322]
[333.04306030 110.50086212]
[318.06845093 111.37303925]
[303.09381104 112.24520874]
[288.11920166 113.11738586]
[273.14459229 113.98955536]
[258.16995239 114.86172485]
[245.91410828 123.32595825]
[231.68739319 116.40415955]
[219.43153381 124.86839294]
[205.20483398 117.94659424]
[190.23020935 118.81876373]
[175.25558472 119.69094086]
[160.28096008 120.56311035]
[148.02510071 129.02734375]
[133.79840088 122.10554504]
[123.39946747 132.91583252]
[123.10859680 147.91300964]
[122.81772614 162.91018677]
[122.52685547 177.90736389]
[122.38141632 192.90666199]
[122.38141632 207.90666199]
[122.38141632 222.90666199]
[122.38141632 237.90666199]
[122.38141632 252.90666199]
[131.96223450 268.60543823]
[122.65992737 283.46133423]
[122.95079803 298.45852661]
[123.24166870 313.45571899]
[123.53253174 328.45288086]
[126.09639740 347.66424561]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[4 157]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[13 150]
[14 149]
[15 148]
[16 147]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[43 89]
[44 88]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 80]
[52 79]
[54 78]
[55 77]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[94 146]
[96 144]
[97 143]
[98 142]
[99 141]
[101 139]
[103 137]
[104 136]
[105 135]
[106 134]
[107 133]
[108 132]
[112 129]
[113 128]
[114 127]
[115 126]
[116 124]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 160 1 gmark
7 cmark
155 cmark
10 152 1 gmark
149 cmark
16 cmark
21 40 1 gmark
23 38 1 gmark
24 37 1 gmark
25 36 1 gmark
26 35 1 gmark
43 cmark
49 cmark
51 80 1 gmark
55 cmark
77 cmark
56 cmark
75 cmark
57 cmark
74 cmark
60 71 1 gmark
61 cmark
62 cmark
69 cmark
63 cmark
68 cmark
94 146 1 gmark
143 cmark
101 139 1 gmark
103 137 1 gmark
104 cmark
105 135 1 gmark
107 133 1 gmark
108 132 1 gmark
113 128 1 gmark
116 cmark
117 cmark

% End Annotations
% show it
showpage
end
%%EOF
