%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 03:57:23 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AAAUUUACUGUGUAGAGUGACAUCAAGUGAUUUUACUGUAAUGUCUGGUCGUAUAAGCCUUACAGUUAUGUCUUAUCAAAUGCAGGGUUGUAUACUUGUUCUUACAGU_GACACUGCAAAAUCCUAACACGCCAAAAUAUACAUUUGGUGUC\
) def
/coor [
[87.38571930 169.67413330]
[67.14395905 162.72229004]
[49.90401459 150.03994751]
[37.24098206 132.78582764]
[30.31179237 112.53630066]
[15.35051250 113.61336517]
[0.38923183 114.69043732]
[-14.57204914 115.76750946]
[-29.53332901 116.84457397]
[-44.49460983 117.92164612]
[-59.45589066 118.99871826]
[-74.41717529 120.07578278]
[-89.10206604 123.13417816]
[-103.24938965 128.11950684]
[-117.39670563 133.10482788]
[-131.54402161 138.09014893]
[-136.13175964 154.33984375]
[-149.35583496 164.56982422]
[-165.90541077 164.92105103]
[-179.28092957 155.45289612]
[-193.32290649 160.72764587]
[-207.36486816 166.00238037]
[-221.40684509 171.27713013]
[-235.44882202 176.55186462]
[-249.49079895 181.82659912]
[-263.53277588 187.10134888]
[-277.57476807 192.37608337]
[-287.56268311 205.38275146]
[-303.78311157 202.96832275]
[-309.54986572 187.61656189]
[-298.93060303 175.12004089]
[-282.84948730 178.33410645]
[-268.80752563 173.05937195]
[-254.76554871 167.78462219]
[-240.72357178 162.50988770]
[-226.68159485 157.23515320]
[-212.63961792 151.96040344]
[-198.59764099 146.68566895]
[-184.55566406 141.41091919]
[-182.20433044 128.23429871]
[-173.56791687 117.86706543]
[-160.82978821 113.09786987]
[-147.29418945 115.27848816]
[-136.52934265 123.94283295]
[-122.38202667 118.95751190]
[-108.23471069 113.97218323]
[-94.08739471 108.98686218]
[-108.57553864 105.10182190]
[-120.30091858 95.74685669]
[-127.30654144 82.48332214]
[-128.42314148 67.52494049]
[-123.46437836 53.36829376]
[-113.25785828 42.37616348]
[-99.50708771 36.38315201]
[-84.50708771 36.38951111]
[-70.76139832 42.39418030]
[-60.56420517 53.39496231]
[-55.61743927 67.55580902]
[-56.74673080 82.51323700]
[-63.76359558 95.77082062]
[-75.49423981 105.11450195]
[-60.53295898 104.03743744]
[-45.57168198 102.96036530]
[-30.61039925 101.88329315]
[-15.64911842 100.80622864]
[-0.68783796 99.72915649]
[14.27344322 98.65208435]
[29.23472404 97.57501984]
[30.85289955 84.75915527]
[34.77245712 72.45054626]
[40.86294556 61.05884552]
[48.92165375 50.96320343]
[58.68037415 42.49962234]
[69.81430817 35.94979095]
[81.95289612 31.53170776]
[94.69213867 29.39241219]
[107.60803986 29.60310555]
[120.27072144 32.15677643]
[132.25874329 36.96843719]
[143.17312622 43.87793350]
[152.65060425 52.65531158]
[164.80392456 43.86346817]
[176.95726013 35.07162857]
[189.11059570 26.27978516]
[201.26393127 17.48794174]
[213.41726685 8.69609928]
[225.57060242 -0.09574339]
[237.35273743 -9.37912846]
[248.74380493 -19.13840294]
[260.13488770 -28.89767838]
[271.52593994 -38.65695190]
[282.91702271 -48.41622543]
[280.01599121 -63.49865341]
[285.06002808 -78.00566864]
[296.69226074 -88.03495789]
[311.78372192 -90.88868713]
[326.27484131 -85.79922485]
[336.26760864 -74.13560486]
[339.07403564 -59.03528976]
[333.93917847 -44.56018066]
[322.24429321 -34.60401154]
[307.13525391 -31.84494400]
[292.67630005 -37.02515411]
[281.28521729 -27.26587868]
[269.89416504 -17.50660324]
[258.50308228 -7.74732971]
[247.11201477 2.01194477]
[246.79043579 4.85581970]
[245.28775024 7.73872948]
[242.58505249 10.19680214]
[238.83639526 11.76877594]
[234.36244202 12.05758953]
[222.20910645 20.84943199]
[210.05577087 29.64127541]
[197.90243530 38.43311691]
[185.74909973 47.22496033]
[173.59577942 56.01680374]
[161.44244385 64.80864716]
[165.88500977 74.06220245]
[168.94296265 83.86085510]
[170.55203247 93.99868774]
[170.67839050 104.26264191]
[169.31938171 114.43701935]
[166.50358582 124.30798340]
[162.29016113 133.66810608]
[156.76765442 142.32066345]
[150.05213928 150.08381653]
[142.28474426 156.79441833]
[149.91770935 169.70710754]
[157.55067444 182.61981201]
[165.18365479 195.53251648]
[172.81661987 208.44520569]
[180.44958496 221.35791016]
[188.08256531 234.27059937]
[195.71553040 247.18330383]
[203.34849548 260.09600830]
[218.80413818 262.47451782]
[229.07603455 274.26528931]
[229.31410217 289.90106201]
[219.40596008 301.99911499]
[204.02990723 304.84707642]
[190.44606018 297.10028076]
[185.06828308 282.41650391]
[190.43580627 267.72897339]
[182.80282593 254.81626892]
[175.16986084 241.90357971]
[167.53689575 228.99087524]
[159.90391541 216.07817078]
[152.27095032 203.16548157]
[144.63798523 190.25277710]
[137.00500488 177.34008789]
[129.37203979 164.42738342]
] def
/pairs [
[5 68]
[6 67]
[7 66]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 47]
[14 46]
[15 45]
[16 44]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
68 cmark
6 67 3 gmark
67 cmark
7 cmark
8 cmark
9 64 1 gmark
64 cmark
10 63 1 gmark
10 cmark
63 cmark
11 62 2 gmark
12 61 3 gmark
13 cmark
14 46 2 gmark
45 cmark
16 cmark
44 cmark
20 39 2 gmark
21 38 1 gmark
22 37 1 gmark
22 cmark
37 cmark
23 36 3 gmark
23 cmark
36 cmark
24 35 3 gmark
24 cmark
35 cmark
25 34 2 gmark
26 33 2 gmark
26 cmark
27 cmark
81 118 2 gmark
83 116 1 gmark
84 115 1 gmark
84 cmark
85 114 2 gmark
114 cmark
86 113 3 gmark
113 cmark
87 cmark
112 cmark
88 cmark
89 106 1 gmark
106 cmark
90 105 2 gmark
91 104 1 gmark
92 cmark
103 cmark
128 152 2 gmark
128 cmark
152 cmark
129 151 3 gmark
130 150 3 gmark
131 149 1 gmark
131 cmark
132 148 2 gmark
134 146 3 gmark

% End Annotations
% show it
showpage
end
%%EOF
