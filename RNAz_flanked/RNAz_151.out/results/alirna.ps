%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:43:28 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAUUAUGAGACAAUGUCAUAUCAGGAGCAAGAUGAACUUUUUGCAUAUACAAAACGUAACGUCCUGCCUACCAUAACUCAAAUGAAUCUAAAAUAUGCUAUUAGUGCUAAGAAUAGAGCUCGCACUGUAGCAGGUGUGUCUAUUCUUAGUACAAUGACUA\
) def
/coor [
[212.58732605 118.72735596]
[197.64512634 117.41191864]
[182.70291138 116.09648895]
[167.76069641 114.78105164]
[160.78657532 117.34005737]
[152.54074097 113.29138947]
[137.62704468 111.68465424]
[122.71334076 110.07791901]
[107.79964447 108.47118378]
[117.65572357 119.77859497]
[119.13325500 134.70565796]
[111.68521118 147.72589111]
[98.06908417 154.01882935]
[83.32598114 151.25462341]
[72.91424561 140.45666504]
[70.68862152 125.62270355]
[77.47310638 112.24470520]
[90.75752258 105.27533722]
[76.27496338 101.36949921]
[61.79241180 97.46365356]
[47.30985641 93.55781555]
[32.82730103 89.65197754]
[15.17608356 94.81487274]
[3.25415182 81.96656036]
[-11.30185604 78.34403992]
[-20.43725586 79.30850220]
[-26.10515213 74.50623322]
[-40.58770752 70.60038757]
[-55.07026291 66.69454956]
[-69.55281830 62.78870773]
[-84.03537750 58.88286591]
[-98.51792908 54.97702789]
[-113.00048828 51.07118607]
[-127.48303986 47.16534424]
[-121.26653290 60.81653595]
[-126.35436249 74.92730713]
[-139.85214233 81.47024536]
[-154.08116150 76.72315216]
[-160.94674683 63.38658524]
[-156.54313660 49.04753876]
[-143.37725830 41.86349487]
[-157.30441284 36.29267883]
[-171.23158264 30.72185707]
[-185.15875244 25.15103722]
[-199.13960266 19.71636200]
[-213.17282104 14.41834641]
[-227.20602417 9.12033081]
[-243.29243469 12.30773449]
[-253.89097595 -0.20637645]
[-248.09878540 -15.54855728]
[-231.87435913 -17.93608665]
[-221.90802002 -4.91288090]
[-207.87480164 0.38513467]
[-193.84159851 5.68315029]
[-186.43568420 5.10063267]
[-179.58793640 11.22387123]
[-165.66076660 16.79469109]
[-151.73359680 22.36551094]
[-137.80642700 27.93632889]
[-123.57720184 32.68278885]
[-109.09464264 36.58863068]
[-94.61209106 40.49447250]
[-80.12953186 44.40031052]
[-65.64698029 48.30615234]
[-51.16442108 52.21199417]
[-36.68186569 56.11783600]
[-22.19931221 60.02367401]
[-7.67933941 63.78803253]
[6.87666893 67.41055298]
[17.43277359 61.43881226]
[29.61365700 64.37458801]
[36.73314285 75.16941833]
[51.21569824 79.07525635]
[65.69824982 82.98110199]
[80.18080902 86.88694000]
[94.66336060 90.79277802]
[109.40637207 93.55748749]
[124.32007599 95.16422272]
[139.23377991 96.77095032]
[154.14747620 98.37768555]
[169.07614136 99.83884430]
[184.01834106 101.15427399]
[198.96055603 102.46971130]
[213.90277100 103.78514862]
[216.97366333 93.85855103]
[221.69201660 84.60582733]
[227.91796875 76.29792786]
[235.46752930 69.17781830]
[244.11802673 63.45343781]
[253.61470032 59.29156113]
[263.67813110 56.81298828]
[274.01254272 56.08900452]
[284.31445312 57.13936234]
[294.28155518 59.93171692]
[303.62170410 64.38263702]
[312.06134033 70.36009979]
[319.35354614 77.68739319]
[325.28536987 86.14833832]
[329.68389893 95.49369049]
[332.42135620 105.44846344]
[333.41885376 115.72000885]
[332.64862061 126.00664520]
[347.05221558 130.19432068]
[361.45581055 134.38200378]
[375.85937500 138.56967163]
[390.26296997 142.75735474]
[404.66656494 146.94503784]
[419.07015991 151.13270569]
[433.47375488 155.32038879]
[447.87731934 159.50805664]
[462.28091431 163.69573975]
[476.68450928 167.88342285]
[491.08810425 172.07109070]
[505.49166870 176.25877380]
[519.89526367 180.44644165]
[534.29888916 184.63412476]
[548.70245361 188.82180786]
[563.10601807 193.00947571]
[574.79785156 187.48533630]
[586.73083496 191.30593872]
[592.64733887 201.89309692]
[606.96649170 206.36102295]
[621.28564453 210.82893372]
[630.46179199 210.40060425]
[635.83905029 215.52624512]
[650.06829834 220.27270508]
[664.29754639 225.01916504]
[681.23602295 224.29550171]
[686.62042236 240.37170410]
[672.66308594 249.99604797]
[659.55108643 239.24839783]
[645.32183838 234.50193787]
[631.09259033 229.75547791]
[616.81774902 225.14807129]
[602.49859619 220.68016052]
[588.17944336 216.21223450]
[571.31732178 220.99563599]
[558.91833496 207.41307068]
[544.51477051 203.22538757]
[530.11120605 199.03771973]
[515.70758057 194.85003662]
[501.30401611 190.66235352]
[486.90042114 186.47468567]
[472.49682617 182.28700256]
[458.09323120 178.09933472]
[443.68963623 173.91165161]
[429.28607178 169.72396851]
[414.88247681 165.53630066]
[400.47888184 161.34861755]
[386.07528687 157.16093445]
[371.67172241 152.97326660]
[357.26812744 148.78558350]
[342.86453247 144.59791565]
[328.46093750 140.41023254]
[317.49304199 157.38594055]
[301.51104736 169.78895569]
[282.30709839 176.21209717]
[262.03997803 175.91969299]
[242.99266052 168.93173218]
[227.31483459 156.02316284]
] def
/pairs [
[1 84]
[2 83]
[3 82]
[4 81]
[6 80]
[7 79]
[8 78]
[9 77]
[18 76]
[19 75]
[20 74]
[21 73]
[22 72]
[24 69]
[25 68]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[41 59]
[42 58]
[43 57]
[44 56]
[45 54]
[46 53]
[47 52]
[102 154]
[103 153]
[104 152]
[105 151]
[106 150]
[107 149]
[108 148]
[109 147]
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[118 138]
[121 136]
[122 135]
[123 134]
[125 133]
[126 132]
[127 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
81 cmark
8 78 1 gmark
9 77 2 gmark
18 76 3 gmark
75 cmark
20 74 2 gmark
21 73 3 gmark
22 72 2 gmark
22 cmark
72 cmark
24 69 2 gmark
24 cmark
69 cmark
27 67 3 gmark
28 66 3 gmark
30 64 2 gmark
30 cmark
64 cmark
31 cmark
63 cmark
60 cmark
41 59 2 gmark
42 58 1 gmark
43 57 1 gmark
57 cmark
45 54 3 gmark
45 cmark
46 53 3 gmark
47 52 3 gmark
102 154 1 gmark
103 153 3 gmark
150 cmark
108 148 1 gmark
109 147 1 gmark
110 146 1 gmark
145 cmark
112 144 3 gmark
115 141 2 gmark
117 cmark
118 138 3 gmark
138 cmark
135 cmark
123 134 1 gmark
123 cmark
126 132 3 gmark

% End Annotations
% show it
showpage
end
%%EOF
