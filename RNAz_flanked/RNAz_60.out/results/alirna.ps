%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:25:05 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCAGAGUACAAAGGUCCUAUUACGGAUGUUUUCUACAAAGAAAACAGC_UACACAACAACCAUAAAACCAGUUACUUAUAAAUUGGAUGGUGUUGUUUGUACAGAAAUUGAACCUAAGUUGGACAAUUAUUAUAAGAAAGACAAUUCUUAUUUCACAGAGC\
) def
/coor [
[234.37568665 159.90034485]
[221.10424805 152.90969849]
[211.59709167 156.81587219]
[201.29873657 154.77551270]
[193.68612671 147.22970581]
[191.46539307 136.51856995]
[178.47500610 129.01856995]
[165.48463440 121.51856995]
[152.49424744 114.01856995]
[139.50387573 106.51856995]
[126.51348877 99.01856995]
[113.52310944 91.51856995]
[121.85112000 103.19935608]
[118.59537506 121.20754242]
[100.49140167 134.32330322]
[89.78245544 144.82655334]
[79.07350922 155.32981873]
[79.17090607 171.13380432]
[68.00538635 182.31892395]
[52.20125198 182.24922180]
[41.13481522 170.96606445]
[41.37159729 155.16355896]
[52.77111816 144.21702576]
[68.57024384 144.62086487]
[79.27919006 134.11761475]
[89.98813629 123.61434937]
[83.25614929 110.20986176]
[68.43630219 112.52764130]
[53.61645508 114.84542847]
[38.79660797 117.16320801]
[23.97675896 119.48098755]
[9.15691185 121.79876709]
[-5.66293621 124.11655426]
[-20.48278427 126.43433380]
[-32.90065384 137.14547729]
[-48.29452515 131.49209595]
[-50.82850266 115.28990173]
[-37.89584732 105.20632935]
[-22.80056572 111.61448669]
[-7.98071814 109.29670715]
[6.83912992 106.97891998]
[21.65897751 104.66114044]
[36.47882462 102.34336090]
[51.29867172 100.02557373]
[66.11852264 97.70779419]
[80.93836975 95.39001465]
[85.05968475 89.12385559]
[70.12233734 90.49343109]
[59.73817444 79.66896057]
[61.72650909 64.80133057]
[74.59011841 57.08592224]
[88.64265442 62.33247757]
[93.30232239 76.59153748]
[97.42363739 70.32537842]
[93.68202209 55.79953003]
[89.94040680 41.27368164]
[86.19878387 26.74783134]
[82.45716858 12.22198200]
[77.26182556 4.64772797]
[78.78675079 -2.62184310]
[75.32750702 -17.21751595]
[71.86827087 -31.81318855]
[68.40903473 -46.40886307]
[65.23233795 -49.53149033]
[63.42715073 -53.14630890]
[62.97767258 -56.75160980]
[63.70354462 -59.90423965]
[65.29417419 -62.26914978]
[62.97639465 -77.08899689]
[60.65861130 -91.90884399]
[58.34083176 -106.72869110]
[56.02304840 -121.54853821]
[53.70526505 -136.36839294]
[40.22429276 -144.29286194]
[35.03977203 -159.04598999]
[40.59967422 -173.66178894]
[54.27878189 -181.23912048]
[69.61824036 -178.20021057]
[79.37522888 -165.97993469]
[78.94279480 -150.34832764]
[68.52511597 -138.68617249]
[70.84289551 -123.86631775]
[73.16067505 -109.04647064]
[75.47846222 -94.22662354]
[77.79624176 -79.40677643]
[80.11402130 -64.58692932]
[83.00470734 -49.86809921]
[86.46394348 -35.27242661]
[89.92318726 -20.67675400]
[93.38242340 -6.08108139]
[96.98301697 8.48036480]
[100.72463226 23.00621414]
[104.46625519 37.53206253]
[108.20787048 52.05791092]
[111.94948578 66.58376312]
[121.02310944 78.52819061]
[134.01348877 86.02819061]
[147.00387573 93.52819061]
[159.99424744 101.02819061]
[172.98463440 108.52819061]
[185.97500610 116.02819061]
[198.96539307 123.52819061]
[219.06871033 122.57051086]
[228.09490967 139.63827515]
[241.36633301 146.62892151]
[256.18618774 148.94670105]
[270.95828247 146.34197998]
[285.73040771 143.73725891]
[300.50253296 141.13253784]
[315.27465820 138.52781677]
[323.32366943 128.40820312]
[335.71612549 126.56479645]
[345.70043945 133.44859314]
[360.52029419 131.13081360]
[369.63095093 118.21681213]
[385.21871948 115.60980225]
[398.03567505 124.85648346]
[400.47775269 140.47096252]
[391.09606934 153.18943787]
[375.45666504 155.46627808]
[362.83807373 145.95066833]
[348.01821899 148.26844788]
[335.00332642 160.00914001]
[317.87936401 153.29992676]
[303.10723877 155.90464783]
[288.33514404 158.50938416]
[273.56301880 161.11410522]
[258.79089355 163.71882629]
[256.57031250 170.88255310]
[266.75790405 181.89224243]
[252.12913513 185.21000671]
[249.90855408 192.37373352]
[260.61749268 202.87698364]
[271.32644653 213.38024902]
[282.03540039 223.88351440]
[292.74432373 234.38676453]
[303.45327759 244.89002991]
[314.16223145 255.39329529]
[329.96136475 254.98945618]
[341.36087036 265.93597412]
[341.59765625 281.73849487]
[330.53121948 293.02163696]
[314.72708130 293.09133911]
[303.56155396 281.90621948]
[303.65896606 266.10223389]
[292.95001221 255.59898376]
[282.24105835 245.09571838]
[271.53213501 234.59245300]
[260.82318115 224.08920288]
[250.11422729 213.58593750]
[239.40528870 203.08267212]
[243.76774597 217.43429565]
[232.48374939 227.31718445]
[218.15286255 231.74731445]
[203.26014709 229.95648193]
[190.38806152 222.25524902]
[181.76866150 209.97901917]
[178.89659119 195.25654602]
[182.26988220 180.64076233]
[191.30360413 168.66612244]
[204.43124390 161.40907288]
] def
/pairs [
[1 105]
[2 104]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[15 26]
[16 25]
[17 24]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[60 90]
[61 89]
[62 88]
[63 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[113 122]
[114 121]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 102 1 gmark
8 100 1 gmark
9 99 1 gmark
12 96 1 gmark
15 26 1 gmark
17 24 1 gmark
28 cmark
45 cmark
41 cmark
54 95 1 gmark
54 cmark
55 94 1 gmark
58 91 1 gmark
69 85 1 gmark
70 84 1 gmark
83 cmark
73 81 1 gmark
106 cmark
107 127 1 gmark
126 cmark
125 cmark
124 cmark
132 151 1 gmark
136 147 1 gmark
137 146 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
