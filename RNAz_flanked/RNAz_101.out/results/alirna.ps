%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 03:56:45 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGGUACAACGACACUUAAUGGUCUUUGGCUUGAUAACACAGUCUACUGUCCAAGACAUGUGAUGUGCACCGCUGAACACAUGCCUAAUCCUAAUUAUGAAGAUUUGCUCAUUCCAAAAACUAAUCAUAGUUUCAUUGUACAGAAUGACAAUGGUCAACU\
) def
/coor [
[83.08039856 109.71830750]
[68.20088959 111.61572266]
[53.32137680 113.51314545]
[38.44186783 115.41056824]
[23.56235886 117.30798340]
[10.85176754 126.72878265]
[-2.75199723 120.66356659]
[-17.63150597 122.56098938]
[-32.49179459 124.60348511]
[-47.33145142 126.79087067]
[-62.17110443 128.97825623]
[-77.01075745 131.16563416]
[-91.85041046 133.35302734]
[-106.69007111 135.54040527]
[-109.29242706 142.03489685]
[-113.76345825 147.34889221]
[-119.62905884 150.96923828]
[-126.28273773 152.55967712]
[-133.04829407 151.99186707]
[-139.24848938 149.35517883]
[-144.27288818 144.94441223]
[-147.63790894 139.22721863]
[-162.63148499 139.66619873]
[-177.62506104 140.10517883]
[-192.61863708 140.54415894]
[-207.61221313 140.98313904]
[-221.18003845 149.12098694]
[-234.12829590 141.75947571]
[-249.12187195 142.19845581]
[-264.11544800 142.63742065]
[-276.52761841 156.89779663]
[-295.10192871 157.59826660]
[-308.10018921 144.76004028]
[-323.06521606 145.78367615]
[-338.03024292 146.80731201]
[-348.22668457 158.88241577]
[-363.98184204 160.12759399]
[-375.94848633 149.80406189]
[-377.02700806 134.03662109]
[-366.57754517 122.17979431]
[-350.79956055 121.26803589]
[-339.05389404 131.84226990]
[-324.08886719 130.81863403]
[-309.12384033 129.79499817]
[-303.63259888 119.72725677]
[-293.84985352 113.51579285]
[-282.16256714 112.81409454]
[-271.49002075 117.91406250]
[-264.55441284 127.64385223]
[-249.56085205 127.20487213]
[-234.56727600 126.76589203]
[-222.07188416 118.65943909]
[-208.05119324 125.98956299]
[-193.05761719 125.55058289]
[-178.06404114 125.11160278]
[-163.07046509 124.67262268]
[-148.07688904 124.23364258]
[-130.05413818 109.71976471]
[-108.87745667 120.70075226]
[-94.03779602 118.51337433]
[-79.19814301 116.32598877]
[-64.35848999 114.13860321]
[-49.51883316 111.95121765]
[-34.67918015 109.76383209]
[-28.48912811 105.65650940]
[-19.52892685 107.68148041]
[-4.64941788 105.78405762]
[6.99689198 96.49897766]
[21.66493988 102.42847443]
[36.54444885 100.53105927]
[51.42395782 98.63363647]
[66.30346680 96.73621368]
[81.18297577 94.83879852]
[96.77854919 80.75576019]
[116.11032867 88.99201202]
[130.79658508 85.94017792]
[145.48284912 82.88833618]
[160.16911316 79.83649445]
[174.85537720 76.78465271]
[189.54164124 73.73281097]
[204.22789001 70.68097687]
[218.81855774 67.20064545]
[233.30111694 63.29480362]
[247.78366089 59.38896179]
[262.26623535 55.48311996]
[276.74877930 51.57727814]
[291.23132324 47.67144012]
[299.14358521 34.25376129]
[313.88659668 30.49899292]
[326.62954712 38.12479782]
[335.63919067 20.21922112]
[354.59854126 14.71772003]
[371.27304077 24.70799828]
[385.50225830 19.96153831]
[399.73150635 15.21507740]
[413.96072388 10.46861744]
[428.18997192 5.72215700]
[442.41918945 0.97569656]
[456.64843750 -3.77076387]
[470.87768555 -8.51722431]
[485.10690308 -13.26368427]
[499.24081421 -18.28687859]
[513.27404785 -23.58489418]
[527.30725098 -28.88290977]
[541.34045410 -34.18092346]
[555.37365723 -39.47893906]
[569.40686035 -44.77695465]
[583.44006348 -50.07497025]
[589.71881104 -64.57854462]
[604.44458008 -70.31664276]
[618.88098145 -63.88496399]
[624.46307373 -49.09930038]
[617.87915039 -34.73172760]
[603.03527832 -29.30627251]
[588.73809814 -36.04175949]
[574.70489502 -30.74374390]
[560.67169189 -25.44572830]
[546.63848877 -20.14771271]
[532.60528564 -14.84969807]
[518.57202148 -9.55168247]
[504.53884888 -4.25366688]
[501.77478027 -0.30262730]
[496.47744751 1.92533684]
[489.85336304 0.96554995]
[475.62414551 5.71201038]
[461.39489746 10.45847034]
[447.16564941 15.20493126]
[432.93643188 19.95139122]
[418.70718384 24.69785118]
[404.47796631 29.44431305]
[390.24871826 34.19077301]
[376.01950073 38.93723297]
[374.05075073 49.09999847]
[367.97232056 57.57905197]
[358.83895874 62.78687668]
[348.28475952 63.71387482]
[338.23080444 60.12342453]
[330.53536987 52.60735321]
[323.35479736 65.60639191]
[308.72308350 69.77378082]
[295.13717651 62.15399551]
[280.65460205 66.05983734]
[266.17205811 69.96567535]
[251.68949890 73.87151337]
[237.20695496 77.77735901]
[222.72439575 81.68319702]
[220.64880371 84.59237671]
[217.03733826 86.61894989]
[212.33070374 87.04137421]
[207.27973938 85.36723328]
[192.59347534 88.41907501]
[177.90721130 91.47091675]
[163.22094727 94.52275848]
[148.53469849 97.57459259]
[133.84843445 100.62643433]
[119.16217041 103.67827606]
[116.16163635 110.93251801]
[110.54501343 116.41709900]
[103.22145081 119.24423981]
[95.37643433 118.95629120]
] def
/pairs [
[1 73]
[2 72]
[3 71]
[4 70]
[5 69]
[7 67]
[8 66]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[14 59]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[28 51]
[29 50]
[30 49]
[33 44]
[34 43]
[35 42]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[90 138]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[102 121]
[103 120]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 72 2 gmark
2 cmark
3 71 2 gmark
71 cmark
5 69 3 gmark
5 cmark
69 cmark
7 67 1 gmark
8 66 3 gmark
10 63 3 gmark
11 62 2 gmark
11 cmark
62 cmark
13 60 1 gmark
14 59 2 gmark
23 56 3 gmark
24 cmark
25 54 3 gmark
26 53 3 gmark
50 cmark
30 cmark
33 44 2 gmark
44 cmark
35 cmark
75 156 3 gmark
76 155 3 gmark
77 cmark
154 cmark
78 153 3 gmark
79 152 1 gmark
80 151 3 gmark
81 150 3 gmark
150 cmark
82 146 3 gmark
146 cmark
83 145 3 gmark
84 144 1 gmark
84 cmark
144 cmark
85 143 2 gmark
85 cmark
87 141 3 gmark
94 131 2 gmark
95 cmark
130 cmark
98 127 1 gmark
100 125 2 gmark
101 124 3 gmark
103 120 3 gmark
104 cmark
119 cmark
105 118 3 gmark
107 116 2 gmark
107 cmark
116 cmark
108 115 3 gmark

% End Annotations
% show it
showpage
end
%%EOF
