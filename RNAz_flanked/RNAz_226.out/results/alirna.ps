%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 05:44:33 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AAAGGAAUUUAUCAAACCUCUAACUUUAGAGUCCAACCAACAGAAUCUAUUGUUAGAUUCCCUAAUAUUACAAACUUGUGUCCUUUUGGUGAAGUUUUUAACGCCACCAAAUUCGCAUCUGUUUAUGCUUGGAACAGAAAGAGAAUUAGCAACUGUGUUG\
) def
/coor [
[97.38528442 126.94905090]
[83.87744904 123.38026428]
[73.36655426 113.19954681]
[68.98455048 98.54571533]
[54.66540909 103.01363373]
[40.34627533 107.48155975]
[26.02713585 111.94947815]
[11.70799828 116.41739655]
[-2.61113882 120.88531494]
[-16.93027687 125.35323334]
[-31.24941444 129.82115173]
[-42.11854172 141.31779480]
[-56.57275391 137.72265625]
[-70.89189148 142.19056702]
[-85.21102905 146.65849304]
[-98.59600067 153.42919922]
[-110.67943573 162.31686401]
[-122.76287079 171.20452881]
[-127.85480499 178.85031128]
[-135.16990662 180.14500427]
[-147.42445374 188.79519653]
[-159.67900085 197.44540405]
[-166.05813599 212.55297852]
[-182.36251831 214.31349182]
[-191.81958008 200.91587830]
[-184.70071411 186.14245605]
[-168.32920837 185.19085693]
[-156.07466125 176.54064941]
[-143.82011414 167.89045715]
[-131.65054321 159.12109375]
[-119.56710052 150.23342896]
[-107.48366547 141.34576416]
[-122.42436981 142.67826843]
[-137.00852966 139.17083740]
[-149.70957947 131.19064331]
[-159.19801331 119.57300568]
[-164.48063660 105.53398895]
[-165.00448608 90.54314423]
[-160.71472168 76.16962433]
[-152.06039429 63.91799164]
[-139.94737244 55.07067871]
[-125.64361572 50.55378342]
[-110.64634705 50.84011459]
[-96.52542114 55.89969254]
[-84.75893402 65.20291138]
[-76.57855988 77.77595520]
[-72.84056854 92.30274200]
[-73.93624115 107.26267242]
[-79.75087738 121.08981323]
[-89.67894745 132.33935547]
[-75.35980988 127.87143707]
[-61.04067612 123.40351105]
[-51.19574738 112.22645569]
[-35.71733475 115.50201416]
[-21.39819527 111.03409576]
[-7.07905817 106.56617737]
[7.24007940 102.09825897]
[21.55921745 97.63034058]
[35.87835312 93.16242218]
[50.19749069 88.69449615]
[64.51663208 84.22657776]
[49.89821243 87.58840942]
[35.46499252 83.50402832]
[24.77590942 72.98055267]
[20.46667290 58.61286545]
[23.59984970 43.94374084]
[33.40286636 32.59028625]
[47.45849609 27.35203552]
[62.30090714 29.52063179]
[74.27026367 38.56134415]
[80.41516876 52.24491501]
[79.22080994 67.19610596]
[81.55287170 52.37849808]
[83.88493347 37.56089020]
[86.21699524 22.74328232]
[88.54905701 7.92567444]
[90.88111115 -6.89193296]
[82.10679626 -15.00257683]
[78.39781952 -26.23453140]
[80.57225037 -37.73915100]
[87.97129059 -46.65759277]
[98.65277863 -50.83121109]
[101.56118774 -65.54654694]
[95.76164246 -80.88594818]
[106.35418701 -93.40513611]
[122.44212341 -90.22544098]
[127.47555542 -74.61785889]
[116.27652740 -62.63813782]
[113.36811066 -47.92279816]
[124.45900726 -33.40497971]
[121.41461182 -15.06846428]
[105.69872284 -4.55987167]
[103.36666107 10.25773621]
[101.03459930 25.07534409]
[98.70253754 39.89295197]
[96.37047577 54.71055984]
[94.03841400 69.52816772]
[117.94322968 78.84739685]
[124.41575623 100.71778107]
[138.54966736 105.74098206]
[152.68359375 110.76417542]
[166.81750488 115.78736877]
[180.95141602 120.81056213]
[195.08532715 125.83375549]
[207.01702881 113.54458618]
[223.05970764 107.70198059]
[239.99021912 109.42861938]
[254.42929077 118.33158112]
[263.51602173 132.59039307]
[265.47460938 149.32910156]
[279.79373169 153.79702759]
[294.11288452 158.26493835]
[308.43200684 162.73286438]
[322.75115967 167.20079041]
[336.15368652 156.92205811]
[352.87570190 156.64118958]
[366.34597778 166.27113342]
[371.38851929 181.86891174]
[385.79211426 186.05659485]
[400.19570923 190.24426270]
[414.59930420 194.43194580]
[429.00289917 198.61962891]
[443.40646362 202.80729675]
[457.81005859 206.99497986]
[470.70486450 198.14860535]
[486.26409912 199.71194458]
[497.14117432 210.94685364]
[498.20028687 226.54852295]
[488.94134521 239.15034485]
[473.73614502 242.80210876]
[459.76409912 235.77957153]
[453.62237549 221.39855957]
[439.21881104 217.21089172]
[424.81521606 213.02320862]
[410.41162109 208.83552551]
[396.00802612 204.64785767]
[381.60443115 200.46017456]
[367.20086670 196.27250671]
[357.43041992 205.41175842]
[344.31176758 208.54243469]
[331.25903320 204.73947144]
[321.72399902 194.89677429]
[318.28323364 181.51992798]
[303.96411133 177.05200195]
[289.64495850 172.58407593]
[275.32583618 168.11616516]
[261.00668335 163.64823914]
[252.90617371 173.87182617]
[241.77803040 180.73777771]
[228.94439697 183.40469360]
[215.93873596 181.53163147]
[204.32273865 175.32142639]
[195.49873352 165.49905396]
[190.54039001 153.22697449]
[190.06213379 139.96766663]
[175.92822266 134.94447327]
[161.79431152 129.92127991]
[147.66040039 124.89808655]
[133.52647400 119.87489319]
[119.39256287 114.85169983]
] def
/pairs [
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 56]
[10 55]
[11 54]
[13 52]
[14 51]
[15 50]
[16 32]
[17 31]
[18 30]
[20 29]
[21 28]
[22 27]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[82 89]
[83 88]
[99 160]
[100 159]
[101 158]
[102 157]
[103 156]
[104 155]
[110 147]
[111 146]
[112 145]
[113 144]
[114 143]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
60 cmark
9 cmark
11 54 1 gmark
15 cmark
18 30 1 gmark
18 cmark
30 cmark
22 27 1 gmark
93 cmark
102 cmark
110 147 1 gmark
110 cmark
147 cmark
114 143 1 gmark
114 cmark
138 cmark
120 136 1 gmark
121 135 1 gmark
123 cmark
133 cmark

% End Annotations
% show it
showpage
end
%%EOF
