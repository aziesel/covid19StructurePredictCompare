%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 04:54:41 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAGAUGAUAUCGUCAAGACUGACGGUACACUCAUGAUUGAGCGGUUCGUGUCAUUGGCUAUAGAUGCUUACCCACUUACAAAGCAUCAUGAUCCUGAAUACCAAAAUGUAUUCUGGGUGUAUUUACAAUAUAUAAAAAAGCUGCAUAAAGACCUAACAGG\
) def
/coor [
[106.98751068 200.50160217]
[102.04351807 186.33978271]
[104.10048676 171.48149109]
[112.70786285 159.19371033]
[115.14859009 144.39361572]
[105.91110992 156.21177673]
[103.07080078 164.94781494]
[96.37627411 168.16809082]
[86.90995026 179.80375671]
[77.44363403 191.43942261]
[67.97731781 203.07508850]
[58.51099777 214.71075439]
[49.04467773 226.34643555]
[39.57835770 237.98210144]
[30.11203766 249.61776733]
[28.04542542 265.88616943]
[12.82064152 271.98028564]
[0.09963751 261.63098145]
[2.96869278 245.48474121]
[18.47636986 240.15144348]
[27.94268799 228.51577759]
[37.40900803 216.88011169]
[46.87532806 205.24444580]
[56.34164429 193.60877991]
[65.80796814 181.97309875]
[75.27428436 170.33743286]
[84.74060059 158.70176697]
[94.09294891 146.97428894]
[103.33043671 135.15612793]
[74.14437866 116.67436981]
[77.24290466 86.97983551]
[66.89813995 76.11770630]
[56.55337524 65.25557709]
[46.20861435 54.39345169]
[35.86384964 43.53131866]
[25.51908493 32.66918945]
[15.17432022 21.80706215]
[4.01410055 11.78461170]
[-7.89362001 2.66286922]
[-19.80134010 -6.45887375]
[-31.70906067 -15.58061695]
[-40.47239304 -18.33555794]
[-43.75782394 -24.99835014]
[-55.48529434 -34.35069656]
[-67.21276855 -43.70304489]
[-82.70964050 -42.12672806]
[-94.46973419 -51.77840042]
[-95.87700653 -66.56201172]
[-107.60447693 -75.91436005]
[-119.33195496 -85.26670837]
[-131.05941772 -94.61905670]
[-142.78689575 -103.97139740]
[-154.51437378 -113.32374573]
[-169.43586731 -109.06597900]
[-183.99867249 -114.42361450]
[-192.60310364 -127.33653259]
[-191.94056702 -142.83946228]
[-182.26582336 -154.97119141]
[-167.29901123 -159.06684875]
[-152.79518127 -153.55154419]
[-144.33134460 -140.54605103]
[-145.16201782 -125.05121613]
[-133.43455505 -115.69887543]
[-121.70707703 -106.34652710]
[-109.97960663 -96.99417877]
[-98.25213623 -87.64183044]
[-86.52465820 -78.28948212]
[-71.79856110 -80.20716095]
[-59.77200699 -70.88961029]
[-57.86042023 -55.43051529]
[-46.13294983 -46.07817078]
[-34.40547562 -36.72582245]
[-22.58731842 -27.48833656]
[-10.67959690 -18.36659431]
[1.22812319 -9.24485111]
[13.13584328 -0.12310827]
[10.58976555 -14.90544510]
[17.08318901 -28.42711067]
[30.21204948 -35.68197250]
[45.11564255 -33.98405838]
[56.27620316 -23.96198463]
[59.56174850 -9.32623482]
[53.75587082 4.50459242]
[41.00808334 12.40990162]
[26.03644943 11.46229744]
[36.38121414 22.32442665]
[46.72597885 33.18655777]
[57.07074356 44.04868698]
[67.41550446 54.91081619]
[77.76026917 65.77294159]
[88.10503387 76.63507080]
[106.16606903 71.40711975]
[125.20057678 79.82453918]
[135.31234741 100.28925323]
[147.39578247 91.40158844]
[159.47921753 82.51391602]
[171.56265259 73.62625122]
[183.64608765 64.73858643]
[195.72952271 55.85092163]
[207.81295776 46.96325684]
[219.89639282 38.07559204]
[222.02923584 22.41588020]
[234.66085815 12.91758442]
[250.29714966 15.21587276]
[259.66134644 27.94721222]
[257.19787598 43.55832672]
[244.36825562 52.78741455]
[228.78405762 50.15902710]
[216.70062256 59.04669189]
[204.61718750 67.93435669]
[192.53375244 76.82202148]
[180.45031738 85.70968628]
[168.36688232 94.59735107]
[156.28344727 103.48502350]
[144.20001221 112.37268829]
[144.93145752 127.35484314]
[157.82318115 135.02319336]
[170.71490479 142.69154358]
[183.60661316 150.35989380]
[196.49833679 158.02822876]
[210.70297241 152.06715393]
[225.52078247 155.57226562]
[235.31748962 166.99542236]
[236.49514771 181.81942749]
[249.38687134 189.48777771]
[262.27859497 197.15612793]
[275.17031860 204.82447815]
[288.06201172 212.49282837]
[300.95373535 220.16117859]
[314.31430054 212.58549500]
[329.67260742 212.72109985]
[342.89730835 220.53150940]
[350.43109131 233.91575623]
[350.24734497 249.27355957]
[342.39550781 262.47372437]
[328.98770142 269.96548462]
[313.63058472 269.73361206]
[300.45507812 261.84045410]
[293.00537109 248.40922546]
[293.28540039 233.05288696]
[280.39367676 225.38453674]
[267.50195312 217.71620178]
[254.61024475 210.04785156]
[241.71852112 202.37950134]
[228.82679749 194.71115112]
[215.23826599 200.75181580]
[200.52429199 197.59536743]
[190.37165833 186.24736023]
[188.82998657 170.91995239]
[175.93827820 163.25160217]
[163.04655457 155.58325195]
[150.15483093 147.91491699]
[137.26310730 140.24656677]
[144.90025330 153.15678406]
[157.37304688 161.48922729]
[164.67466736 174.59213257]
[165.19882202 189.58297729]
[158.83016968 203.16384888]
[146.96978760 212.34707642]
[132.22689819 215.11238098]
] def
/pairs [
[5 29]
[6 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[31 91]
[32 90]
[33 89]
[34 88]
[35 87]
[36 86]
[37 85]
[38 76]
[39 75]
[40 74]
[41 73]
[43 72]
[44 71]
[45 70]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[116 153]
[117 152]
[118 151]
[119 150]
[120 149]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
[129 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 29 2 gmark
29 cmark
8 27 1 gmark
9 26 1 gmark
11 24 1 gmark
11 cmark
12 23 1 gmark
23 cmark
14 21 2 gmark
14 cmark
15 20 2 gmark
32 cmark
90 cmark
33 89 2 gmark
34 88 3 gmark
35 87 3 gmark
36 cmark
38 76 3 gmark
38 cmark
40 74 3 gmark
41 73 2 gmark
44 cmark
71 cmark
65 cmark
53 62 2 gmark
53 cmark
62 cmark
94 115 2 gmark
94 cmark
95 114 3 gmark
95 cmark
114 cmark
113 cmark
98 cmark
99 110 3 gmark
101 cmark
116 153 2 gmark
153 cmark
117 cmark
152 cmark
118 151 1 gmark
119 150 3 gmark
119 cmark
120 149 2 gmark
149 cmark
125 144 2 gmark
125 cmark
144 cmark
126 143 3 gmark
128 141 1 gmark
128 cmark
141 cmark
140 cmark

% End Annotations
% show it
showpage
end
%%EOF
