%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Sat Apr 24 06:07:34 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUAUCAUGACGUUCGUGUUGUUUUAGAUUUCAUCUAAACGAACAAACUAAAAUGUCUGAUAAUGGACCCCAA___AACCAACGAAAUGCACCCCGCAUUACGUUUGGUGGACCCUCAGAUUCAACUGGCAGUAACCAGAAUGGAGAACGCAGUGGGGCAC\
) def
/coor [
[100.40838623 302.68750000]
[99.82314301 287.69891357]
[91.59516907 275.28323364]
[98.78814697 261.19168091]
[98.20290375 246.20309448]
[97.61766052 231.21452332]
[97.03242493 216.22593689]
[85.95713043 206.33283997]
[85.15009308 191.14062500]
[95.60197449 179.59092712]
[95.01673889 164.60234070]
[94.43149567 149.61376953]
[93.84625244 134.62518311]
[93.26100922 119.63660431]
[77.79579926 101.99456024]
[88.37334442 79.20289612]
[74.55752563 85.04440308]
[60.74170685 90.88590240]
[46.92588806 96.72740173]
[40.91437531 111.09749603]
[26.81995773 116.82479858]
[13.15731907 111.00518036]
[-0.65849942 116.84668732]
[-14.47431850 122.68818665]
[-28.29013634 128.52969360]
[-42.10595703 134.37118530]
[-55.92177582 140.21269226]
[-69.73759460 146.05419922]
[-81.97164917 157.79148865]
[-96.63697815 149.28475952]
[-92.52244568 132.83766174]
[-75.57909393 132.23837280]
[-61.76327896 126.39687347]
[-47.94746017 120.55537415]
[-34.13164139 114.71386719]
[-20.31582069 108.87236786]
[-6.50000191 103.03086853]
[7.31581688 97.18936157]
[12.65947533 83.33364868]
[26.58746529 77.21272278]
[41.08438492 82.91158295]
[54.90020370 77.07008362]
[68.71602631 71.22858429]
[82.53184509 65.38707733]
[67.74874115 67.92874146]
[53.79068375 62.43578339]
[44.70461655 50.50082016]
[43.12492752 35.58423233]
[49.50962067 22.01088715]
[62.00754547 13.71619892]
[76.99509430 13.10509968]
[90.12682343 20.35477066]
[97.59535980 33.36326599]
[97.23602295 48.35660172]
[101.00038147 33.83662796]
[104.76473999 19.31665611]
[108.52909851 4.79668379]
[112.29344940 -9.72328854]
[116.05780792 -24.24326134]
[110.18349457 -31.73345566]
[108.47003937 -40.95651627]
[111.18129730 -49.79270554]
[117.57882690 -56.27092743]
[126.11740875 -59.00828552]
[130.72482300 -73.28314972]
[127.60042572 -88.79278564]
[138.87300110 -98.52819824]
[143.48040771 -112.80306244]
[147.94833374 -127.12220001]
[152.27633667 -141.48425293]
[156.60433960 -155.84629822]
[160.93234253 -170.20834351]
[148.00204468 -162.60522461]
[133.05839539 -163.90426636]
[121.63401031 -173.62451172]
[117.95852661 -188.16723633]
[123.39273071 -202.14826965]
[135.92471313 -210.39141846]
[150.91474915 -209.84480286]
[162.81306458 -200.71081543]
[167.21453857 -186.36944580]
[173.72279358 -199.88397217]
[180.23104858 -213.39851379]
[179.24765015 -229.18913269]
[191.74087524 -237.29891968]
[198.24913025 -250.81344604]
[204.75738525 -264.32797241]
[211.26564026 -277.84249878]
[217.77389526 -291.35705566]
[213.85372925 -306.91375732]
[223.68652344 -319.59036255]
[239.72941589 -319.66238403]
[249.67565918 -307.07464600]
[245.89535522 -291.48333740]
[231.28843689 -284.84878540]
[224.78018188 -271.33425903]
[218.27192688 -257.81973267]
[211.76367188 -244.30519104]
[205.25540161 -230.79064941]
[206.70431519 -215.96669006]
[193.74557495 -206.89025879]
[187.23731995 -193.37571716]
[180.72906494 -179.86119080]
[175.29438782 -165.88034058]
[170.96638489 -151.51829529]
[166.63838196 -137.15623474]
[162.31037903 -122.79419708]
[163.39694214 -115.44530487]
[157.75527954 -108.19565582]
[153.14787292 -93.92078400]
[156.60182190 -79.43218994]
[144.99967957 -68.67574310]
[140.39227295 -54.40087509]
[146.53984070 -34.72722626]
[130.57778931 -20.47890282]
[126.81342316 -5.95893097]
[123.04906464 8.56104183]
[119.28470612 23.08101463]
[115.52035522 37.60098648]
[111.75599670 52.12096024]
[118.13208771 65.69834900]
[131.70947266 72.07444000]
[145.28686523 78.45053101]
[163.56861877 76.45098877]
[173.06237793 91.18463135]
[186.76159668 97.29459381]
[200.46080017 103.40455627]
[214.16001892 109.51451874]
[228.82675171 103.62702942]
[243.32775879 109.91164398]
[249.05984497 124.63980103]
[242.62226868 139.07354736]
[227.83433533 144.64961243]
[213.46945190 138.05979919]
[208.05004883 123.21372986]
[194.35084534 117.10376740]
[180.65162659 110.99380493]
[166.95242310 104.88384247]
[155.51531982 108.91941071]
[144.03471375 103.90060425]
[138.91076660 92.02792358]
[125.33338165 85.65182495]
[111.75599670 79.27573395]
[122.26149750 101.19607544]
[108.24958801 119.05136108]
[108.83483124 134.03994751]
[109.42007446 149.02851868]
[110.00531769 164.01710510]
[110.59055328 179.00567627]
[121.91118622 189.70526123]
[122.29118347 204.91415405]
[112.02100372 215.64070129]
[112.60623932 230.62928772]
[113.19148254 245.61785889]
[113.77672577 260.60644531]
[122.04656219 274.09423828]
[114.81172180 287.11367798]
[115.39696503 302.10226440]
[122.05667877 317.69342041]
[108.91841125 328.40893555]
] def
/pairs [
[1 158]
[2 157]
[4 155]
[5 154]
[6 153]
[7 152]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[16 44]
[17 43]
[18 42]
[19 41]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[64 113]
[65 112]
[67 110]
[68 109]
[69 107]
[70 106]
[71 105]
[72 104]
[81 103]
[82 102]
[83 101]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[121 143]
[122 142]
[123 141]
[125 138]
[126 137]
[127 136]
[128 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 158 1 gmark
5 154 1 gmark
6 cmark
7 152 1 gmark
13 146 1 gmark
26 34 1 gmark
27 33 1 gmark
28 32 1 gmark
59 115 1 gmark
81 cmark
82 102 1 gmark
86 cmark
128 135 1 gmark

% End Annotations
% show it
showpage
end
%%EOF
